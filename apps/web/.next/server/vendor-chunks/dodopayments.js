"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/dodopayments";
exports.ids = ["vendor-chunks/dodopayments"];
exports.modules = {

/***/ "(rsc)/../../node_modules/dodopayments/_shims/MultipartBody.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/dodopayments/_shims/MultipartBody.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultipartBody: () => (/* binding */ MultipartBody)\n/* harmony export */ });\n/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */ class MultipartBody {\n    constructor(body){\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return \"MultipartBody\";\n    }\n} //# sourceMappingURL=MultipartBody.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9fc2hpbXMvTXVsdGlwYXJ0Qm9keS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sTUFBTUE7SUFDVEMsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsSUFBSSxDQUFDQSxJQUFJLEdBQUdBO0lBQ2hCO0lBQ0EsSUFBSSxDQUFDQyxPQUFPQyxXQUFXLENBQUMsR0FBRztRQUN2QixPQUFPO0lBQ1g7QUFDSixFQUNBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aXNpdG9yaXEvd2ViLy4uLy4uL25vZGVfbW9kdWxlcy9kb2RvcGF5bWVudHMvX3NoaW1zL011bHRpcGFydEJvZHkubWpzPzc4MDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEaXNjbGFpbWVyOiBtb2R1bGVzIGluIF9zaGltcyBhcmVuJ3QgaW50ZW5kZWQgdG8gYmUgaW1wb3J0ZWQgYnkgU0RLIHVzZXJzLlxuICovXG5leHBvcnQgY2xhc3MgTXVsdGlwYXJ0Qm9keSB7XG4gICAgY29uc3RydWN0b3IoYm9keSkge1xuICAgICAgICB0aGlzLmJvZHkgPSBib2R5O1xuICAgIH1cbiAgICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgICAgIHJldHVybiAnTXVsdGlwYXJ0Qm9keSc7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TXVsdGlwYXJ0Qm9keS5tanMubWFwIl0sIm5hbWVzIjpbIk11bHRpcGFydEJvZHkiLCJjb25zdHJ1Y3RvciIsImJvZHkiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/_shims/MultipartBody.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/_shims/index.mjs":
/*!********************************************************!*\
  !*** ../../node_modules/dodopayments/_shims/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.File),\n/* harmony export */   FormData: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.FormData),\n/* harmony export */   Headers: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Headers),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   Request: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Request),\n/* harmony export */   Response: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.Response),\n/* harmony export */   auto: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.auto),\n/* harmony export */   fetch: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.fetch),\n/* harmony export */   fileFromPath: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.fileFromPath),\n/* harmony export */   getDefaultAgent: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.getDefaultAgent),\n/* harmony export */   getMultipartRequestOptions: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.getMultipartRequestOptions),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   isFsReadStream: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.isFsReadStream),\n/* harmony export */   kind: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.kind),\n/* harmony export */   setShims: () => (/* reexport safe */ _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.setShims)\n/* harmony export */ });\n/* harmony import */ var _registry_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registry.mjs */ \"(rsc)/../../node_modules/dodopayments/_shims/registry.mjs\");\n/* harmony import */ var dodopayments_shims_auto_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dodopayments/_shims/auto/runtime */ \"(rsc)/../../node_modules/dodopayments/_shims/node-runtime.mjs\");\n/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */ \n\nconst init = ()=>{\n    if (!_registry_mjs__WEBPACK_IMPORTED_MODULE_0__.kind) _registry_mjs__WEBPACK_IMPORTED_MODULE_0__.setShims(dodopayments_shims_auto_runtime__WEBPACK_IMPORTED_MODULE_1__.getRuntime(), {\n        auto: true\n    });\n};\n\ninit();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9fc2hpbXMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztDQUVDLEdBQ3VDO0FBQ2lCO0FBQ2xELE1BQU1FLE9BQU87SUFDbEIsSUFBSSxDQUFDRiwrQ0FBVSxFQUFFQSxtREFBYyxDQUFDQyx1RUFBZSxJQUFJO1FBQUVBLE1BQU07SUFBSztBQUNsRSxFQUFFO0FBQzZCO0FBRS9CQyIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aXNpdG9yaXEvd2ViLy4uLy4uL25vZGVfbW9kdWxlcy9kb2RvcGF5bWVudHMvX3NoaW1zL2luZGV4Lm1qcz84ZWI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGlzY2xhaW1lcjogbW9kdWxlcyBpbiBfc2hpbXMgYXJlbid0IGludGVuZGVkIHRvIGJlIGltcG9ydGVkIGJ5IFNESyB1c2Vycy5cbiAqL1xuaW1wb3J0ICogYXMgc2hpbXMgZnJvbSAnLi9yZWdpc3RyeS5tanMnO1xuaW1wb3J0ICogYXMgYXV0byBmcm9tICdkb2RvcGF5bWVudHMvX3NoaW1zL2F1dG8vcnVudGltZSc7XG5leHBvcnQgY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgaWYgKCFzaGltcy5raW5kKSBzaGltcy5zZXRTaGltcyhhdXRvLmdldFJ1bnRpbWUoKSwgeyBhdXRvOiB0cnVlIH0pO1xufTtcbmV4cG9ydCAqIGZyb20gJy4vcmVnaXN0cnkubWpzJztcblxuaW5pdCgpO1xuIl0sIm5hbWVzIjpbInNoaW1zIiwiYXV0byIsImluaXQiLCJraW5kIiwic2V0U2hpbXMiLCJnZXRSdW50aW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/_shims/index.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/_shims/node-runtime.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/dodopayments/_shims/node-runtime.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntime: () => (/* binding */ getRuntime)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"(rsc)/../../node_modules/dodopayments/node_modules/node-fetch/lib/index.mjs\");\n/* harmony import */ var formdata_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! formdata-node */ \"(rsc)/../../node_modules/formdata-node/lib/esm/index.js\");\n/* harmony import */ var agentkeepalive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! agentkeepalive */ \"(rsc)/../../node_modules/agentkeepalive/index.js\");\n/* harmony import */ var abort_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! abort-controller */ \"(rsc)/../../node_modules/abort-controller/dist/abort-controller.js\");\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:fs */ \"node:fs\");\n/* harmony import */ var form_data_encoder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! form-data-encoder */ \"(rsc)/../../node_modules/form-data-encoder/lib/esm/index.js\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _MultipartBody_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MultipartBody.mjs */ \"(rsc)/../../node_modules/dodopayments/_shims/MultipartBody.mjs\");\n/* harmony import */ var node_stream_web__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! node:stream/web */ \"node:stream/web\");\n\n\n\n\n\n\n\n\n\nlet fileFromPathWarned = false;\nasync function fileFromPath(path, ...args) {\n    // this import fails in environments that don't handle export maps correctly, like old versions of Jest\n    const { fileFromPath: _fileFromPath } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/formdata-node\"), __webpack_require__.e(\"vendor-chunks/node-domexception\")]).then(__webpack_require__.bind(__webpack_require__, /*! formdata-node/file-from-path */ \"(rsc)/../../node_modules/formdata-node/lib/esm/fileFromPath.js\"));\n    if (!fileFromPathWarned) {\n        console.warn(`fileFromPath is deprecated; use fs.createReadStream(${JSON.stringify(path)}) instead`);\n        fileFromPathWarned = true;\n    }\n    // @ts-ignore\n    return await _fileFromPath(path, ...args);\n}\nconst defaultHttpAgent = new agentkeepalive__WEBPACK_IMPORTED_MODULE_2__({\n    keepAlive: true,\n    timeout: 5 * 60 * 1000\n});\nconst defaultHttpsAgent = new agentkeepalive__WEBPACK_IMPORTED_MODULE_2__.HttpsAgent({\n    keepAlive: true,\n    timeout: 5 * 60 * 1000\n});\nasync function getMultipartRequestOptions(form, opts) {\n    const encoder = new form_data_encoder__WEBPACK_IMPORTED_MODULE_5__.FormDataEncoder(form);\n    const readable = node_stream__WEBPACK_IMPORTED_MODULE_6__.Readable.from(encoder);\n    const body = new _MultipartBody_mjs__WEBPACK_IMPORTED_MODULE_8__.MultipartBody(readable);\n    const headers = {\n        ...opts.headers,\n        ...encoder.headers,\n        \"Content-Length\": encoder.contentLength\n    };\n    return {\n        ...opts,\n        body: body,\n        headers\n    };\n}\nfunction getRuntime() {\n    // Polyfill global object if needed.\n    if (typeof AbortController === \"undefined\") {\n        // @ts-expect-error (the types are subtly different, but compatible in practice)\n        globalThis.AbortController = abort_controller__WEBPACK_IMPORTED_MODULE_3__.AbortController;\n    }\n    return {\n        kind: \"node\",\n        fetch: node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        Request: node_fetch__WEBPACK_IMPORTED_MODULE_0__.Request,\n        Response: node_fetch__WEBPACK_IMPORTED_MODULE_0__.Response,\n        Headers: node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers,\n        FormData: formdata_node__WEBPACK_IMPORTED_MODULE_1__.FormData,\n        Blob: formdata_node__WEBPACK_IMPORTED_MODULE_1__.Blob,\n        File: formdata_node__WEBPACK_IMPORTED_MODULE_1__.File,\n        ReadableStream: node_stream_web__WEBPACK_IMPORTED_MODULE_7__.ReadableStream,\n        getMultipartRequestOptions,\n        getDefaultAgent: (url)=>url.startsWith(\"https\") ? defaultHttpsAgent : defaultHttpAgent,\n        fileFromPath,\n        isFsReadStream: (value)=>value instanceof node_fs__WEBPACK_IMPORTED_MODULE_4__.ReadStream\n    };\n} //# sourceMappingURL=node-runtime.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9fc2hpbXMvbm9kZS1ydW50aW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ0c7QUFDUTtBQUNrQztBQUN6QjtBQUNEO0FBQ2I7QUFDYTtBQUNIO0FBQ2pELElBQUlXLHFCQUFxQjtBQUN6QixlQUFlQyxhQUFhQyxJQUFJLEVBQUUsR0FBR0MsSUFBSTtJQUNyQyx1R0FBdUc7SUFDdkcsTUFBTSxFQUFFRixjQUFjRyxhQUFhLEVBQUUsR0FBRyxNQUFNLHNTQUFPO0lBQ3JELElBQUksQ0FBQ0osb0JBQW9CO1FBQ3JCSyxRQUFRQyxJQUFJLENBQUMsQ0FBQyxvREFBb0QsRUFBRUMsS0FBS0MsU0FBUyxDQUFDTixNQUFNLFNBQVMsQ0FBQztRQUNuR0YscUJBQXFCO0lBQ3pCO0lBQ0EsYUFBYTtJQUNiLE9BQU8sTUFBTUksY0FBY0YsU0FBU0M7QUFDeEM7QUFDQSxNQUFNTSxtQkFBbUIsSUFBSWxCLDJDQUFjQSxDQUFDO0lBQUVtQixXQUFXO0lBQU1DLFNBQVMsSUFBSSxLQUFLO0FBQUs7QUFDdEYsTUFBTUMsb0JBQW9CLElBQUlyQixzREFBeUIsQ0FBQztJQUFFbUIsV0FBVztJQUFNQyxTQUFTLElBQUksS0FBSztBQUFLO0FBQ2xHLGVBQWVHLDJCQUEyQkMsSUFBSSxFQUFFQyxJQUFJO0lBQ2hELE1BQU1DLFVBQVUsSUFBSXJCLDhEQUFlQSxDQUFDbUI7SUFDcEMsTUFBTUcsV0FBV3JCLGlEQUFRQSxDQUFDc0IsSUFBSSxDQUFDRjtJQUMvQixNQUFNRyxPQUFPLElBQUl0Qiw2REFBYUEsQ0FBQ29CO0lBQy9CLE1BQU1HLFVBQVU7UUFDWixHQUFHTCxLQUFLSyxPQUFPO1FBQ2YsR0FBR0osUUFBUUksT0FBTztRQUNsQixrQkFBa0JKLFFBQVFLLGFBQWE7SUFDM0M7SUFDQSxPQUFPO1FBQUUsR0FBR04sSUFBSTtRQUFFSSxNQUFNQTtRQUFNQztJQUFRO0FBQzFDO0FBQ08sU0FBU0U7SUFDWixvQ0FBb0M7SUFDcEMsSUFBSSxPQUFPL0Isb0JBQW9CLGFBQWE7UUFDeEMsZ0ZBQWdGO1FBQ2hGZ0MsV0FBV2hDLGVBQWUsR0FBR0MsNkRBQXVCQTtJQUN4RDtJQUNBLE9BQU87UUFDSGdDLE1BQU07UUFDTkMsT0FBT3JDLGtEQUFVO1FBQ2pCdUMsU0FBU3ZDLCtDQUFVO1FBQ25Cd0MsVUFBVXhDLGdEQUFXO1FBQ3JCeUMsU0FBU3pDLCtDQUFVO1FBQ25CMEMsVUFBVXpDLG1EQUFXO1FBQ3JCMEMsTUFBTTFDLCtDQUFPO1FBQ2IyQyxNQUFNM0MsK0NBQU87UUFDYlMsY0FBY0EsNkRBQUFBO1FBQ2RlO1FBQ0FvQixpQkFBaUIsQ0FBQ0MsTUFBU0EsSUFBSUMsVUFBVSxDQUFDLFdBQVd4QixvQkFBb0JIO1FBQ3pFUjtRQUNBb0MsZ0JBQWdCLENBQUNDLFFBQVVBLGlCQUFpQjNDLCtDQUFZQTtJQUM1RDtBQUNKLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9fc2hpbXMvbm9kZS1ydW50aW1lLm1qcz9lN2NhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG5mIGZyb20gJ25vZGUtZmV0Y2gnO1xuaW1wb3J0ICogYXMgZmQgZnJvbSAnZm9ybWRhdGEtbm9kZSc7XG5pbXBvcnQgS2VlcEFsaXZlQWdlbnQgZnJvbSAnYWdlbnRrZWVwYWxpdmUnO1xuaW1wb3J0IHsgQWJvcnRDb250cm9sbGVyIGFzIEFib3J0Q29udHJvbGxlclBvbHlmaWxsIH0gZnJvbSAnYWJvcnQtY29udHJvbGxlcic7XG5pbXBvcnQgeyBSZWFkU3RyZWFtIGFzIEZzUmVhZFN0cmVhbSB9IGZyb20gJ25vZGU6ZnMnO1xuaW1wb3J0IHsgRm9ybURhdGFFbmNvZGVyIH0gZnJvbSAnZm9ybS1kYXRhLWVuY29kZXInO1xuaW1wb3J0IHsgUmVhZGFibGUgfSBmcm9tICdub2RlOnN0cmVhbSc7XG5pbXBvcnQgeyBNdWx0aXBhcnRCb2R5IH0gZnJvbSBcIi4vTXVsdGlwYXJ0Qm9keS5tanNcIjtcbmltcG9ydCB7IFJlYWRhYmxlU3RyZWFtIH0gZnJvbSAnbm9kZTpzdHJlYW0vd2ViJztcbmxldCBmaWxlRnJvbVBhdGhXYXJuZWQgPSBmYWxzZTtcbmFzeW5jIGZ1bmN0aW9uIGZpbGVGcm9tUGF0aChwYXRoLCAuLi5hcmdzKSB7XG4gICAgLy8gdGhpcyBpbXBvcnQgZmFpbHMgaW4gZW52aXJvbm1lbnRzIHRoYXQgZG9uJ3QgaGFuZGxlIGV4cG9ydCBtYXBzIGNvcnJlY3RseSwgbGlrZSBvbGQgdmVyc2lvbnMgb2YgSmVzdFxuICAgIGNvbnN0IHsgZmlsZUZyb21QYXRoOiBfZmlsZUZyb21QYXRoIH0gPSBhd2FpdCBpbXBvcnQoJ2Zvcm1kYXRhLW5vZGUvZmlsZS1mcm9tLXBhdGgnKTtcbiAgICBpZiAoIWZpbGVGcm9tUGF0aFdhcm5lZCkge1xuICAgICAgICBjb25zb2xlLndhcm4oYGZpbGVGcm9tUGF0aCBpcyBkZXByZWNhdGVkOyB1c2UgZnMuY3JlYXRlUmVhZFN0cmVhbSgke0pTT04uc3RyaW5naWZ5KHBhdGgpfSkgaW5zdGVhZGApO1xuICAgICAgICBmaWxlRnJvbVBhdGhXYXJuZWQgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmV0dXJuIGF3YWl0IF9maWxlRnJvbVBhdGgocGF0aCwgLi4uYXJncyk7XG59XG5jb25zdCBkZWZhdWx0SHR0cEFnZW50ID0gbmV3IEtlZXBBbGl2ZUFnZW50KHsga2VlcEFsaXZlOiB0cnVlLCB0aW1lb3V0OiA1ICogNjAgKiAxMDAwIH0pO1xuY29uc3QgZGVmYXVsdEh0dHBzQWdlbnQgPSBuZXcgS2VlcEFsaXZlQWdlbnQuSHR0cHNBZ2VudCh7IGtlZXBBbGl2ZTogdHJ1ZSwgdGltZW91dDogNSAqIDYwICogMTAwMCB9KTtcbmFzeW5jIGZ1bmN0aW9uIGdldE11bHRpcGFydFJlcXVlc3RPcHRpb25zKGZvcm0sIG9wdHMpIHtcbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IEZvcm1EYXRhRW5jb2Rlcihmb3JtKTtcbiAgICBjb25zdCByZWFkYWJsZSA9IFJlYWRhYmxlLmZyb20oZW5jb2Rlcik7XG4gICAgY29uc3QgYm9keSA9IG5ldyBNdWx0aXBhcnRCb2R5KHJlYWRhYmxlKTtcbiAgICBjb25zdCBoZWFkZXJzID0ge1xuICAgICAgICAuLi5vcHRzLmhlYWRlcnMsXG4gICAgICAgIC4uLmVuY29kZXIuaGVhZGVycyxcbiAgICAgICAgJ0NvbnRlbnQtTGVuZ3RoJzogZW5jb2Rlci5jb250ZW50TGVuZ3RoLFxuICAgIH07XG4gICAgcmV0dXJuIHsgLi4ub3B0cywgYm9keTogYm9keSwgaGVhZGVycyB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFJ1bnRpbWUoKSB7XG4gICAgLy8gUG9seWZpbGwgZ2xvYmFsIG9iamVjdCBpZiBuZWVkZWQuXG4gICAgaWYgKHR5cGVvZiBBYm9ydENvbnRyb2xsZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgKHRoZSB0eXBlcyBhcmUgc3VidGx5IGRpZmZlcmVudCwgYnV0IGNvbXBhdGlibGUgaW4gcHJhY3RpY2UpXG4gICAgICAgIGdsb2JhbFRoaXMuQWJvcnRDb250cm9sbGVyID0gQWJvcnRDb250cm9sbGVyUG9seWZpbGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGtpbmQ6ICdub2RlJyxcbiAgICAgICAgZmV0Y2g6IG5mLmRlZmF1bHQsXG4gICAgICAgIFJlcXVlc3Q6IG5mLlJlcXVlc3QsXG4gICAgICAgIFJlc3BvbnNlOiBuZi5SZXNwb25zZSxcbiAgICAgICAgSGVhZGVyczogbmYuSGVhZGVycyxcbiAgICAgICAgRm9ybURhdGE6IGZkLkZvcm1EYXRhLFxuICAgICAgICBCbG9iOiBmZC5CbG9iLFxuICAgICAgICBGaWxlOiBmZC5GaWxlLFxuICAgICAgICBSZWFkYWJsZVN0cmVhbSxcbiAgICAgICAgZ2V0TXVsdGlwYXJ0UmVxdWVzdE9wdGlvbnMsXG4gICAgICAgIGdldERlZmF1bHRBZ2VudDogKHVybCkgPT4gKHVybC5zdGFydHNXaXRoKCdodHRwcycpID8gZGVmYXVsdEh0dHBzQWdlbnQgOiBkZWZhdWx0SHR0cEFnZW50KSxcbiAgICAgICAgZmlsZUZyb21QYXRoLFxuICAgICAgICBpc0ZzUmVhZFN0cmVhbTogKHZhbHVlKSA9PiB2YWx1ZSBpbnN0YW5jZW9mIEZzUmVhZFN0cmVhbSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1ydW50aW1lLm1qcy5tYXAiXSwibmFtZXMiOlsibmYiLCJmZCIsIktlZXBBbGl2ZUFnZW50IiwiQWJvcnRDb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyUG9seWZpbGwiLCJSZWFkU3RyZWFtIiwiRnNSZWFkU3RyZWFtIiwiRm9ybURhdGFFbmNvZGVyIiwiUmVhZGFibGUiLCJNdWx0aXBhcnRCb2R5IiwiUmVhZGFibGVTdHJlYW0iLCJmaWxlRnJvbVBhdGhXYXJuZWQiLCJmaWxlRnJvbVBhdGgiLCJwYXRoIiwiYXJncyIsIl9maWxlRnJvbVBhdGgiLCJjb25zb2xlIiwid2FybiIsIkpTT04iLCJzdHJpbmdpZnkiLCJkZWZhdWx0SHR0cEFnZW50Iiwia2VlcEFsaXZlIiwidGltZW91dCIsImRlZmF1bHRIdHRwc0FnZW50IiwiSHR0cHNBZ2VudCIsImdldE11bHRpcGFydFJlcXVlc3RPcHRpb25zIiwiZm9ybSIsIm9wdHMiLCJlbmNvZGVyIiwicmVhZGFibGUiLCJmcm9tIiwiYm9keSIsImhlYWRlcnMiLCJjb250ZW50TGVuZ3RoIiwiZ2V0UnVudGltZSIsImdsb2JhbFRoaXMiLCJraW5kIiwiZmV0Y2giLCJkZWZhdWx0IiwiUmVxdWVzdCIsIlJlc3BvbnNlIiwiSGVhZGVycyIsIkZvcm1EYXRhIiwiQmxvYiIsIkZpbGUiLCJnZXREZWZhdWx0QWdlbnQiLCJ1cmwiLCJzdGFydHNXaXRoIiwiaXNGc1JlYWRTdHJlYW0iLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/_shims/node-runtime.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/_shims/registry.mjs":
/*!***********************************************************!*\
  !*** ../../node_modules/dodopayments/_shims/registry.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   File: () => (/* binding */ File),\n/* harmony export */   FormData: () => (/* binding */ FormData),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   ReadableStream: () => (/* binding */ ReadableStream),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   auto: () => (/* binding */ auto),\n/* harmony export */   fetch: () => (/* binding */ fetch),\n/* harmony export */   fileFromPath: () => (/* binding */ fileFromPath),\n/* harmony export */   getDefaultAgent: () => (/* binding */ getDefaultAgent),\n/* harmony export */   getMultipartRequestOptions: () => (/* binding */ getMultipartRequestOptions),\n/* harmony export */   isFsReadStream: () => (/* binding */ isFsReadStream),\n/* harmony export */   kind: () => (/* binding */ kind),\n/* harmony export */   setShims: () => (/* binding */ setShims)\n/* harmony export */ });\nlet auto = false;\nlet kind = undefined;\nlet fetch = undefined;\nlet Request = undefined;\nlet Response = undefined;\nlet Headers = undefined;\nlet FormData = undefined;\nlet Blob = undefined;\nlet File = undefined;\nlet ReadableStream = undefined;\nlet getMultipartRequestOptions = undefined;\nlet getDefaultAgent = undefined;\nlet fileFromPath = undefined;\nlet isFsReadStream = undefined;\nfunction setShims(shims, options = {\n    auto: false\n}) {\n    if (auto) {\n        throw new Error(`you must \\`import 'dodopayments/shims/${shims.kind}'\\` before importing anything else from dodopayments`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'dodopayments/shims/${shims.kind}'\\` after \\`import 'dodopayments/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n} //# sourceMappingURL=registry.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9fc2hpbXMvcmVnaXN0cnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFPLElBQUlBLE9BQU8sTUFBTTtBQUNqQixJQUFJQyxPQUFPQyxVQUFVO0FBQ3JCLElBQUlDLFFBQVFELFVBQVU7QUFDdEIsSUFBSUUsVUFBVUYsVUFBVTtBQUN4QixJQUFJRyxXQUFXSCxVQUFVO0FBQ3pCLElBQUlJLFVBQVVKLFVBQVU7QUFDeEIsSUFBSUssV0FBV0wsVUFBVTtBQUN6QixJQUFJTSxPQUFPTixVQUFVO0FBQ3JCLElBQUlPLE9BQU9QLFVBQVU7QUFDckIsSUFBSVEsaUJBQWlCUixVQUFVO0FBQy9CLElBQUlTLDZCQUE2QlQsVUFBVTtBQUMzQyxJQUFJVSxrQkFBa0JWLFVBQVU7QUFDaEMsSUFBSVcsZUFBZVgsVUFBVTtBQUM3QixJQUFJWSxpQkFBaUJaLFVBQVU7QUFDL0IsU0FBU2EsU0FBU0MsS0FBSyxFQUFFQyxVQUFVO0lBQUVqQixNQUFNO0FBQU0sQ0FBQztJQUNyRCxJQUFJQSxNQUFNO1FBQ04sTUFBTSxJQUFJa0IsTUFBTSxDQUFDLHNDQUFzQyxFQUFFRixNQUFNZixJQUFJLENBQUMsb0RBQW9ELENBQUM7SUFDN0g7SUFDQSxJQUFJQSxNQUFNO1FBQ04sTUFBTSxJQUFJaUIsTUFBTSxDQUFDLG1DQUFtQyxFQUFFRixNQUFNZixJQUFJLENBQUMsdUNBQXVDLEVBQUVBLEtBQUssR0FBRyxDQUFDO0lBQ3ZIO0lBQ0FELE9BQU9pQixRQUFRakIsSUFBSTtJQUNuQkMsT0FBT2UsTUFBTWYsSUFBSTtJQUNqQkUsUUFBUWEsTUFBTWIsS0FBSztJQUNuQkMsVUFBVVksTUFBTVosT0FBTztJQUN2QkMsV0FBV1csTUFBTVgsUUFBUTtJQUN6QkMsVUFBVVUsTUFBTVYsT0FBTztJQUN2QkMsV0FBV1MsTUFBTVQsUUFBUTtJQUN6QkMsT0FBT1EsTUFBTVIsSUFBSTtJQUNqQkMsT0FBT08sTUFBTVAsSUFBSTtJQUNqQkMsaUJBQWlCTSxNQUFNTixjQUFjO0lBQ3JDQyw2QkFBNkJLLE1BQU1MLDBCQUEwQjtJQUM3REMsa0JBQWtCSSxNQUFNSixlQUFlO0lBQ3ZDQyxlQUFlRyxNQUFNSCxZQUFZO0lBQ2pDQyxpQkFBaUJFLE1BQU1GLGNBQWM7QUFDekMsRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL19zaGltcy9yZWdpc3RyeS5tanM/ZmM3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgbGV0IGF1dG8gPSBmYWxzZTtcbmV4cG9ydCBsZXQga2luZCA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgZmV0Y2ggPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IFJlcXVlc3QgPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IFJlc3BvbnNlID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBIZWFkZXJzID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBGb3JtRGF0YSA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgQmxvYiA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgRmlsZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgUmVhZGFibGVTdHJlYW0gPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IGdldE11bHRpcGFydFJlcXVlc3RPcHRpb25zID0gdW5kZWZpbmVkO1xuZXhwb3J0IGxldCBnZXREZWZhdWx0QWdlbnQgPSB1bmRlZmluZWQ7XG5leHBvcnQgbGV0IGZpbGVGcm9tUGF0aCA9IHVuZGVmaW5lZDtcbmV4cG9ydCBsZXQgaXNGc1JlYWRTdHJlYW0gPSB1bmRlZmluZWQ7XG5leHBvcnQgZnVuY3Rpb24gc2V0U2hpbXMoc2hpbXMsIG9wdGlvbnMgPSB7IGF1dG86IGZhbHNlIH0pIHtcbiAgICBpZiAoYXV0bykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHlvdSBtdXN0IFxcYGltcG9ydCAnZG9kb3BheW1lbnRzL3NoaW1zLyR7c2hpbXMua2luZH0nXFxgIGJlZm9yZSBpbXBvcnRpbmcgYW55dGhpbmcgZWxzZSBmcm9tIGRvZG9wYXltZW50c2ApO1xuICAgIH1cbiAgICBpZiAoa2luZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNhbid0IFxcYGltcG9ydCAnZG9kb3BheW1lbnRzL3NoaW1zLyR7c2hpbXMua2luZH0nXFxgIGFmdGVyIFxcYGltcG9ydCAnZG9kb3BheW1lbnRzL3NoaW1zLyR7a2luZH0nXFxgYCk7XG4gICAgfVxuICAgIGF1dG8gPSBvcHRpb25zLmF1dG87XG4gICAga2luZCA9IHNoaW1zLmtpbmQ7XG4gICAgZmV0Y2ggPSBzaGltcy5mZXRjaDtcbiAgICBSZXF1ZXN0ID0gc2hpbXMuUmVxdWVzdDtcbiAgICBSZXNwb25zZSA9IHNoaW1zLlJlc3BvbnNlO1xuICAgIEhlYWRlcnMgPSBzaGltcy5IZWFkZXJzO1xuICAgIEZvcm1EYXRhID0gc2hpbXMuRm9ybURhdGE7XG4gICAgQmxvYiA9IHNoaW1zLkJsb2I7XG4gICAgRmlsZSA9IHNoaW1zLkZpbGU7XG4gICAgUmVhZGFibGVTdHJlYW0gPSBzaGltcy5SZWFkYWJsZVN0cmVhbTtcbiAgICBnZXRNdWx0aXBhcnRSZXF1ZXN0T3B0aW9ucyA9IHNoaW1zLmdldE11bHRpcGFydFJlcXVlc3RPcHRpb25zO1xuICAgIGdldERlZmF1bHRBZ2VudCA9IHNoaW1zLmdldERlZmF1bHRBZ2VudDtcbiAgICBmaWxlRnJvbVBhdGggPSBzaGltcy5maWxlRnJvbVBhdGg7XG4gICAgaXNGc1JlYWRTdHJlYW0gPSBzaGltcy5pc0ZzUmVhZFN0cmVhbTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZ2lzdHJ5Lm1qcy5tYXAiXSwibmFtZXMiOlsiYXV0byIsImtpbmQiLCJ1bmRlZmluZWQiLCJmZXRjaCIsIlJlcXVlc3QiLCJSZXNwb25zZSIsIkhlYWRlcnMiLCJGb3JtRGF0YSIsIkJsb2IiLCJGaWxlIiwiUmVhZGFibGVTdHJlYW0iLCJnZXRNdWx0aXBhcnRSZXF1ZXN0T3B0aW9ucyIsImdldERlZmF1bHRBZ2VudCIsImZpbGVGcm9tUGF0aCIsImlzRnNSZWFkU3RyZWFtIiwic2V0U2hpbXMiLCJzaGltcyIsIm9wdGlvbnMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/_shims/registry.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/core.mjs":
/*!************************************************!*\
  !*** ../../node_modules/dodopayments/core.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIClient: () => (/* binding */ APIClient),\n/* harmony export */   APIPromise: () => (/* binding */ APIPromise),\n/* harmony export */   AbstractPage: () => (/* binding */ AbstractPage),\n/* harmony export */   PagePromise: () => (/* binding */ PagePromise),\n/* harmony export */   castToError: () => (/* binding */ castToError),\n/* harmony export */   coerceBoolean: () => (/* binding */ coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* binding */ coerceFloat),\n/* harmony export */   coerceInteger: () => (/* binding */ coerceInteger),\n/* harmony export */   createForm: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.createForm),\n/* harmony export */   createResponseHeaders: () => (/* binding */ createResponseHeaders),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   ensurePresent: () => (/* binding */ ensurePresent),\n/* harmony export */   getHeader: () => (/* binding */ getHeader),\n/* harmony export */   getRequiredHeader: () => (/* binding */ getRequiredHeader),\n/* harmony export */   hasOwn: () => (/* binding */ hasOwn),\n/* harmony export */   isEmptyObj: () => (/* binding */ isEmptyObj),\n/* harmony export */   isHeadersProtocol: () => (/* binding */ isHeadersProtocol),\n/* harmony export */   isObj: () => (/* binding */ isObj),\n/* harmony export */   isRequestOptions: () => (/* binding */ isRequestOptions),\n/* harmony export */   isRunningInBrowser: () => (/* binding */ isRunningInBrowser),\n/* harmony export */   maybeCoerceBoolean: () => (/* binding */ maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* binding */ maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* binding */ maybeCoerceInteger),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions),\n/* harmony export */   readEnv: () => (/* binding */ readEnv),\n/* harmony export */   safeJSON: () => (/* binding */ safeJSON),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   toBase64: () => (/* binding */ toBase64)\n/* harmony export */ });\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./version.mjs */ \"(rsc)/../../node_modules/dodopayments/version.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/../../node_modules/dodopayments/error.mjs\");\n/* harmony import */ var _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shims/index.mjs */ \"(rsc)/../../node_modules/dodopayments/_shims/index.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/../../node_modules/dodopayments/uploads.mjs\");\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _APIClient_baseURLOverridden, _AbstractPage_client;\n\n\n\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\n(0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.init)();\n\n\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get(\"content-type\");\n    const mediaType = contentType?.split(\";\")[0]?.trim();\n    const isJSON = mediaType?.includes(\"application/json\") || mediaType?.endsWith(\"+json\");\n    if (isJSON) {\n        const json = await response.json();\n        debug(\"response\", response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug(\"response\", response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */ class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse){\n        super((resolve)=>{\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props)=>transform(await this.parseResponse(props), props));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'dodopayments'`:\n     * - `import 'dodopayments/shims/node'` (if you're running on Node)\n     * - `import 'dodopayments/shims/web'` (otherwise)\n     */ asResponse() {\n        return this.responsePromise.then((p)=>p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'dodopayments'`:\n     * - `import 'dodopayments/shims/node'` (if you're running on Node)\n     * - `import 'dodopayments/shims/web'` (otherwise)\n     */ async withResponse() {\n        const [data, response] = await Promise.all([\n            this.parse(),\n            this.asResponse()\n        ]);\n        return {\n            data,\n            response\n        };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nclass APIClient {\n    constructor({ baseURL, baseURLOverridden, maxRetries = 2, timeout = 60000, httpAgent, fetch: overriddenFetch }){\n        _APIClient_baseURLOverridden.set(this, void 0);\n        this.baseURL = baseURL;\n        __classPrivateFieldSet(this, _APIClient_baseURLOverridden, baseURLOverridden, \"f\");\n        this.maxRetries = validatePositiveInteger(\"maxRetries\", maxRetries);\n        this.timeout = validatePositiveInteger(\"timeout\", timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */ defaultHeaders(opts) {\n        return {\n            Accept: \"application/json\",\n            ...[\n                \"head\",\n                \"get\"\n            ].includes(opts.method) ? {} : {\n                \"Content-Type\": \"application/json\"\n            },\n            \"User-Agent\": this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts)\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */ validateHeaders(headers, customHeaders) {}\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest(\"get\", path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest(\"post\", path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest(\"patch\", path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest(\"put\", path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest(\"delete\", path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts)=>{\n            const body = opts && (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.isBlobLike)(opts?.body) ? new DataView(await opts.body.arrayBuffer()) : opts?.body instanceof DataView ? opts.body : opts?.body instanceof ArrayBuffer ? new DataView(opts.body) : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer) : opts?.body;\n            return {\n                method,\n                path,\n                ...opts,\n                body\n            };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, {\n            method: \"get\",\n            path,\n            ...opts\n        });\n    }\n    calculateContentLength(body) {\n        if (typeof body === \"string\") {\n            if (typeof Buffer !== \"undefined\") {\n                return Buffer.byteLength(body, \"utf8\").toString();\n            }\n            if (typeof TextEncoder !== \"undefined\") {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        } else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = {\n            ...inputOptions\n        };\n        const { method, path, query, defaultBaseURL, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || options.__binaryRequest && typeof options.body === \"string\" ? options.body : (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.isMultipartBody)(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if (\"timeout\" in options) validatePositiveInteger(\"timeout\", options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getDefaultAgent)(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === \"number\" && minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== \"get\") {\n            if (!inputOptions.idempotencyKey) inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({\n            options,\n            headers,\n            contentLength,\n            retryCount\n        });\n        const req = {\n            method,\n            ...body && {\n                body: body\n            },\n            headers: reqHeaders,\n            ...httpAgent && {\n                agent: httpAgent\n            },\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null\n        };\n        return {\n            req,\n            url,\n            timeout: options.timeout\n        };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders[\"content-length\"] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if ((0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.isMultipartBody)(options.body) && _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.kind !== \"node\") {\n            delete reqHeaders[\"content-type\"];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, \"x-stainless-retry-count\") === undefined && getHeader(headers, \"x-stainless-retry-count\") === undefined) {\n            reqHeaders[\"x-stainless-retry-count\"] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, \"x-stainless-timeout\") === undefined && getHeader(headers, \"x-stainless-timeout\") === undefined && options.timeout) {\n            reqHeaders[\"x-stainless-timeout\"] = String(Math.trunc(options.timeout / 1000));\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */ async prepareOptions(options) {}\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */ async prepareRequest(request, { url, options }) {}\n    parseHeaders(headers) {\n        return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map((header)=>[\n                ...header\n            ])) : {\n            ...headers\n        };\n    }\n    makeStatusError(status, error, message, headers) {\n        return _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining\n        });\n        await this.prepareRequest(req, {\n            url,\n            options\n        });\n        debug(\"request\", url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === \"AbortError\") {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIConnectionTimeoutError();\n            }\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIConnectionError({\n                cause: response\n            });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e)=>castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return {\n            response,\n            options,\n            controller\n        };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = !__classPrivateFieldGet(this, _APIClient_baseURLOverridden, \"f\") && defaultBaseURL || this.baseURL;\n        const url = isAbsoluteURL(path) ? new URL(path) : new URL(baseURL + (baseURL.endsWith(\"/\") && path.startsWith(\"/\") ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = {\n                ...defaultQuery,\n                ...query\n            };\n        }\n        if (typeof query === \"object\" && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query).filter(([_, value])=>typeof value !== \"undefined\").map(([key, value])=>{\n            if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        }).join(\"&\");\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal) signal.addEventListener(\"abort\", ()=>controller.abort());\n        const timeout = setTimeout(()=>controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return(// use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(()=>{\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get(\"x-should-retry\");\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === \"true\") return true;\n        if (shouldRetryHeader === \"false\") return false;\n        // Retry on request timeouts.\n        if (response.status === 408) return true;\n        // Retry on lock timeouts.\n        if (response.status === 409) return true;\n        // Retry on rate limits.\n        if (response.status === 429) return true;\n        // Retry internal errors.\n        if (response.status >= 500) return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.[\"retry-after-ms\"];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.[\"retry-after\"];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            } else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${_version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION}`;\n    }\n}\n_APIClient_baseURLOverridden = new WeakMap();\nclass AbstractPage {\n    constructor(client, response, body, options){\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length) return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(\"No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.\");\n        }\n        const nextOptions = {\n            ...this.options\n        };\n        if (\"params\" in nextInfo && typeof nextOptions.query === \"object\") {\n            nextOptions.query = {\n                ...nextOptions.query,\n                ...nextInfo.params\n            };\n        } else if (\"url\" in nextInfo) {\n            const params = [\n                ...Object.entries(nextOptions.query || {}),\n                ...nextInfo.url.searchParams.entries()\n            ];\n            for (const [key, value] of params){\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while(page.hasNextPage()){\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()){\n            for (const item of page.getPaginatedItems()){\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */ class PagePromise extends APIPromise {\n    constructor(client, request, Page){\n        super(request, async (props)=>new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */ async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page){\n            yield item;\n        }\n    }\n}\nconst createResponseHeaders = (headers)=>{\n    return new Proxy(Object.fromEntries(// @ts-ignore\n    headers.entries()), {\n        get (target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        }\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    defaultBaseURL: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryRequest: true,\n    __binaryResponse: true\n};\nconst isRequestOptions = (obj)=>{\n    return typeof obj === \"object\" && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every((k)=>hasOwn(requestOptionsKeys, k));\n};\nconst getPlatformProperties = ()=>{\n    if (typeof Deno !== \"undefined\" && Deno.build != null) {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(Deno.build.os),\n            \"X-Stainless-Arch\": normalizeArch(Deno.build.arch),\n            \"X-Stainless-Runtime\": \"deno\",\n            \"X-Stainless-Runtime-Version\": typeof Deno.version === \"string\" ? Deno.version : Deno.version?.deno ?? \"unknown\"\n        };\n    }\n    if (typeof EdgeRuntime !== \"undefined\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": `other:${EdgeRuntime}`,\n            \"X-Stainless-Runtime\": \"edge\",\n            \"X-Stainless-Runtime-Version\": process.version\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) === \"[object process]\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(process.platform),\n            \"X-Stainless-Arch\": normalizeArch(process.arch),\n            \"X-Stainless-Runtime\": \"node\",\n            \"X-Stainless-Runtime-Version\": process.version\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": \"unknown\",\n            \"X-Stainless-Runtime\": `browser:${browserInfo.browser}`,\n            \"X-Stainless-Runtime-Version\": browserInfo.version\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        \"X-Stainless-Lang\": \"js\",\n        \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_3__.VERSION,\n        \"X-Stainless-OS\": \"Unknown\",\n        \"X-Stainless-Arch\": \"unknown\",\n        \"X-Stainless-Runtime\": \"unknown\",\n        \"X-Stainless-Runtime-Version\": \"unknown\"\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === \"undefined\" || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        {\n            key: \"edge\",\n            pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"chrome\",\n            pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"firefox\",\n            pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"safari\",\n            pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n        }\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns){\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return {\n                browser: key,\n                version: `${major}.${minor}.${patch}`\n            };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch)=>{\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === \"x32\") return \"x32\";\n    if (arch === \"x86_64\" || arch === \"x64\") return \"x64\";\n    if (arch === \"arm\") return \"arm\";\n    if (arch === \"aarch64\" || arch === \"arm64\") return \"arm64\";\n    if (arch) return `other:${arch}`;\n    return \"unknown\";\n};\nconst normalizePlatform = (platform)=>{\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes(\"ios\")) return \"iOS\";\n    if (platform === \"android\") return \"Android\";\n    if (platform === \"darwin\") return \"MacOS\";\n    if (platform === \"win32\") return \"Windows\";\n    if (platform === \"freebsd\") return \"FreeBSD\";\n    if (platform === \"openbsd\") return \"OpenBSD\";\n    if (platform === \"linux\") return \"Linux\";\n    if (platform) return `Other:${platform}`;\n    return \"Unknown\";\n};\nlet _platformHeaders;\nconst getPlatformHeaders = ()=>{\n    return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n};\nconst safeJSON = (text)=>{\n    try {\n        return JSON.parse(text);\n    } catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url)=>{\n    return startsWithSchemeRegexp.test(url);\n};\nconst sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n)=>{\n    if (typeof n !== \"number\" || !Number.isInteger(n)) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nconst castToError = (err)=>{\n    if (err instanceof Error) return err;\n    if (typeof err === \"object\" && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        } catch  {}\n    }\n    return new Error(err);\n};\nconst ensurePresent = (value)=>{\n    if (value == null) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */ const readEnv = (env)=>{\n    if (typeof process !== \"undefined\") {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== \"undefined\") {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nconst coerceInteger = (value)=>{\n    if (typeof value === \"number\") return Math.round(value);\n    if (typeof value === \"string\") return parseInt(value, 10);\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceFloat = (value)=>{\n    if (typeof value === \"number\") return value;\n    if (typeof value === \"string\") return parseFloat(value);\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceBoolean = (value)=>{\n    if (typeof value === \"boolean\") return value;\n    if (typeof value === \"string\") return value === \"true\";\n    return Boolean(value);\n};\nconst maybeCoerceInteger = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nconst maybeCoerceFloat = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nconst maybeCoerceBoolean = (value)=>{\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n    if (!obj) return true;\n    for(const _k in obj)return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */ function applyHeadersMut(targetHeaders, newHeaders) {\n    for(const k in newHeaders){\n        if (!hasOwn(newHeaders, k)) continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey) continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        } else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nfunction debug(action, ...args) {\n    if (typeof process !== \"undefined\" && process?.env?.[\"DEBUG\"] === \"true\") {\n        console.log(`DodoPayments:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */ const uuid4 = ()=>{\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c)=>{\n        const r = Math.random() * 16 | 0;\n        const v = c === \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n    });\n};\nconst isRunningInBrowser = ()=>{\n    return(// @ts-ignore\n     false && // @ts-ignore\n    0);\n};\nconst isHeadersProtocol = (headers)=>{\n    return typeof headers?.get === \"function\";\n};\nconst getRequiredHeader = (headers, header)=>{\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nconst getHeader = (headers, header)=>{\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() + header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2)=>g1 + g2.toUpperCase());\n        for (const key of [\n            header,\n            lowerCasedHeader,\n            header.toUpperCase(),\n            intercapsHeader\n        ]){\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)){\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1) return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */ const toBase64 = (str)=>{\n    if (!str) return \"\";\n    if (typeof Buffer !== \"undefined\") {\n        return Buffer.from(str).toString(\"base64\");\n    }\n    if (typeof btoa !== \"undefined\") {\n        return btoa(str);\n    }\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.DodoPaymentsError(\"Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined\");\n};\nfunction isObj(obj) {\n    return obj != null && typeof obj === \"object\" && !Array.isArray(obj);\n} //# sourceMappingURL=core.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/core.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/error.mjs":
/*!*************************************************!*\
  !*** ../../node_modules/dodopayments/error.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* binding */ APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* binding */ APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* binding */ APIError),\n/* harmony export */   APIUserAbortError: () => (/* binding */ APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   DodoPaymentsError: () => (/* binding */ DodoPaymentsError),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   PermissionDeniedError: () => (/* binding */ PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* binding */ RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* binding */ UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass DodoPaymentsError extends Error {\n}\nclass APIError extends DodoPaymentsError {\n    constructor(status, error, message, headers){\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.error = error;\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ? typeof error.message === \"string\" ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return \"(no status code or body)\";\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({\n                message,\n                cause: (0,_core_mjs__WEBPACK_IMPORTED_MODULE_0__.castToError)(errorResponse)\n            });\n        }\n        const error = errorResponse;\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nclass APIUserAbortError extends APIError {\n    constructor({ message } = {}){\n        super(undefined, undefined, message || \"Request was aborted.\", undefined);\n    }\n}\nclass APIConnectionError extends APIError {\n    constructor({ message, cause }){\n        super(undefined, undefined, message || \"Connection error.\", undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause) this.cause = cause;\n    }\n}\nclass APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}){\n        super({\n            message: message ?? \"Request timed out.\"\n        });\n    }\n}\nclass BadRequestError extends APIError {\n}\nclass AuthenticationError extends APIError {\n}\nclass PermissionDeniedError extends APIError {\n}\nclass NotFoundError extends APIError {\n}\nclass ConflictError extends APIError {\n}\nclass UnprocessableEntityError extends APIError {\n}\nclass RateLimitError extends APIError {\n}\nclass InternalServerError extends APIError {\n} //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/error.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/index.mjs":
/*!*************************************************!*\
  !*** ../../node_modules/dodopayments/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.ConflictError),\n/* harmony export */   DodoPayments: () => (/* binding */ DodoPayments),\n/* harmony export */   DodoPaymentsError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.DodoPaymentsError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalServerError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.NotFoundError),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _error_mjs__WEBPACK_IMPORTED_MODULE_1__.UnprocessableEntityError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fileFromPath: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_21__.fileFromPath),\n/* harmony export */   toFile: () => (/* reexport safe */ _uploads_mjs__WEBPACK_IMPORTED_MODULE_20__.toFile)\n/* harmony export */ });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/../../node_modules/dodopayments/error.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/../../node_modules/dodopayments/uploads.mjs\");\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/../../node_modules/dodopayments/_shims/index.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resources/checkout-sessions.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/checkout-sessions.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resources/payments.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/payments.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resources/subscriptions.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/subscriptions.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resources/invoices/invoices.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/invoices/invoices.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resources/licenses.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/licenses.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./resources/license-keys.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/license-keys.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./resources/license-key-instances.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/license-key-instances.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resources/customers/customers.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/customers/customers.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./resources/refunds.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/refunds.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./resources/disputes.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/disputes.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./resources/payouts.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/payouts.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./resources/webhook-events.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/webhook-events.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./resources/products/products.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/products/products.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./resources/misc.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/misc.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./resources/discounts.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/discounts.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./resources/addons.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/addons.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./resources/brands.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/brands.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./resources/webhooks/webhooks.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/webhooks/webhooks.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _DodoPayments_instances, _a, _DodoPayments_baseURLOverridden;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst environments = {\n    live_mode: \"https://live.dodopayments.com\",\n    test_mode: \"https://test.dodopayments.com\"\n};\n/**\n * API Client for interfacing with the Dodo Payments API.\n */ class DodoPayments extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__.APIClient {\n    /**\n     * API Client for interfacing with the Dodo Payments API.\n     *\n     * @param {string | undefined} [opts.bearerToken=process.env['DODO_PAYMENTS_API_KEY'] ?? undefined]\n     * @param {Environment} [opts.environment=live_mode] - Specifies the environment URL to use for the API.\n     * @param {string} [opts.baseURL=process.env['DODO_PAYMENTS_BASE_URL'] ?? https://live.dodopayments.com] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     */ constructor({ baseURL = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv(\"DODO_PAYMENTS_BASE_URL\"), bearerToken = _core_mjs__WEBPACK_IMPORTED_MODULE_0__.readEnv(\"DODO_PAYMENTS_API_KEY\"), ...opts } = {}){\n        if (bearerToken === undefined) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.DodoPaymentsError(\"The DODO_PAYMENTS_API_KEY environment variable is missing or empty; either provide it, or instantiate the DodoPayments client with an bearerToken option, like new DodoPayments({ bearerToken: 'My Bearer Token' }).\");\n        }\n        const options = {\n            bearerToken,\n            ...opts,\n            baseURL,\n            environment: opts.environment ?? \"live_mode\"\n        };\n        if (baseURL && opts.environment) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.DodoPaymentsError(\"Ambiguous URL; The `baseURL` option (or DODO_PAYMENTS_BASE_URL env var) and the `environment` option are given. If you want to use the environment you must pass baseURL: null\");\n        }\n        super({\n            baseURL: options.baseURL || environments[options.environment || \"live_mode\"],\n            baseURLOverridden: baseURL ? baseURL !== environments[options.environment || \"live_mode\"] : false,\n            timeout: options.timeout ?? 60000 /* 1 minute */ ,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch\n        });\n        _DodoPayments_instances.add(this);\n        this.checkoutSessions = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_2__.CheckoutSessions(this);\n        this.payments = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__.Payments(this);\n        this.subscriptions = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__.Subscriptions(this);\n        this.invoices = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_5__.Invoices(this);\n        this.licenses = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_6__.Licenses(this);\n        this.licenseKeys = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_7__.LicenseKeys(this);\n        this.licenseKeyInstances = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_8__.LicenseKeyInstances(this);\n        this.customers = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_9__.Customers(this);\n        this.refunds = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_10__.Refunds(this);\n        this.disputes = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_11__.Disputes(this);\n        this.payouts = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_12__.Payouts(this);\n        this.webhookEvents = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.WebhookEvents(this);\n        this.products = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Products(this);\n        this.misc = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_15__.Misc(this);\n        this.discounts = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_16__.Discounts(this);\n        this.addons = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_17__.Addons(this);\n        this.brands = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_18__.Brands(this);\n        this.webhooks = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_19__.Webhooks(this);\n        this._options = options;\n        this.bearerToken = bearerToken;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            ...this._options.defaultHeaders\n        };\n    }\n    authHeaders(opts) {\n        return {\n            Authorization: `Bearer ${this.bearerToken}`\n        };\n    }\n}\n_a = DodoPayments, _DodoPayments_instances = new WeakSet(), _DodoPayments_baseURLOverridden = function _DodoPayments_baseURLOverridden() {\n    return this.baseURL !== environments[this._options.environment || \"live_mode\"];\n};\nDodoPayments.DodoPayments = _a;\nDodoPayments.DEFAULT_TIMEOUT = 60000; // 1 minute\nDodoPayments.DodoPaymentsError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.DodoPaymentsError;\nDodoPayments.APIError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError;\nDodoPayments.APIConnectionError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionError;\nDodoPayments.APIConnectionTimeoutError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIConnectionTimeoutError;\nDodoPayments.APIUserAbortError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError;\nDodoPayments.NotFoundError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.NotFoundError;\nDodoPayments.ConflictError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.ConflictError;\nDodoPayments.RateLimitError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.RateLimitError;\nDodoPayments.BadRequestError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.BadRequestError;\nDodoPayments.AuthenticationError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationError;\nDodoPayments.InternalServerError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InternalServerError;\nDodoPayments.PermissionDeniedError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.PermissionDeniedError;\nDodoPayments.UnprocessableEntityError = _error_mjs__WEBPACK_IMPORTED_MODULE_1__.UnprocessableEntityError;\nDodoPayments.toFile = _uploads_mjs__WEBPACK_IMPORTED_MODULE_20__.toFile;\nDodoPayments.fileFromPath = _uploads_mjs__WEBPACK_IMPORTED_MODULE_21__.fileFromPath;\nDodoPayments.CheckoutSessions = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_2__.CheckoutSessions;\nDodoPayments.Payments = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__.Payments;\nDodoPayments.PaymentListResponsesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_3__.PaymentListResponsesDefaultPageNumberPagination;\nDodoPayments.Subscriptions = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__.Subscriptions;\nDodoPayments.SubscriptionListResponsesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SubscriptionListResponsesDefaultPageNumberPagination;\nDodoPayments.Invoices = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_5__.Invoices;\nDodoPayments.Licenses = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_6__.Licenses;\nDodoPayments.LicenseKeys = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_7__.LicenseKeys;\nDodoPayments.LicenseKeysDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_7__.LicenseKeysDefaultPageNumberPagination;\nDodoPayments.LicenseKeyInstances = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_8__.LicenseKeyInstances;\nDodoPayments.LicenseKeyInstancesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_8__.LicenseKeyInstancesDefaultPageNumberPagination;\nDodoPayments.Customers = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_9__.Customers;\nDodoPayments.CustomersDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_9__.CustomersDefaultPageNumberPagination;\nDodoPayments.Refunds = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_10__.Refunds;\nDodoPayments.RefundsDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_10__.RefundsDefaultPageNumberPagination;\nDodoPayments.Disputes = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_11__.Disputes;\nDodoPayments.DisputeListResponsesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_11__.DisputeListResponsesDefaultPageNumberPagination;\nDodoPayments.Payouts = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_12__.Payouts;\nDodoPayments.PayoutListResponsesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_12__.PayoutListResponsesDefaultPageNumberPagination;\nDodoPayments.WebhookEvents = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.WebhookEvents;\nDodoPayments.Products = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.Products;\nDodoPayments.ProductListResponsesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_14__.ProductListResponsesDefaultPageNumberPagination;\nDodoPayments.Misc = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_15__.Misc;\nDodoPayments.Discounts = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_16__.Discounts;\nDodoPayments.DiscountsDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_16__.DiscountsDefaultPageNumberPagination;\nDodoPayments.Addons = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_17__.Addons;\nDodoPayments.AddonResponsesDefaultPageNumberPagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_17__.AddonResponsesDefaultPageNumberPagination;\nDodoPayments.Brands = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_18__.Brands;\nDodoPayments.Webhooks = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_19__.Webhooks;\nDodoPayments.WebhookDetailsCursorPagePagination = _resources_index_mjs__WEBPACK_IMPORTED_MODULE_19__.WebhookDetailsCursorPagePagination;\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DodoPayments); //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/index.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/node_modules/node-fetch/lib/index.mjs":
/*!*****************************************************************************!*\
  !*** ../../node_modules/dodopayments/node_modules/node-fetch/lib/index.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError),\n/* harmony export */   FetchError: () => (/* binding */ FetchError),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var whatwg_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! whatwg-url */ \"(rsc)/../../node_modules/whatwg-url/lib/public-api.js\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zlib */ \"zlib\");\n\n\n\n\n\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// fix for \"Readable\" isn't a named export issue\nconst Readable = stream__WEBPACK_IMPORTED_MODULE_0__.Readable;\nconst BUFFER = Symbol(\"buffer\");\nconst TYPE = Symbol(\"type\");\nclass Blob {\n    constructor(){\n        this[TYPE] = \"\";\n        const blobParts = arguments[0];\n        const options = arguments[1];\n        const buffers = [];\n        let size = 0;\n        if (blobParts) {\n            const a = blobParts;\n            const length = Number(a.length);\n            for(let i = 0; i < length; i++){\n                const element = a[i];\n                let buffer;\n                if (element instanceof Buffer) {\n                    buffer = element;\n                } else if (ArrayBuffer.isView(element)) {\n                    buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n                } else if (element instanceof ArrayBuffer) {\n                    buffer = Buffer.from(element);\n                } else if (element instanceof Blob) {\n                    buffer = element[BUFFER];\n                } else {\n                    buffer = Buffer.from(typeof element === \"string\" ? element : String(element));\n                }\n                size += buffer.length;\n                buffers.push(buffer);\n            }\n        }\n        this[BUFFER] = Buffer.concat(buffers);\n        let type = options && options.type !== undefined && String(options.type).toLowerCase();\n        if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n            this[TYPE] = type;\n        }\n    }\n    get size() {\n        return this[BUFFER].length;\n    }\n    get type() {\n        return this[TYPE];\n    }\n    text() {\n        return Promise.resolve(this[BUFFER].toString());\n    }\n    arrayBuffer() {\n        const buf = this[BUFFER];\n        const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n        return Promise.resolve(ab);\n    }\n    stream() {\n        const readable = new Readable();\n        readable._read = function() {};\n        readable.push(this[BUFFER]);\n        readable.push(null);\n        return readable;\n    }\n    toString() {\n        return \"[object Blob]\";\n    }\n    slice() {\n        const size = this.size;\n        const start = arguments[0];\n        const end = arguments[1];\n        let relativeStart, relativeEnd;\n        if (start === undefined) {\n            relativeStart = 0;\n        } else if (start < 0) {\n            relativeStart = Math.max(size + start, 0);\n        } else {\n            relativeStart = Math.min(start, size);\n        }\n        if (end === undefined) {\n            relativeEnd = size;\n        } else if (end < 0) {\n            relativeEnd = Math.max(size + end, 0);\n        } else {\n            relativeEnd = Math.min(end, size);\n        }\n        const span = Math.max(relativeEnd - relativeStart, 0);\n        const buffer = this[BUFFER];\n        const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n        const blob = new Blob([], {\n            type: arguments[2]\n        });\n        blob[BUFFER] = slicedBuffer;\n        return blob;\n    }\n}\nObject.defineProperties(Blob.prototype, {\n    size: {\n        enumerable: true\n    },\n    type: {\n        enumerable: true\n    },\n    slice: {\n        enumerable: true\n    }\n});\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n    value: \"Blob\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */ /**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */ function FetchError(message, type, systemError) {\n    Error.call(this, message);\n    this.message = message;\n    this.type = type;\n    // when err.type is `system`, err.code contains system error code\n    if (systemError) {\n        this.code = this.errno = systemError.code;\n    }\n    // hide custom error implementation details from end-users\n    Error.captureStackTrace(this, this.constructor);\n}\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = \"FetchError\";\nlet convert;\ntry {\n    convert = require(\"encoding\").convert;\n} catch (e) {}\nconst INTERNALS = Symbol(\"Body internals\");\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */ function Body(body) {\n    var _this = this;\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _ref$size = _ref.size;\n    let size = _ref$size === undefined ? 0 : _ref$size;\n    var _ref$timeout = _ref.timeout;\n    let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n    if (body == null) {\n        // body is undefined or null\n        body = null;\n    } else if (isURLSearchParams(body)) {\n        // body is a URLSearchParams\n        body = Buffer.from(body.toString());\n    } else if (isBlob(body)) ;\n    else if (Buffer.isBuffer(body)) ;\n    else if (Object.prototype.toString.call(body) === \"[object ArrayBuffer]\") {\n        // body is ArrayBuffer\n        body = Buffer.from(body);\n    } else if (ArrayBuffer.isView(body)) {\n        // body is ArrayBufferView\n        body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n    } else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) ;\n    else {\n        // none of the above\n        // coerce to string then buffer\n        body = Buffer.from(String(body));\n    }\n    this[INTERNALS] = {\n        body,\n        disturbed: false,\n        error: null\n    };\n    this.size = size;\n    this.timeout = timeout;\n    if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n        body.on(\"error\", function(err) {\n            const error = err.name === \"AbortError\" ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, \"system\", err);\n            _this[INTERNALS].error = error;\n        });\n    }\n}\nBody.prototype = {\n    get body () {\n        return this[INTERNALS].body;\n    },\n    get bodyUsed () {\n        return this[INTERNALS].disturbed;\n    },\n    /**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */ arrayBuffer () {\n        return consumeBody.call(this).then(function(buf) {\n            return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n        });\n    },\n    /**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */ blob () {\n        let ct = this.headers && this.headers.get(\"content-type\") || \"\";\n        return consumeBody.call(this).then(function(buf) {\n            return Object.assign(// Prevent copying\n            new Blob([], {\n                type: ct.toLowerCase()\n            }), {\n                [BUFFER]: buf\n            });\n        });\n    },\n    /**\n  * Decode response as json\n  *\n  * @return  Promise\n  */ json () {\n        var _this2 = this;\n        return consumeBody.call(this).then(function(buffer) {\n            try {\n                return JSON.parse(buffer.toString());\n            } catch (err) {\n                return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, \"invalid-json\"));\n            }\n        });\n    },\n    /**\n  * Decode response as text\n  *\n  * @return  Promise\n  */ text () {\n        return consumeBody.call(this).then(function(buffer) {\n            return buffer.toString();\n        });\n    },\n    /**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */ buffer () {\n        return consumeBody.call(this);\n    },\n    /**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */ textConverted () {\n        var _this3 = this;\n        return consumeBody.call(this).then(function(buffer) {\n            return convertBody(buffer, _this3.headers);\n        });\n    }\n};\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n    body: {\n        enumerable: true\n    },\n    bodyUsed: {\n        enumerable: true\n    },\n    arrayBuffer: {\n        enumerable: true\n    },\n    blob: {\n        enumerable: true\n    },\n    json: {\n        enumerable: true\n    },\n    text: {\n        enumerable: true\n    }\n});\nBody.mixIn = function(proto) {\n    for (const name of Object.getOwnPropertyNames(Body.prototype)){\n        // istanbul ignore else: future proof\n        if (!(name in proto)) {\n            const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n            Object.defineProperty(proto, name, desc);\n        }\n    }\n};\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */ function consumeBody() {\n    var _this4 = this;\n    if (this[INTERNALS].disturbed) {\n        return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n    }\n    this[INTERNALS].disturbed = true;\n    if (this[INTERNALS].error) {\n        return Body.Promise.reject(this[INTERNALS].error);\n    }\n    let body = this.body;\n    // body is null\n    if (body === null) {\n        return Body.Promise.resolve(Buffer.alloc(0));\n    }\n    // body is blob\n    if (isBlob(body)) {\n        body = body.stream();\n    }\n    // body is buffer\n    if (Buffer.isBuffer(body)) {\n        return Body.Promise.resolve(body);\n    }\n    // istanbul ignore if: should never happen\n    if (!(body instanceof stream__WEBPACK_IMPORTED_MODULE_0__)) {\n        return Body.Promise.resolve(Buffer.alloc(0));\n    }\n    // body is stream\n    // get ready to actually consume the body\n    let accum = [];\n    let accumBytes = 0;\n    let abort = false;\n    return new Body.Promise(function(resolve, reject) {\n        let resTimeout;\n        // allow timeout on slow response body\n        if (_this4.timeout) {\n            resTimeout = setTimeout(function() {\n                abort = true;\n                reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, \"body-timeout\"));\n            }, _this4.timeout);\n        }\n        // handle stream errors\n        body.on(\"error\", function(err) {\n            if (err.name === \"AbortError\") {\n                // if the request was aborted, reject with this Error\n                abort = true;\n                reject(err);\n            } else {\n                // other errors, such as incorrect content-encoding\n                reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, \"system\", err));\n            }\n        });\n        body.on(\"data\", function(chunk) {\n            if (abort || chunk === null) {\n                return;\n            }\n            if (_this4.size && accumBytes + chunk.length > _this4.size) {\n                abort = true;\n                reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, \"max-size\"));\n                return;\n            }\n            accumBytes += chunk.length;\n            accum.push(chunk);\n        });\n        body.on(\"end\", function() {\n            if (abort) {\n                return;\n            }\n            clearTimeout(resTimeout);\n            try {\n                resolve(Buffer.concat(accum, accumBytes));\n            } catch (err) {\n                // handle streams that have accumulated too much data (issue #414)\n                reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, \"system\", err));\n            }\n        });\n    });\n}\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */ function convertBody(buffer, headers) {\n    if (typeof convert !== \"function\") {\n        throw new Error(\"The package `encoding` must be installed to use the textConverted() function\");\n    }\n    const ct = headers.get(\"content-type\");\n    let charset = \"utf-8\";\n    let res, str;\n    // header\n    if (ct) {\n        res = /charset=([^;]*)/i.exec(ct);\n    }\n    // no charset in content type, peek at response body for at most 1024 bytes\n    str = buffer.slice(0, 1024).toString();\n    // html5\n    if (!res && str) {\n        res = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n    }\n    // html4\n    if (!res && str) {\n        res = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n        if (!res) {\n            res = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n            if (res) {\n                res.pop(); // drop last quote\n            }\n        }\n        if (res) {\n            res = /charset=(.*)/i.exec(res.pop());\n        }\n    }\n    // xml\n    if (!res && str) {\n        res = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n    }\n    // found charset\n    if (res) {\n        charset = res.pop();\n        // prevent decode issues when sites use incorrect encoding\n        // ref: https://hsivonen.fi/encoding-menu/\n        if (charset === \"gb2312\" || charset === \"gbk\") {\n            charset = \"gb18030\";\n        }\n    }\n    // turn raw buffers into a single utf-8 buffer\n    return convert(buffer, \"UTF-8\", charset).toString();\n}\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */ function isURLSearchParams(obj) {\n    // Duck-typing as a necessary condition.\n    if (typeof obj !== \"object\" || typeof obj.append !== \"function\" || typeof obj.delete !== \"function\" || typeof obj.get !== \"function\" || typeof obj.getAll !== \"function\" || typeof obj.has !== \"function\" || typeof obj.set !== \"function\") {\n        return false;\n    }\n    // Brand-checking and more duck-typing as optional condition.\n    return obj.constructor.name === \"URLSearchParams\" || Object.prototype.toString.call(obj) === \"[object URLSearchParams]\" || typeof obj.sort === \"function\";\n}\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */ function isBlob(obj) {\n    return typeof obj === \"object\" && typeof obj.arrayBuffer === \"function\" && typeof obj.type === \"string\" && typeof obj.stream === \"function\" && typeof obj.constructor === \"function\" && typeof obj.constructor.name === \"string\" && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */ function clone(instance) {\n    let p1, p2;\n    let body = instance.body;\n    // don't allow cloning a used body\n    if (instance.bodyUsed) {\n        throw new Error(\"cannot clone body after it is used\");\n    }\n    // check that body is a stream and not form-data object\n    // note: we can't clone the form-data object without having it as a dependency\n    if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__ && typeof body.getBoundary !== \"function\") {\n        // tee instance body\n        p1 = new PassThrough();\n        p2 = new PassThrough();\n        body.pipe(p1);\n        body.pipe(p2);\n        // set instance body to teed body and return the other teed body\n        instance[INTERNALS].body = p1;\n        body = p2;\n    }\n    return body;\n}\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */ function extractContentType(body) {\n    if (body === null) {\n        // body is null\n        return null;\n    } else if (typeof body === \"string\") {\n        // body is string\n        return \"text/plain;charset=UTF-8\";\n    } else if (isURLSearchParams(body)) {\n        // body is a URLSearchParams\n        return \"application/x-www-form-urlencoded;charset=UTF-8\";\n    } else if (isBlob(body)) {\n        // body is blob\n        return body.type || null;\n    } else if (Buffer.isBuffer(body)) {\n        // body is buffer\n        return null;\n    } else if (Object.prototype.toString.call(body) === \"[object ArrayBuffer]\") {\n        // body is ArrayBuffer\n        return null;\n    } else if (ArrayBuffer.isView(body)) {\n        // body is ArrayBufferView\n        return null;\n    } else if (typeof body.getBoundary === \"function\") {\n        // detect form data input from form-data module\n        return `multipart/form-data;boundary=${body.getBoundary()}`;\n    } else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n        // body is stream\n        // can't really do much about this\n        return null;\n    } else {\n        // Body constructor defaults other things to string\n        return \"text/plain;charset=UTF-8\";\n    }\n}\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */ function getTotalBytes(instance) {\n    const body = instance.body;\n    if (body === null) {\n        // body is null\n        return 0;\n    } else if (isBlob(body)) {\n        return body.size;\n    } else if (Buffer.isBuffer(body)) {\n        // body is buffer\n        return body.length;\n    } else if (body && typeof body.getLengthSync === \"function\") {\n        // detect form data input from form-data module\n        if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n        body.hasKnownLength && body.hasKnownLength()) {\n            // 2.x\n            return body.getLengthSync();\n        }\n        return null;\n    } else {\n        // body is stream\n        return null;\n    }\n}\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */ function writeToStream(dest, instance) {\n    const body = instance.body;\n    if (body === null) {\n        // body is null\n        dest.end();\n    } else if (isBlob(body)) {\n        body.stream().pipe(dest);\n    } else if (Buffer.isBuffer(body)) {\n        // body is buffer\n        dest.write(body);\n        dest.end();\n    } else {\n        // body is stream\n        body.pipe(dest);\n    }\n}\n// expose Promise\nBody.Promise = global.Promise;\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */ const invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\nfunction validateName(name) {\n    name = `${name}`;\n    if (invalidTokenRegex.test(name) || name === \"\") {\n        throw new TypeError(`${name} is not a legal HTTP header name`);\n    }\n}\nfunction validateValue(value) {\n    value = `${value}`;\n    if (invalidHeaderCharRegex.test(value)) {\n        throw new TypeError(`${value} is not a legal HTTP header value`);\n    }\n}\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */ function find(map, name) {\n    name = name.toLowerCase();\n    for(const key in map){\n        if (key.toLowerCase() === name) {\n            return key;\n        }\n    }\n    return undefined;\n}\nconst MAP = Symbol(\"map\");\nclass Headers {\n    /**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */ constructor(){\n        let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n        this[MAP] = Object.create(null);\n        if (init instanceof Headers) {\n            const rawHeaders = init.raw();\n            const headerNames = Object.keys(rawHeaders);\n            for (const headerName of headerNames){\n                for (const value of rawHeaders[headerName]){\n                    this.append(headerName, value);\n                }\n            }\n            return;\n        }\n        // We don't worry about converting prop to ByteString here as append()\n        // will handle it.\n        if (init == null) ;\n        else if (typeof init === \"object\") {\n            const method = init[Symbol.iterator];\n            if (method != null) {\n                if (typeof method !== \"function\") {\n                    throw new TypeError(\"Header pairs must be iterable\");\n                }\n                // sequence<sequence<ByteString>>\n                // Note: per spec we have to first exhaust the lists then process them\n                const pairs = [];\n                for (const pair of init){\n                    if (typeof pair !== \"object\" || typeof pair[Symbol.iterator] !== \"function\") {\n                        throw new TypeError(\"Each header pair must be iterable\");\n                    }\n                    pairs.push(Array.from(pair));\n                }\n                for (const pair of pairs){\n                    if (pair.length !== 2) {\n                        throw new TypeError(\"Each header pair must be a name/value tuple\");\n                    }\n                    this.append(pair[0], pair[1]);\n                }\n            } else {\n                // record<ByteString, ByteString>\n                for (const key of Object.keys(init)){\n                    const value = init[key];\n                    this.append(key, value);\n                }\n            }\n        } else {\n            throw new TypeError(\"Provided initializer must be an object\");\n        }\n    }\n    /**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */ get(name) {\n        name = `${name}`;\n        validateName(name);\n        const key = find(this[MAP], name);\n        if (key === undefined) {\n            return null;\n        }\n        return this[MAP][key].join(\", \");\n    }\n    /**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */ forEach(callback) {\n        let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        let pairs = getHeaders(this);\n        let i = 0;\n        while(i < pairs.length){\n            var _pairs$i = pairs[i];\n            const name = _pairs$i[0], value = _pairs$i[1];\n            callback.call(thisArg, value, name, this);\n            pairs = getHeaders(this);\n            i++;\n        }\n    }\n    /**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */ set(name, value) {\n        name = `${name}`;\n        value = `${value}`;\n        validateName(name);\n        validateValue(value);\n        const key = find(this[MAP], name);\n        this[MAP][key !== undefined ? key : name] = [\n            value\n        ];\n    }\n    /**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */ append(name, value) {\n        name = `${name}`;\n        value = `${value}`;\n        validateName(name);\n        validateValue(value);\n        const key = find(this[MAP], name);\n        if (key !== undefined) {\n            this[MAP][key].push(value);\n        } else {\n            this[MAP][name] = [\n                value\n            ];\n        }\n    }\n    /**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */ has(name) {\n        name = `${name}`;\n        validateName(name);\n        return find(this[MAP], name) !== undefined;\n    }\n    /**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */ delete(name) {\n        name = `${name}`;\n        validateName(name);\n        const key = find(this[MAP], name);\n        if (key !== undefined) {\n            delete this[MAP][key];\n        }\n    }\n    /**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */ raw() {\n        return this[MAP];\n    }\n    /**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */ keys() {\n        return createHeadersIterator(this, \"key\");\n    }\n    /**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */ values() {\n        return createHeadersIterator(this, \"value\");\n    }\n    /**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */ [Symbol.iterator]() {\n        return createHeadersIterator(this, \"key+value\");\n    }\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n    value: \"Headers\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\nObject.defineProperties(Headers.prototype, {\n    get: {\n        enumerable: true\n    },\n    forEach: {\n        enumerable: true\n    },\n    set: {\n        enumerable: true\n    },\n    append: {\n        enumerable: true\n    },\n    has: {\n        enumerable: true\n    },\n    delete: {\n        enumerable: true\n    },\n    keys: {\n        enumerable: true\n    },\n    values: {\n        enumerable: true\n    },\n    entries: {\n        enumerable: true\n    }\n});\nfunction getHeaders(headers) {\n    let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"key+value\";\n    const keys = Object.keys(headers[MAP]).sort();\n    return keys.map(kind === \"key\" ? function(k) {\n        return k.toLowerCase();\n    } : kind === \"value\" ? function(k) {\n        return headers[MAP][k].join(\", \");\n    } : function(k) {\n        return [\n            k.toLowerCase(),\n            headers[MAP][k].join(\", \")\n        ];\n    });\n}\nconst INTERNAL = Symbol(\"internal\");\nfunction createHeadersIterator(target, kind) {\n    const iterator = Object.create(HeadersIteratorPrototype);\n    iterator[INTERNAL] = {\n        target,\n        kind,\n        index: 0\n    };\n    return iterator;\n}\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n    next () {\n        // istanbul ignore if\n        if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n            throw new TypeError(\"Value of `this` is not a HeadersIterator\");\n        }\n        var _INTERNAL = this[INTERNAL];\n        const target = _INTERNAL.target, kind = _INTERNAL.kind, index = _INTERNAL.index;\n        const values = getHeaders(target, kind);\n        const len = values.length;\n        if (index >= len) {\n            return {\n                value: undefined,\n                done: true\n            };\n        }\n        this[INTERNAL].index = index + 1;\n        return {\n            value: values[index],\n            done: false\n        };\n    }\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n    value: \"HeadersIterator\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */ function exportNodeCompatibleHeaders(headers) {\n    const obj = Object.assign({\n        __proto__: null\n    }, headers[MAP]);\n    // http.request() only supports string as Host header. This hack makes\n    // specifying custom Host header possible.\n    const hostHeaderKey = find(headers[MAP], \"Host\");\n    if (hostHeaderKey !== undefined) {\n        obj[hostHeaderKey] = obj[hostHeaderKey][0];\n    }\n    return obj;\n}\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */ function createHeadersLenient(obj) {\n    const headers = new Headers();\n    for (const name of Object.keys(obj)){\n        if (invalidTokenRegex.test(name)) {\n            continue;\n        }\n        if (Array.isArray(obj[name])) {\n            for (const val of obj[name]){\n                if (invalidHeaderCharRegex.test(val)) {\n                    continue;\n                }\n                if (headers[MAP][name] === undefined) {\n                    headers[MAP][name] = [\n                        val\n                    ];\n                } else {\n                    headers[MAP][name].push(val);\n                }\n            }\n        } else if (!invalidHeaderCharRegex.test(obj[name])) {\n            headers[MAP][name] = [\n                obj[name]\n            ];\n        }\n    }\n    return headers;\n}\nconst INTERNALS$1 = Symbol(\"Response internals\");\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http__WEBPACK_IMPORTED_MODULE_1__.STATUS_CODES;\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */ class Response {\n    constructor(){\n        let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        Body.call(this, body, opts);\n        const status = opts.status || 200;\n        const headers = new Headers(opts.headers);\n        if (body != null && !headers.has(\"Content-Type\")) {\n            const contentType = extractContentType(body);\n            if (contentType) {\n                headers.append(\"Content-Type\", contentType);\n            }\n        }\n        this[INTERNALS$1] = {\n            url: opts.url,\n            status,\n            statusText: opts.statusText || STATUS_CODES[status],\n            headers,\n            counter: opts.counter\n        };\n    }\n    get url() {\n        return this[INTERNALS$1].url || \"\";\n    }\n    get status() {\n        return this[INTERNALS$1].status;\n    }\n    /**\n  * Convenience property representing if the request ended normally\n  */ get ok() {\n        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n    }\n    get redirected() {\n        return this[INTERNALS$1].counter > 0;\n    }\n    get statusText() {\n        return this[INTERNALS$1].statusText;\n    }\n    get headers() {\n        return this[INTERNALS$1].headers;\n    }\n    /**\n  * Clone this response\n  *\n  * @return  Response\n  */ clone() {\n        return new Response(clone(this), {\n            url: this.url,\n            status: this.status,\n            statusText: this.statusText,\n            headers: this.headers,\n            ok: this.ok,\n            redirected: this.redirected\n        });\n    }\n}\nBody.mixIn(Response.prototype);\nObject.defineProperties(Response.prototype, {\n    url: {\n        enumerable: true\n    },\n    status: {\n        enumerable: true\n    },\n    ok: {\n        enumerable: true\n    },\n    redirected: {\n        enumerable: true\n    },\n    statusText: {\n        enumerable: true\n    },\n    headers: {\n        enumerable: true\n    },\n    clone: {\n        enumerable: true\n    }\n});\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n    value: \"Response\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\nconst INTERNALS$2 = Symbol(\"Request internals\");\nconst URL = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL;\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = url__WEBPACK_IMPORTED_MODULE_2__.parse;\nconst format_url = url__WEBPACK_IMPORTED_MODULE_2__.format;\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */ function parseURL(urlStr) {\n    /*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */ if (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n        urlStr = new URL(urlStr).toString();\n    }\n    // Fallback to old implementation for arbitrary URLs\n    return parse_url(urlStr);\n}\nconst streamDestructionSupported = \"destroy\" in stream__WEBPACK_IMPORTED_MODULE_0__.Readable.prototype;\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */ function isRequest(input) {\n    return typeof input === \"object\" && typeof input[INTERNALS$2] === \"object\";\n}\nfunction isAbortSignal(signal) {\n    const proto = signal && typeof signal === \"object\" && Object.getPrototypeOf(signal);\n    return !!(proto && proto.constructor.name === \"AbortSignal\");\n}\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */ class Request {\n    constructor(input){\n        let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let parsedURL;\n        // normalize input\n        if (!isRequest(input)) {\n            if (input && input.href) {\n                // in order to support Node.js' Url objects; though WHATWG's URL objects\n                // will fall into this branch also (since their `toString()` will return\n                // `href` property anyway)\n                parsedURL = parseURL(input.href);\n            } else {\n                // coerce input to a string before attempting to parse\n                parsedURL = parseURL(`${input}`);\n            }\n            input = {};\n        } else {\n            parsedURL = parseURL(input.url);\n        }\n        let method = init.method || input.method || \"GET\";\n        method = method.toUpperCase();\n        if ((init.body != null || isRequest(input) && input.body !== null) && (method === \"GET\" || method === \"HEAD\")) {\n            throw new TypeError(\"Request with GET/HEAD method cannot have body\");\n        }\n        let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n        Body.call(this, inputBody, {\n            timeout: init.timeout || input.timeout || 0,\n            size: init.size || input.size || 0\n        });\n        const headers = new Headers(init.headers || input.headers || {});\n        if (inputBody != null && !headers.has(\"Content-Type\")) {\n            const contentType = extractContentType(inputBody);\n            if (contentType) {\n                headers.append(\"Content-Type\", contentType);\n            }\n        }\n        let signal = isRequest(input) ? input.signal : null;\n        if (\"signal\" in init) signal = init.signal;\n        if (signal != null && !isAbortSignal(signal)) {\n            throw new TypeError(\"Expected signal to be an instanceof AbortSignal\");\n        }\n        this[INTERNALS$2] = {\n            method,\n            redirect: init.redirect || input.redirect || \"follow\",\n            headers,\n            parsedURL,\n            signal\n        };\n        // node-fetch-only options\n        this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n        this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n        this.counter = init.counter || input.counter || 0;\n        this.agent = init.agent || input.agent;\n    }\n    get method() {\n        return this[INTERNALS$2].method;\n    }\n    get url() {\n        return format_url(this[INTERNALS$2].parsedURL);\n    }\n    get headers() {\n        return this[INTERNALS$2].headers;\n    }\n    get redirect() {\n        return this[INTERNALS$2].redirect;\n    }\n    get signal() {\n        return this[INTERNALS$2].signal;\n    }\n    /**\n  * Clone this request\n  *\n  * @return  Request\n  */ clone() {\n        return new Request(this);\n    }\n}\nBody.mixIn(Request.prototype);\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n    value: \"Request\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n});\nObject.defineProperties(Request.prototype, {\n    method: {\n        enumerable: true\n    },\n    url: {\n        enumerable: true\n    },\n    headers: {\n        enumerable: true\n    },\n    redirect: {\n        enumerable: true\n    },\n    clone: {\n        enumerable: true\n    },\n    signal: {\n        enumerable: true\n    }\n});\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */ function getNodeRequestOptions(request) {\n    const parsedURL = request[INTERNALS$2].parsedURL;\n    const headers = new Headers(request[INTERNALS$2].headers);\n    // fetch step 1.3\n    if (!headers.has(\"Accept\")) {\n        headers.set(\"Accept\", \"*/*\");\n    }\n    // Basic fetch\n    if (!parsedURL.protocol || !parsedURL.hostname) {\n        throw new TypeError(\"Only absolute URLs are supported\");\n    }\n    if (!/^https?:$/.test(parsedURL.protocol)) {\n        throw new TypeError(\"Only HTTP(S) protocols are supported\");\n    }\n    if (request.signal && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable && !streamDestructionSupported) {\n        throw new Error(\"Cancellation of streamed requests with AbortSignal is not supported in node < 8\");\n    }\n    // HTTP-network-or-cache fetch steps 2.4-2.7\n    let contentLengthValue = null;\n    if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n        contentLengthValue = \"0\";\n    }\n    if (request.body != null) {\n        const totalBytes = getTotalBytes(request);\n        if (typeof totalBytes === \"number\") {\n            contentLengthValue = String(totalBytes);\n        }\n    }\n    if (contentLengthValue) {\n        headers.set(\"Content-Length\", contentLengthValue);\n    }\n    // HTTP-network-or-cache fetch step 2.11\n    if (!headers.has(\"User-Agent\")) {\n        headers.set(\"User-Agent\", \"node-fetch/1.0 (+https://github.com/bitinn/node-fetch)\");\n    }\n    // HTTP-network-or-cache fetch step 2.15\n    if (request.compress && !headers.has(\"Accept-Encoding\")) {\n        headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n    }\n    let agent = request.agent;\n    if (typeof agent === \"function\") {\n        agent = agent(parsedURL);\n    }\n    // HTTP-network fetch step 4.2\n    // chunked encoding is handled by Node.js\n    return Object.assign({}, parsedURL, {\n        method: request.method,\n        headers: exportNodeCompatibleHeaders(headers),\n        agent\n    });\n}\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */ /**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */ function AbortError(message) {\n    Error.call(this, message);\n    this.type = \"aborted\";\n    this.message = message;\n    // hide custom error implementation details from end-users\n    Error.captureStackTrace(this, this.constructor);\n}\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = \"AbortError\";\nconst URL$1 = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL;\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n    const orig = new URL$1(original).hostname;\n    const dest = new URL$1(destination).hostname;\n    return orig === dest || orig[orig.length - dest.length - 1] === \".\" && orig.endsWith(dest);\n};\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */ const isSameProtocol = function isSameProtocol(destination, original) {\n    const orig = new URL$1(original).protocol;\n    const dest = new URL$1(destination).protocol;\n    return orig === dest;\n};\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */ function fetch(url, opts) {\n    // allow custom promise\n    if (!fetch.Promise) {\n        throw new Error(\"native promise missing, set fetch.Promise to your favorite alternative\");\n    }\n    Body.Promise = fetch.Promise;\n    // wrap http.request into fetch\n    return new fetch.Promise(function(resolve, reject) {\n        // build request object\n        const request = new Request(url, opts);\n        const options = getNodeRequestOptions(request);\n        const send = (options.protocol === \"https:\" ? https__WEBPACK_IMPORTED_MODULE_4__ : http__WEBPACK_IMPORTED_MODULE_1__).request;\n        const signal = request.signal;\n        let response = null;\n        const abort = function abort() {\n            let error = new AbortError(\"The user aborted a request.\");\n            reject(error);\n            if (request.body && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {\n                destroyStream(request.body, error);\n            }\n            if (!response || !response.body) return;\n            response.body.emit(\"error\", error);\n        };\n        if (signal && signal.aborted) {\n            abort();\n            return;\n        }\n        const abortAndFinalize = function abortAndFinalize() {\n            abort();\n            finalize();\n        };\n        // send request\n        const req = send(options);\n        let reqTimeout;\n        if (signal) {\n            signal.addEventListener(\"abort\", abortAndFinalize);\n        }\n        function finalize() {\n            req.abort();\n            if (signal) signal.removeEventListener(\"abort\", abortAndFinalize);\n            clearTimeout(reqTimeout);\n        }\n        if (request.timeout) {\n            req.once(\"socket\", function(socket) {\n                reqTimeout = setTimeout(function() {\n                    reject(new FetchError(`network timeout at: ${request.url}`, \"request-timeout\"));\n                    finalize();\n                }, request.timeout);\n            });\n        }\n        req.on(\"error\", function(err) {\n            reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, \"system\", err));\n            if (response && response.body) {\n                destroyStream(response.body, err);\n            }\n            finalize();\n        });\n        fixResponseChunkedTransferBadEnding(req, function(err) {\n            if (signal && signal.aborted) {\n                return;\n            }\n            if (response && response.body) {\n                destroyStream(response.body, err);\n            }\n        });\n        /* c8 ignore next 18 */ if (parseInt(process.version.substring(1)) < 14) {\n            // Before Node.js 14, pipeline() does not fully support async iterators and does not always\n            // properly handle when the socket close/end events are out of order.\n            req.on(\"socket\", function(s) {\n                s.addListener(\"close\", function(hadError) {\n                    // if a data listener is still present we didn't end cleanly\n                    const hasDataListener = s.listenerCount(\"data\") > 0;\n                    // if end happened before close but the socket didn't emit an error, do it now\n                    if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n                        const err = new Error(\"Premature close\");\n                        err.code = \"ERR_STREAM_PREMATURE_CLOSE\";\n                        response.body.emit(\"error\", err);\n                    }\n                });\n            });\n        }\n        req.on(\"response\", function(res) {\n            clearTimeout(reqTimeout);\n            const headers = createHeadersLenient(res.headers);\n            // HTTP fetch step 5\n            if (fetch.isRedirect(res.statusCode)) {\n                // HTTP fetch step 5.2\n                const location = headers.get(\"Location\");\n                // HTTP fetch step 5.3\n                let locationURL = null;\n                try {\n                    locationURL = location === null ? null : new URL$1(location, request.url).toString();\n                } catch (err) {\n                    // error here can only be invalid URL in Location: header\n                    // do not throw when options.redirect == manual\n                    // let the user extract the errorneous redirect URL\n                    if (request.redirect !== \"manual\") {\n                        reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, \"invalid-redirect\"));\n                        finalize();\n                        return;\n                    }\n                }\n                // HTTP fetch step 5.5\n                switch(request.redirect){\n                    case \"error\":\n                        reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, \"no-redirect\"));\n                        finalize();\n                        return;\n                    case \"manual\":\n                        // node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n                        if (locationURL !== null) {\n                            // handle corrupted header\n                            try {\n                                headers.set(\"Location\", locationURL);\n                            } catch (err) {\n                                // istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n                                reject(err);\n                            }\n                        }\n                        break;\n                    case \"follow\":\n                        // HTTP-redirect fetch step 2\n                        if (locationURL === null) {\n                            break;\n                        }\n                        // HTTP-redirect fetch step 5\n                        if (request.counter >= request.follow) {\n                            reject(new FetchError(`maximum redirect reached at: ${request.url}`, \"max-redirect\"));\n                            finalize();\n                            return;\n                        }\n                        // HTTP-redirect fetch step 6 (counter increment)\n                        // Create a new Request object.\n                        const requestOpts = {\n                            headers: new Headers(request.headers),\n                            follow: request.follow,\n                            counter: request.counter + 1,\n                            agent: request.agent,\n                            compress: request.compress,\n                            method: request.method,\n                            body: request.body,\n                            signal: request.signal,\n                            timeout: request.timeout,\n                            size: request.size\n                        };\n                        if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n                            for (const name of [\n                                \"authorization\",\n                                \"www-authenticate\",\n                                \"cookie\",\n                                \"cookie2\"\n                            ]){\n                                requestOpts.headers.delete(name);\n                            }\n                        }\n                        // HTTP-redirect fetch step 9\n                        if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n                            reject(new FetchError(\"Cannot follow redirect with body being a readable stream\", \"unsupported-redirect\"));\n                            finalize();\n                            return;\n                        }\n                        // HTTP-redirect fetch step 11\n                        if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === \"POST\") {\n                            requestOpts.method = \"GET\";\n                            requestOpts.body = undefined;\n                            requestOpts.headers.delete(\"content-length\");\n                        }\n                        // HTTP-redirect fetch step 15\n                        resolve(fetch(new Request(locationURL, requestOpts)));\n                        finalize();\n                        return;\n                }\n            }\n            // prepare response\n            res.once(\"end\", function() {\n                if (signal) signal.removeEventListener(\"abort\", abortAndFinalize);\n            });\n            let body = res.pipe(new PassThrough$1());\n            const response_options = {\n                url: request.url,\n                status: res.statusCode,\n                statusText: res.statusMessage,\n                headers: headers,\n                size: request.size,\n                timeout: request.timeout,\n                counter: request.counter\n            };\n            // HTTP-network fetch step 12.1.1.3\n            const codings = headers.get(\"Content-Encoding\");\n            // HTTP-network fetch step 12.1.1.4: handle content codings\n            // in following scenarios we ignore compression support\n            // 1. compression support is disabled\n            // 2. HEAD request\n            // 3. no Content-Encoding header\n            // 4. no content response (204)\n            // 5. content not modified response (304)\n            if (!request.compress || request.method === \"HEAD\" || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n                response = new Response(body, response_options);\n                resolve(response);\n                return;\n            }\n            // For Node v6+\n            // Be less strict when decoding compressed responses, since sometimes\n            // servers send slightly invalid responses that are still accepted\n            // by common browsers.\n            // Always using Z_SYNC_FLUSH is what cURL does.\n            const zlibOptions = {\n                flush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH,\n                finishFlush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH\n            };\n            // for gzip\n            if (codings == \"gzip\" || codings == \"x-gzip\") {\n                body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createGunzip(zlibOptions));\n                response = new Response(body, response_options);\n                resolve(response);\n                return;\n            }\n            // for deflate\n            if (codings == \"deflate\" || codings == \"x-deflate\") {\n                // handle the infamous raw deflate response from old servers\n                // a hack for old IIS and Apache servers\n                const raw = res.pipe(new PassThrough$1());\n                raw.once(\"data\", function(chunk) {\n                    // see http://stackoverflow.com/questions/37519828\n                    if ((chunk[0] & 0x0F) === 0x08) {\n                        body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflate());\n                    } else {\n                        body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflateRaw());\n                    }\n                    response = new Response(body, response_options);\n                    resolve(response);\n                });\n                raw.on(\"end\", function() {\n                    // some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n                    if (!response) {\n                        response = new Response(body, response_options);\n                        resolve(response);\n                    }\n                });\n                return;\n            }\n            // for br\n            if (codings == \"br\" && typeof zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress === \"function\") {\n                body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress());\n                response = new Response(body, response_options);\n                resolve(response);\n                return;\n            }\n            // otherwise, use response as-is\n            response = new Response(body, response_options);\n            resolve(response);\n        });\n        writeToStream(req, request);\n    });\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n    let socket;\n    request.on(\"socket\", function(s) {\n        socket = s;\n    });\n    request.on(\"response\", function(response) {\n        const headers = response.headers;\n        if (headers[\"transfer-encoding\"] === \"chunked\" && !headers[\"content-length\"]) {\n            response.once(\"close\", function(hadError) {\n                // tests for socket presence, as in some situations the\n                // the 'socket' event is not triggered for the request\n                // (happens in deno), avoids `TypeError`\n                // if a data listener is still present we didn't end cleanly\n                const hasDataListener = socket && socket.listenerCount(\"data\") > 0;\n                if (hasDataListener && !hadError) {\n                    const err = new Error(\"Premature close\");\n                    err.code = \"ERR_STREAM_PREMATURE_CLOSE\";\n                    errorCallback(err);\n                }\n            });\n        }\n    });\n}\nfunction destroyStream(stream, err) {\n    if (stream.destroy) {\n        stream.destroy(err);\n    } else {\n        // node < 8\n        stream.emit(\"error\", err);\n        stream.end();\n    }\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */ fetch.isRedirect = function(code) {\n    return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n// expose Promise\nfetch.Promise = global.Promise;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/node_modules/node-fetch/lib/index.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/pagination.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/dodopayments/pagination.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CursorPagePagination: () => (/* binding */ CursorPagePagination),\n/* harmony export */   DefaultPageNumberPagination: () => (/* binding */ DefaultPageNumberPagination)\n/* harmony export */ });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass DefaultPageNumberPagination extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.items = body.items || [];\n    }\n    getPaginatedItems() {\n        return this.items ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info) return null;\n        if (\"params\" in info) return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length) return null;\n        return params;\n    }\n    nextPageInfo() {\n        const query = this.options.query;\n        const currentPage = query?.page_number ?? 1;\n        return {\n            params: {\n                page_number: currentPage + 1\n            }\n        };\n    }\n}\nclass CursorPagePagination extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.iterator = body.iterator || \"\";\n        this.done = body.done || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.done === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info) return null;\n        if (\"params\" in info) return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length) return null;\n        return params;\n    }\n    nextPageInfo() {\n        const cursor = this.iterator;\n        if (!cursor) {\n            return null;\n        }\n        return {\n            params: {\n                iterator: cursor\n            }\n        };\n    }\n} //# sourceMappingURL=pagination.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9wYWdpbmF0aW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDNUM7QUFDbkMsTUFBTUMsb0NBQW9DRCxtREFBWUE7SUFDekRFLFlBQVlDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sQ0FBRTtRQUN6QyxLQUFLLENBQUNILFFBQVFDLFVBQVVDLE1BQU1DO1FBQzlCLElBQUksQ0FBQ0MsS0FBSyxHQUFHRixLQUFLRSxLQUFLLElBQUksRUFBRTtJQUNqQztJQUNBQyxvQkFBb0I7UUFDaEIsT0FBTyxJQUFJLENBQUNELEtBQUssSUFBSSxFQUFFO0lBQzNCO0lBQ0Esa0RBQWtEO0lBQ2xERSxpQkFBaUI7UUFDYixNQUFNQyxPQUFPLElBQUksQ0FBQ0MsWUFBWTtRQUM5QixJQUFJLENBQUNELE1BQ0QsT0FBTztRQUNYLElBQUksWUFBWUEsTUFDWixPQUFPQSxLQUFLRSxNQUFNO1FBQ3RCLE1BQU1BLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0osS0FBS0ssR0FBRyxDQUFDQyxZQUFZO1FBQ3ZELElBQUksQ0FBQ0gsT0FBT0ksSUFBSSxDQUFDTCxRQUFRTSxNQUFNLEVBQzNCLE9BQU87UUFDWCxPQUFPTjtJQUNYO0lBQ0FELGVBQWU7UUFDWCxNQUFNUSxRQUFRLElBQUksQ0FBQ2IsT0FBTyxDQUFDYSxLQUFLO1FBQ2hDLE1BQU1DLGNBQWNELE9BQU9FLGVBQWU7UUFDMUMsT0FBTztZQUFFVCxRQUFRO2dCQUFFUyxhQUFhRCxjQUFjO1lBQUU7UUFBRTtJQUN0RDtBQUNKO0FBQ08sTUFBTUUsNkJBQTZCdEIsbURBQVlBO0lBQ2xERSxZQUFZQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLENBQUU7UUFDekMsS0FBSyxDQUFDSCxRQUFRQyxVQUFVQyxNQUFNQztRQUM5QixJQUFJLENBQUNpQixJQUFJLEdBQUdsQixLQUFLa0IsSUFBSSxJQUFJLEVBQUU7UUFDM0IsSUFBSSxDQUFDQyxRQUFRLEdBQUduQixLQUFLbUIsUUFBUSxJQUFJO1FBQ2pDLElBQUksQ0FBQ0MsSUFBSSxHQUFHcEIsS0FBS29CLElBQUksSUFBSTtJQUM3QjtJQUNBakIsb0JBQW9CO1FBQ2hCLE9BQU8sSUFBSSxDQUFDZSxJQUFJLElBQUksRUFBRTtJQUMxQjtJQUNBRyxjQUFjO1FBQ1YsSUFBSSxJQUFJLENBQUNELElBQUksS0FBSyxPQUFPO1lBQ3JCLE9BQU87UUFDWDtRQUNBLE9BQU8sS0FBSyxDQUFDQztJQUNqQjtJQUNBLGtEQUFrRDtJQUNsRGpCLGlCQUFpQjtRQUNiLE1BQU1DLE9BQU8sSUFBSSxDQUFDQyxZQUFZO1FBQzlCLElBQUksQ0FBQ0QsTUFDRCxPQUFPO1FBQ1gsSUFBSSxZQUFZQSxNQUNaLE9BQU9BLEtBQUtFLE1BQU07UUFDdEIsTUFBTUEsU0FBU0MsT0FBT0MsV0FBVyxDQUFDSixLQUFLSyxHQUFHLENBQUNDLFlBQVk7UUFDdkQsSUFBSSxDQUFDSCxPQUFPSSxJQUFJLENBQUNMLFFBQVFNLE1BQU0sRUFDM0IsT0FBTztRQUNYLE9BQU9OO0lBQ1g7SUFDQUQsZUFBZTtRQUNYLE1BQU1nQixTQUFTLElBQUksQ0FBQ0gsUUFBUTtRQUM1QixJQUFJLENBQUNHLFFBQVE7WUFDVCxPQUFPO1FBQ1g7UUFDQSxPQUFPO1lBQ0hmLFFBQVE7Z0JBQ0pZLFVBQVVHO1lBQ2Q7UUFDSjtJQUNKO0FBQ0osRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3BhZ2luYXRpb24ubWpzPzI1ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFic3RyYWN0UGFnZSB9IGZyb20gXCIuL2NvcmUubWpzXCI7XG5leHBvcnQgY2xhc3MgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIGV4dGVuZHMgQWJzdHJhY3RQYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIHJlc3BvbnNlLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGNsaWVudCwgcmVzcG9uc2UsIGJvZHksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLml0ZW1zID0gYm9keS5pdGVtcyB8fCBbXTtcbiAgICB9XG4gICAgZ2V0UGFnaW5hdGVkSXRlbXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLml0ZW1zID8/IFtdO1xuICAgIH1cbiAgICAvLyBAZGVwcmVjYXRlZCBQbGVhc2UgdXNlIGBuZXh0UGFnZUluZm8oKWAgaW5zdGVhZFxuICAgIG5leHRQYWdlUGFyYW1zKCkge1xuICAgICAgICBjb25zdCBpbmZvID0gdGhpcy5uZXh0UGFnZUluZm8oKTtcbiAgICAgICAgaWYgKCFpbmZvKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmICgncGFyYW1zJyBpbiBpbmZvKVxuICAgICAgICAgICAgcmV0dXJuIGluZm8ucGFyYW1zO1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBPYmplY3QuZnJvbUVudHJpZXMoaW5mby51cmwuc2VhcmNoUGFyYW1zKTtcbiAgICAgICAgaWYgKCFPYmplY3Qua2V5cyhwYXJhbXMpLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgIH1cbiAgICBuZXh0UGFnZUluZm8oKSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy5vcHRpb25zLnF1ZXJ5O1xuICAgICAgICBjb25zdCBjdXJyZW50UGFnZSA9IHF1ZXJ5Py5wYWdlX251bWJlciA/PyAxO1xuICAgICAgICByZXR1cm4geyBwYXJhbXM6IHsgcGFnZV9udW1iZXI6IGN1cnJlbnRQYWdlICsgMSB9IH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEN1cnNvclBhZ2VQYWdpbmF0aW9uIGV4dGVuZHMgQWJzdHJhY3RQYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIHJlc3BvbnNlLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGNsaWVudCwgcmVzcG9uc2UsIGJvZHksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmRhdGEgPSBib2R5LmRhdGEgfHwgW107XG4gICAgICAgIHRoaXMuaXRlcmF0b3IgPSBib2R5Lml0ZXJhdG9yIHx8ICcnO1xuICAgICAgICB0aGlzLmRvbmUgPSBib2R5LmRvbmUgfHwgZmFsc2U7XG4gICAgfVxuICAgIGdldFBhZ2luYXRlZEl0ZW1zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhID8/IFtdO1xuICAgIH1cbiAgICBoYXNOZXh0UGFnZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuZG9uZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3VwZXIuaGFzTmV4dFBhZ2UoKTtcbiAgICB9XG4gICAgLy8gQGRlcHJlY2F0ZWQgUGxlYXNlIHVzZSBgbmV4dFBhZ2VJbmZvKClgIGluc3RlYWRcbiAgICBuZXh0UGFnZVBhcmFtcygpIHtcbiAgICAgICAgY29uc3QgaW5mbyA9IHRoaXMubmV4dFBhZ2VJbmZvKCk7XG4gICAgICAgIGlmICghaW5mbylcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICBpZiAoJ3BhcmFtcycgaW4gaW5mbylcbiAgICAgICAgICAgIHJldHVybiBpbmZvLnBhcmFtcztcbiAgICAgICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmZyb21FbnRyaWVzKGluZm8udXJsLnNlYXJjaFBhcmFtcyk7XG4gICAgICAgIGlmICghT2JqZWN0LmtleXMocGFyYW1zKS5sZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9XG4gICAgbmV4dFBhZ2VJbmZvKCkge1xuICAgICAgICBjb25zdCBjdXJzb3IgPSB0aGlzLml0ZXJhdG9yO1xuICAgICAgICBpZiAoIWN1cnNvcikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yOiBjdXJzb3IsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2luYXRpb24ubWpzLm1hcCJdLCJuYW1lcyI6WyJBYnN0cmFjdFBhZ2UiLCJEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iLCJjb25zdHJ1Y3RvciIsImNsaWVudCIsInJlc3BvbnNlIiwiYm9keSIsIm9wdGlvbnMiLCJpdGVtcyIsImdldFBhZ2luYXRlZEl0ZW1zIiwibmV4dFBhZ2VQYXJhbXMiLCJpbmZvIiwibmV4dFBhZ2VJbmZvIiwicGFyYW1zIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJ1cmwiLCJzZWFyY2hQYXJhbXMiLCJrZXlzIiwibGVuZ3RoIiwicXVlcnkiLCJjdXJyZW50UGFnZSIsInBhZ2VfbnVtYmVyIiwiQ3Vyc29yUGFnZVBhZ2luYXRpb24iLCJkYXRhIiwiaXRlcmF0b3IiLCJkb25lIiwiaGFzTmV4dFBhZ2UiLCJjdXJzb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/pagination.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resource.mjs":
/*!****************************************************!*\
  !*** ../../node_modules/dodopayments/resource.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIResource: () => (/* binding */ APIResource)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nclass APIResource {\n    constructor(client){\n        this._client = client;\n    }\n} //# sourceMappingURL=resource.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUMvRSxNQUFNQTtJQUNUQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsSUFBSSxDQUFDQyxPQUFPLEdBQUdEO0lBQ25CO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlLm1qcz8zZmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgY2xhc3MgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb3VyY2UubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resource.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/addons.mjs":
/*!************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/addons.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AddonResponsesDefaultPageNumberPagination: () => (/* binding */ AddonResponsesDefaultPageNumberPagination),\n/* harmony export */   Addons: () => (/* binding */ Addons)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Addons extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/addons\", {\n            body,\n            ...options\n        });\n    }\n    retrieve(id, options) {\n        return this._client.get(`/addons/${id}`, options);\n    }\n    update(id, body, options) {\n        return this._client.patch(`/addons/${id}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/addons\", AddonResponsesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n    updateImages(id, options) {\n        return this._client.put(`/addons/${id}/images`, options);\n    }\n}\nclass AddonResponsesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nAddons.AddonResponsesDefaultPageNumberPagination = AddonResponsesDefaultPageNumberPagination; //# sourceMappingURL=addons.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvYWRkb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUN4QztBQUNDO0FBQ2lCO0FBQ3pELE1BQU1HLGVBQWVILHNEQUFXQTtJQUNuQ0ksT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLFdBQVc7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDM0Q7SUFDQUcsU0FBU0MsRUFBRSxFQUFFSixPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFRCxHQUFHLENBQUMsRUFBRUo7SUFDN0M7SUFDQU0sT0FBT0YsRUFBRSxFQUFFTCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDTSxLQUFLLENBQUMsQ0FBQyxRQUFRLEVBQUVILEdBQUcsQ0FBQyxFQUFFO1lBQUVMO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQ2xFO0lBQ0FRLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVULE9BQU8sRUFBRTtRQUN0QixJQUFJTCwyREFBZ0JBLENBQUNjLFFBQVE7WUFDekIsT0FBTyxJQUFJLENBQUNELElBQUksQ0FBQyxDQUFDLEdBQUdDO1FBQ3pCO1FBQ0EsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ1MsVUFBVSxDQUFDLFdBQVdDLDJDQUEyQztZQUNqRkY7WUFDQSxHQUFHVCxPQUFPO1FBQ2Q7SUFDSjtJQUNBWSxhQUFhUixFQUFFLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDWSxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUVULEdBQUcsT0FBTyxDQUFDLEVBQUVKO0lBQ3BEO0FBQ0o7QUFDTyxNQUFNVyxrREFBa0RmLHdFQUEyQkE7QUFDMUY7QUFDQUMsT0FBT2MseUNBQXlDLEdBQUdBLDJDQUNuRCxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9hZGRvbnMubWpzPzBlNzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIH0gZnJvbSBcIi4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgQWRkb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2FkZG9ucycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgcmV0cmlldmUoaWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9hZGRvbnMvJHtpZH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgdXBkYXRlKGlkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucGF0Y2goYC9hZGRvbnMvJHtpZH1gLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9hZGRvbnMnLCBBZGRvblJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdXBkYXRlSW1hZ2VzKGlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucHV0KGAvYWRkb25zLyR7aWR9L2ltYWdlc2AsIG9wdGlvbnMpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBBZGRvblJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiBleHRlbmRzIERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB7XG59XG5BZGRvbnMuQWRkb25SZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24gPSBBZGRvblJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZG9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkRlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsIkFkZG9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJyZXRyaWV2ZSIsImlkIiwiZ2V0IiwidXBkYXRlIiwicGF0Y2giLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiQWRkb25SZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iLCJ1cGRhdGVJbWFnZXMiLCJwdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/addons.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/brands.mjs":
/*!************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/brands.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Brands: () => (/* binding */ Brands)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Brands extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/brands\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Thin handler just calls `get_brand` and wraps in `Json(...)`\n     */ retrieve(id, options) {\n        return this._client.get(`/brands/${id}`, options);\n    }\n    update(id, body, options) {\n        return this._client.patch(`/brands/${id}`, {\n            body,\n            ...options\n        });\n    }\n    list(options) {\n        return this._client.get(\"/brands\", options);\n    }\n    updateImages(id, options) {\n        return this._client.put(`/brands/${id}/images`, options);\n    }\n} //# sourceMappingURL=brands.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvYnJhbmRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUN4QztBQUN2QyxNQUFNQyxlQUFlRCxzREFBV0E7SUFDbkNFLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxXQUFXO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzNEO0lBQ0E7O0tBRUMsR0FDREcsU0FBU0MsRUFBRSxFQUFFSixPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFRCxHQUFHLENBQUMsRUFBRUo7SUFDN0M7SUFDQU0sT0FBT0YsRUFBRSxFQUFFTCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDTSxLQUFLLENBQUMsQ0FBQyxRQUFRLEVBQUVILEdBQUcsQ0FBQyxFQUFFO1lBQUVMO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQ2xFO0lBQ0FRLEtBQUtSLE9BQU8sRUFBRTtRQUNWLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNJLEdBQUcsQ0FBQyxXQUFXTDtJQUN2QztJQUNBUyxhQUFhTCxFQUFFLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDUyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUVOLEdBQUcsT0FBTyxDQUFDLEVBQUVKO0lBQ3BEO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9icmFuZHMubWpzPzRiOWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEJyYW5kcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9icmFuZHMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaW4gaGFuZGxlciBqdXN0IGNhbGxzIGBnZXRfYnJhbmRgIGFuZCB3cmFwcyBpbiBgSnNvbiguLi4pYFxuICAgICAqL1xuICAgIHJldHJpZXZlKGlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvYnJhbmRzLyR7aWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHVwZGF0ZShpZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBhdGNoKGAvYnJhbmRzLyR7aWR9YCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICBsaXN0KG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoJy9icmFuZHMnLCBvcHRpb25zKTtcbiAgICB9XG4gICAgdXBkYXRlSW1hZ2VzKGlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucHV0KGAvYnJhbmRzLyR7aWR9L2ltYWdlc2AsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyYW5kcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQnJhbmRzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInJldHJpZXZlIiwiaWQiLCJnZXQiLCJ1cGRhdGUiLCJwYXRjaCIsImxpc3QiLCJ1cGRhdGVJbWFnZXMiLCJwdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/brands.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/checkout-sessions.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/checkout-sessions.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CheckoutSessions: () => (/* binding */ CheckoutSessions)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass CheckoutSessions extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/checkouts\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=checkout-sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvY2hlY2tvdXQtc2Vzc2lvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3hDO0FBQ3ZDLE1BQU1DLHlCQUF5QkQsc0RBQVdBO0lBQzdDRSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsY0FBYztZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUM5RDtBQUNKLEVBQ0EsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvY2hlY2tvdXQtc2Vzc2lvbnMubWpzP2UyNDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIENoZWNrb3V0U2Vzc2lvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvY2hlY2tvdXRzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrb3V0LXNlc3Npb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDaGVja291dFNlc3Npb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/checkout-sessions.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/customers/customer-portal.mjs":
/*!*******************************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/customers/customer-portal.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CustomerPortal: () => (/* binding */ CustomerPortal)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass CustomerPortal extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(customerId, params = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(params)) {\n            return this.create(customerId, {}, params);\n        }\n        const { send_email } = params;\n        return this._client.post(`/customers/${customerId}/customer-portal/session`, {\n            query: {\n                send_email\n            },\n            ...options\n        });\n    }\n} //# sourceMappingURL=customer-portal.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvY3VzdG9tZXJzL2N1c3RvbWVyLXBvcnRhbC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JDO0FBQ0M7QUFDM0MsTUFBTUUsdUJBQXVCRixzREFBV0E7SUFDM0NHLE9BQU9DLFVBQVUsRUFBRUMsU0FBUyxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ3JDLElBQUlMLDJEQUFnQkEsQ0FBQ0ksU0FBUztZQUMxQixPQUFPLElBQUksQ0FBQ0YsTUFBTSxDQUFDQyxZQUFZLENBQUMsR0FBR0M7UUFDdkM7UUFDQSxNQUFNLEVBQUVFLFVBQVUsRUFBRSxHQUFHRjtRQUN2QixPQUFPLElBQUksQ0FBQ0csT0FBTyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEVBQUVMLFdBQVcsd0JBQXdCLENBQUMsRUFBRTtZQUN6RU0sT0FBTztnQkFBRUg7WUFBVztZQUNwQixHQUFHRCxPQUFPO1FBQ2Q7SUFDSjtBQUNKLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvY3VzdG9tZXJzL2N1c3RvbWVyLXBvcnRhbC5tanM/NzkxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBpc1JlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2NvcmUubWpzXCI7XG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJQb3J0YWwgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGN1c3RvbWVySWQsIHBhcmFtcyA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHBhcmFtcykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZShjdXN0b21lcklkLCB7fSwgcGFyYW1zKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IHNlbmRfZW1haWwgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KGAvY3VzdG9tZXJzLyR7Y3VzdG9tZXJJZH0vY3VzdG9tZXItcG9ydGFsL3Nlc3Npb25gLCB7XG4gICAgICAgICAgICBxdWVyeTogeyBzZW5kX2VtYWlsIH0sXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXN0b21lci1wb3J0YWwubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImlzUmVxdWVzdE9wdGlvbnMiLCJDdXN0b21lclBvcnRhbCIsImNyZWF0ZSIsImN1c3RvbWVySWQiLCJwYXJhbXMiLCJvcHRpb25zIiwic2VuZF9lbWFpbCIsIl9jbGllbnQiLCJwb3N0IiwicXVlcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/customers/customer-portal.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/customers/customers.mjs":
/*!*************************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/customers/customers.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Customers: () => (/* binding */ Customers),\n/* harmony export */   CustomersDefaultPageNumberPagination: () => (/* binding */ CustomersDefaultPageNumberPagination)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _customer_portal_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./customer-portal.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/customers/customer-portal.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Customers extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.customerPortal = new _customer_portal_mjs__WEBPACK_IMPORTED_MODULE_1__.CustomerPortal(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/customers\", {\n            body,\n            ...options\n        });\n    }\n    retrieve(customerId, options) {\n        return this._client.get(`/customers/${customerId}`, options);\n    }\n    update(customerId, body, options) {\n        return this._client.patch(`/customers/${customerId}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/customers\", CustomersDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n}\nclass CustomersDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.DefaultPageNumberPagination {\n}\nCustomers.CustomersDefaultPageNumberPagination = CustomersDefaultPageNumberPagination;\nCustomers.CustomerPortal = _customer_portal_mjs__WEBPACK_IMPORTED_MODULE_1__.CustomerPortal; //# sourceMappingURL=customers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvY3VzdG9tZXJzL2N1c3RvbWVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JDO0FBQ0M7QUFDUztBQUNKO0FBQ1k7QUFDNUQsTUFBTUssa0JBQWtCTCxzREFBV0E7SUFDdENNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxjQUFjLEdBQUcsSUFBSU4sZ0VBQWdDLENBQUMsSUFBSSxDQUFDTyxPQUFPO0lBQzNFO0lBQ0FDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxjQUFjO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzlEO0lBQ0FFLFNBQVNDLFVBQVUsRUFBRUgsT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRUQsV0FBVyxDQUFDLEVBQUVIO0lBQ3hEO0lBQ0FLLE9BQU9GLFVBQVUsRUFBRUosSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ1MsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFSCxXQUFXLENBQUMsRUFBRTtZQUFFSjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUM3RTtJQUNBTyxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFUixPQUFPLEVBQUU7UUFDdEIsSUFBSVgsMkRBQWdCQSxDQUFDbUIsUUFBUTtZQUN6QixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBR0M7UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ1gsT0FBTyxDQUFDWSxVQUFVLENBQUMsY0FBY0Msc0NBQXNDO1lBQUVGO1lBQU8sR0FBR1IsT0FBTztRQUFDO0lBQzNHO0FBQ0o7QUFDTyxNQUFNVSw2Q0FBNkNsQix3RUFBMkJBO0FBQ3JGO0FBQ0FDLFVBQVVpQixvQ0FBb0MsR0FBR0E7QUFDakRqQixVQUFVRixjQUFjLEdBQUdBLGdFQUFjQSxFQUN6QyxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9jdXN0b21lcnMvY3VzdG9tZXJzLm1qcz9lMTA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vY29yZS5tanNcIjtcbmltcG9ydCAqIGFzIEN1c3RvbWVyUG9ydGFsQVBJIGZyb20gXCIuL2N1c3RvbWVyLXBvcnRhbC5tanNcIjtcbmltcG9ydCB7IEN1c3RvbWVyUG9ydGFsIH0gZnJvbSBcIi4vY3VzdG9tZXItcG9ydGFsLm1qc1wiO1xuaW1wb3J0IHsgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIH0gZnJvbSBcIi4uLy4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmN1c3RvbWVyUG9ydGFsID0gbmV3IEN1c3RvbWVyUG9ydGFsQVBJLkN1c3RvbWVyUG9ydGFsKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2N1c3RvbWVycycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgcmV0cmlldmUoY3VzdG9tZXJJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL2N1c3RvbWVycy8ke2N1c3RvbWVySWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHVwZGF0ZShjdXN0b21lcklkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucGF0Y2goYC9jdXN0b21lcnMvJHtjdXN0b21lcklkfWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2N1c3RvbWVycycsIEN1c3RvbWVyc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIGV4dGVuZHMgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIHtcbn1cbkN1c3RvbWVycy5DdXN0b21lcnNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24gPSBDdXN0b21lcnNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb247XG5DdXN0b21lcnMuQ3VzdG9tZXJQb3J0YWwgPSBDdXN0b21lclBvcnRhbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWN1c3RvbWVycy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkN1c3RvbWVyUG9ydGFsQVBJIiwiQ3VzdG9tZXJQb3J0YWwiLCJEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iLCJDdXN0b21lcnMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsImN1c3RvbWVyUG9ydGFsIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwiY3VzdG9tZXJJZCIsImdldCIsInVwZGF0ZSIsInBhdGNoIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsIkN1c3RvbWVyc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/customers/customers.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/discounts.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/discounts.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Discounts: () => (/* binding */ Discounts),\n/* harmony export */   DiscountsDefaultPageNumberPagination: () => (/* binding */ DiscountsDefaultPageNumberPagination)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Discounts extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * POST /discounts If `code` is omitted or empty, a random 16-char uppercase code\n     * is generated.\n     */ create(body, options) {\n        return this._client.post(\"/discounts\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * GET /discounts/{discount_id}\n     */ retrieve(discountId, options) {\n        return this._client.get(`/discounts/${discountId}`, options);\n    }\n    /**\n     * PATCH /discounts/{discount_id}\n     */ update(discountId, body, options) {\n        return this._client.patch(`/discounts/${discountId}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/discounts\", DiscountsDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * DELETE /discounts/{discount_id}\n     */ delete(discountId, options) {\n        return this._client.delete(`/discounts/${discountId}`, {\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n}\nclass DiscountsDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nDiscounts.DiscountsDefaultPageNumberPagination = DiscountsDefaultPageNumberPagination; //# sourceMappingURL=discounts.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvZGlzY291bnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUN4QztBQUNDO0FBQ2lCO0FBQ3pELE1BQU1HLGtCQUFrQkgsc0RBQVdBO0lBQ3RDOzs7S0FHQyxHQUNESSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsY0FBYztZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUM5RDtJQUNBOztLQUVDLEdBQ0RHLFNBQVNDLFVBQVUsRUFBRUosT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNJLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRUQsV0FBVyxDQUFDLEVBQUVKO0lBQ3hEO0lBQ0E7O0tBRUMsR0FDRE0sT0FBT0YsVUFBVSxFQUFFTCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUM5QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDTSxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUVILFdBQVcsQ0FBQyxFQUFFO1lBQUVMO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzdFO0lBQ0FRLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVULE9BQU8sRUFBRTtRQUN0QixJQUFJTCwyREFBZ0JBLENBQUNjLFFBQVE7WUFDekIsT0FBTyxJQUFJLENBQUNELElBQUksQ0FBQyxDQUFDLEdBQUdDO1FBQ3pCO1FBQ0EsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ1MsVUFBVSxDQUFDLGNBQWNDLHNDQUFzQztZQUFFRjtZQUFPLEdBQUdULE9BQU87UUFBQztJQUMzRztJQUNBOztLQUVDLEdBQ0RZLE9BQU9SLFVBQVUsRUFBRUosT0FBTyxFQUFFO1FBQ3hCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNXLE1BQU0sQ0FBQyxDQUFDLFdBQVcsRUFBRVIsV0FBVyxDQUFDLEVBQUU7WUFDbkQsR0FBR0osT0FBTztZQUNWYSxTQUFTO2dCQUFFQyxRQUFRO2dCQUFPLEdBQUdkLFNBQVNhLE9BQU87WUFBQztRQUNsRDtJQUNKO0FBQ0o7QUFDTyxNQUFNRiw2Q0FBNkNmLHdFQUEyQkE7QUFDckY7QUFDQUMsVUFBVWMsb0NBQW9DLEdBQUdBLHNDQUNqRCxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9kaXNjb3VudHMubWpzP2ZiNzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIH0gZnJvbSBcIi4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgRGlzY291bnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFBPU1QgL2Rpc2NvdW50cyBJZiBgY29kZWAgaXMgb21pdHRlZCBvciBlbXB0eSwgYSByYW5kb20gMTYtY2hhciB1cHBlcmNhc2UgY29kZVxuICAgICAqIGlzIGdlbmVyYXRlZC5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9kaXNjb3VudHMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdFVCAvZGlzY291bnRzL3tkaXNjb3VudF9pZH1cbiAgICAgKi9cbiAgICByZXRyaWV2ZShkaXNjb3VudElkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvZGlzY291bnRzLyR7ZGlzY291bnRJZH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUEFUQ0ggL2Rpc2NvdW50cy97ZGlzY291bnRfaWR9XG4gICAgICovXG4gICAgdXBkYXRlKGRpc2NvdW50SWQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wYXRjaChgL2Rpc2NvdW50cy8ke2Rpc2NvdW50SWR9YCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5saXN0KHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvZGlzY291bnRzJywgRGlzY291bnRzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBERUxFVEUgL2Rpc2NvdW50cy97ZGlzY291bnRfaWR9XG4gICAgICovXG4gICAgZGVsZXRlKGRpc2NvdW50SWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUoYC9kaXNjb3VudHMvJHtkaXNjb3VudElkfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IEFjY2VwdDogJyovKicsIC4uLm9wdGlvbnM/LmhlYWRlcnMgfSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIERpc2NvdW50c0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiBleHRlbmRzIERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB7XG59XG5EaXNjb3VudHMuRGlzY291bnRzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uID0gRGlzY291bnRzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlzY291bnRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJpc1JlcXVlc3RPcHRpb25zIiwiRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIiwiRGlzY291bnRzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInJldHJpZXZlIiwiZGlzY291bnRJZCIsImdldCIsInVwZGF0ZSIsInBhdGNoIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsIkRpc2NvdW50c0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsImRlbGV0ZSIsImhlYWRlcnMiLCJBY2NlcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/discounts.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/disputes.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/disputes.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DisputeListResponsesDefaultPageNumberPagination: () => (/* binding */ DisputeListResponsesDefaultPageNumberPagination),\n/* harmony export */   Disputes: () => (/* binding */ Disputes)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Disputes extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    retrieve(disputeId, options) {\n        return this._client.get(`/disputes/${disputeId}`, options);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/disputes\", DisputeListResponsesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n}\nclass DisputeListResponsesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nDisputes.DisputeListResponsesDefaultPageNumberPagination = DisputeListResponsesDefaultPageNumberPagination; //# sourceMappingURL=disputes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvZGlzcHV0ZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3hDO0FBQ0M7QUFDaUI7QUFDekQsTUFBTUcsaUJBQWlCSCxzREFBV0E7SUFDckNJLFNBQVNDLFNBQVMsRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRUgsVUFBVSxDQUFDLEVBQUVDO0lBQ3REO0lBQ0FHLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixJQUFJTCwyREFBZ0JBLENBQUNTLFFBQVE7WUFDekIsT0FBTyxJQUFJLENBQUNELElBQUksQ0FBQyxDQUFDLEdBQUdDO1FBQ3pCO1FBQ0EsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksVUFBVSxDQUFDLGFBQWFDLGlEQUFpRDtZQUN6RkY7WUFDQSxHQUFHSixPQUFPO1FBQ2Q7SUFDSjtBQUNKO0FBQ08sTUFBTU0sd0RBQXdEVix3RUFBMkJBO0FBQ2hHO0FBQ0FDLFNBQVNTLCtDQUErQyxHQUFHQSxpREFDM0QscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvZGlzcHV0ZXMubWpzP2FlY2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi9jb3JlLm1qc1wiO1xuaW1wb3J0IHsgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIH0gZnJvbSBcIi4uL3BhZ2luYXRpb24ubWpzXCI7XG5leHBvcnQgY2xhc3MgRGlzcHV0ZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgcmV0cmlldmUoZGlzcHV0ZUlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvZGlzcHV0ZXMvJHtkaXNwdXRlSWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9kaXNwdXRlcycsIERpc3B1dGVMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBEaXNwdXRlTGlzdFJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiBleHRlbmRzIERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB7XG59XG5EaXNwdXRlcy5EaXNwdXRlTGlzdFJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiA9IERpc3B1dGVMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlzcHV0ZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImlzUmVxdWVzdE9wdGlvbnMiLCJEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iLCJEaXNwdXRlcyIsInJldHJpZXZlIiwiZGlzcHV0ZUlkIiwib3B0aW9ucyIsIl9jbGllbnQiLCJnZXQiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiRGlzcHV0ZUxpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/disputes.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/invoices/invoices.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/invoices/invoices.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Invoices: () => (/* binding */ Invoices)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _payments_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payments.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/invoices/payments.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Invoices extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.payments = new _payments_mjs__WEBPACK_IMPORTED_MODULE_1__.Payments(this._client);\n    }\n}\nInvoices.Payments = _payments_mjs__WEBPACK_IMPORTED_MODULE_1__.Payments; //# sourceMappingURL=invoices.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvaW52b2ljZXMvaW52b2ljZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNyQztBQUNIO0FBQ0o7QUFDbkMsTUFBTUcsaUJBQWlCSCxzREFBV0E7SUFDckNJLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSUwsbURBQW9CLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ3pEO0FBQ0o7QUFDQUosU0FBU0QsUUFBUSxHQUFHQSxtREFBUUEsRUFDNUIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvaW52b2ljZXMvaW52b2ljZXMubWpzP2M3YTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgUGF5bWVudHNBUEkgZnJvbSBcIi4vcGF5bWVudHMubWpzXCI7XG5pbXBvcnQgeyBQYXltZW50cyB9IGZyb20gXCIuL3BheW1lbnRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEludm9pY2VzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnBheW1lbnRzID0gbmV3IFBheW1lbnRzQVBJLlBheW1lbnRzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuSW52b2ljZXMuUGF5bWVudHMgPSBQYXltZW50cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludm9pY2VzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQYXltZW50c0FQSSIsIlBheW1lbnRzIiwiSW52b2ljZXMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInBheW1lbnRzIiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/invoices/invoices.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/invoices/payments.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/invoices/payments.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Payments: () => (/* binding */ Payments)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Payments extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    retrieve(paymentId, options) {\n        return this._client.get(`/invoices/payments/${paymentId}`, {\n            ...options,\n            headers: {\n                Accept: \"application/pdf\",\n                ...options?.headers\n            },\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=payments.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvaW52b2ljZXMvcGF5bWVudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JDO0FBQzFDLE1BQU1DLGlCQUFpQkQsc0RBQVdBO0lBQ3JDRSxTQUFTQyxTQUFTLEVBQUVDLE9BQU8sRUFBRTtRQUN6QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQyxtQkFBbUIsRUFBRUgsVUFBVSxDQUFDLEVBQUU7WUFDdkQsR0FBR0MsT0FBTztZQUNWRyxTQUFTO2dCQUFFQyxRQUFRO2dCQUFtQixHQUFHSixTQUFTRyxPQUFPO1lBQUM7WUFDMURFLGtCQUFrQjtRQUN0QjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9pbnZvaWNlcy9wYXltZW50cy5tanM/YzRmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgUGF5bWVudHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgcmV0cmlldmUocGF5bWVudElkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvaW52b2ljZXMvcGF5bWVudHMvJHtwYXltZW50SWR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnYXBwbGljYXRpb24vcGRmJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICAgICAgX19iaW5hcnlSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF5bWVudHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlBheW1lbnRzIiwicmV0cmlldmUiLCJwYXltZW50SWQiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldCIsImhlYWRlcnMiLCJBY2NlcHQiLCJfX2JpbmFyeVJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/invoices/payments.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/license-key-instances.mjs":
/*!***************************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/license-key-instances.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LicenseKeyInstances: () => (/* binding */ LicenseKeyInstances),\n/* harmony export */   LicenseKeyInstancesDefaultPageNumberPagination: () => (/* binding */ LicenseKeyInstancesDefaultPageNumberPagination)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass LicenseKeyInstances extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * @example\n     * ```ts\n     * const licenseKeyInstance =\n     *   await client.licenseKeyInstances.retrieve('lki_123');\n     * ```\n     */ retrieve(id, options) {\n        return this._client.get(`/license_key_instances/${id}`, options);\n    }\n    /**\n     * @example\n     * ```ts\n     * const licenseKeyInstance =\n     *   await client.licenseKeyInstances.update('lki_123', {\n     *     name: 'name',\n     *   });\n     * ```\n     */ update(id, body, options) {\n        return this._client.patch(`/license_key_instances/${id}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/license_key_instances\", LicenseKeyInstancesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n}\nclass LicenseKeyInstancesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nLicenseKeyInstances.LicenseKeyInstancesDefaultPageNumberPagination = LicenseKeyInstancesDefaultPageNumberPagination; //# sourceMappingURL=license-key-instances.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbGljZW5zZS1rZXktaW5zdGFuY2VzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUN4QztBQUNDO0FBQ2lCO0FBQ3pELE1BQU1HLDRCQUE0Qkgsc0RBQVdBO0lBQ2hEOzs7Ozs7S0FNQyxHQUNESSxTQUFTQyxFQUFFLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQyx1QkFBdUIsRUFBRUgsR0FBRyxDQUFDLEVBQUVDO0lBQzVEO0lBQ0E7Ozs7Ozs7O0tBUUMsR0FDREcsT0FBT0osRUFBRSxFQUFFSyxJQUFJLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxLQUFLLENBQUMsQ0FBQyx1QkFBdUIsRUFBRU4sR0FBRyxDQUFDLEVBQUU7WUFBRUs7WUFBTSxHQUFHSixPQUFPO1FBQUM7SUFDakY7SUFDQU0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLElBQUlMLDJEQUFnQkEsQ0FBQ1ksUUFBUTtZQUN6QixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBR0M7UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ04sT0FBTyxDQUFDTyxVQUFVLENBQUMsMEJBQTBCQyxnREFBZ0Q7WUFDckdGO1lBQ0EsR0FBR1AsT0FBTztRQUNkO0lBQ0o7QUFDSjtBQUNPLE1BQU1TLHVEQUF1RGIsd0VBQTJCQTtBQUMvRjtBQUNBQyxvQkFBb0JZLDhDQUE4QyxHQUM5REEsZ0RBQ0osa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbGljZW5zZS1rZXktaW5zdGFuY2VzLm1qcz80ZDg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIExpY2Vuc2VLZXlJbnN0YW5jZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGxpY2Vuc2VLZXlJbnN0YW5jZSA9XG4gICAgICogICBhd2FpdCBjbGllbnQubGljZW5zZUtleUluc3RhbmNlcy5yZXRyaWV2ZSgnbGtpXzEyMycpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJldHJpZXZlKGlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvbGljZW5zZV9rZXlfaW5zdGFuY2VzLyR7aWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBsaWNlbnNlS2V5SW5zdGFuY2UgPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmxpY2Vuc2VLZXlJbnN0YW5jZXMudXBkYXRlKCdsa2lfMTIzJywge1xuICAgICAqICAgICBuYW1lOiAnbmFtZScsXG4gICAgICogICB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB1cGRhdGUoaWQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wYXRjaChgL2xpY2Vuc2Vfa2V5X2luc3RhbmNlcy8ke2lkfWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2xpY2Vuc2Vfa2V5X2luc3RhbmNlcycsIExpY2Vuc2VLZXlJbnN0YW5jZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24sIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIExpY2Vuc2VLZXlJbnN0YW5jZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24gZXh0ZW5kcyBEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24ge1xufVxuTGljZW5zZUtleUluc3RhbmNlcy5MaWNlbnNlS2V5SW5zdGFuY2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uID1cbiAgICBMaWNlbnNlS2V5SW5zdGFuY2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGljZW5zZS1rZXktaW5zdGFuY2VzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJpc1JlcXVlc3RPcHRpb25zIiwiRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIiwiTGljZW5zZUtleUluc3RhbmNlcyIsInJldHJpZXZlIiwiaWQiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldCIsInVwZGF0ZSIsImJvZHkiLCJwYXRjaCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJMaWNlbnNlS2V5SW5zdGFuY2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/license-key-instances.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/license-keys.mjs":
/*!******************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/license-keys.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LicenseKeys: () => (/* binding */ LicenseKeys),\n/* harmony export */   LicenseKeysDefaultPageNumberPagination: () => (/* binding */ LicenseKeysDefaultPageNumberPagination)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass LicenseKeys extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * @example\n     * ```ts\n     * const licenseKey = await client.licenseKeys.retrieve(\n     *   'lic_123',\n     * );\n     * ```\n     */ retrieve(id, options) {\n        return this._client.get(`/license_keys/${id}`, options);\n    }\n    /**\n     * @example\n     * ```ts\n     * const licenseKey = await client.licenseKeys.update(\n     *   'lic_123',\n     * );\n     * ```\n     */ update(id, body, options) {\n        return this._client.patch(`/license_keys/${id}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/license_keys\", LicenseKeysDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n}\nclass LicenseKeysDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nLicenseKeys.LicenseKeysDefaultPageNumberPagination = LicenseKeysDefaultPageNumberPagination; //# sourceMappingURL=license-keys.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbGljZW5zZS1rZXlzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUN4QztBQUNDO0FBQ2lCO0FBQ3pELE1BQU1HLG9CQUFvQkgsc0RBQVdBO0lBQ3hDOzs7Ozs7O0tBT0MsR0FDREksU0FBU0MsRUFBRSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQUMsY0FBYyxFQUFFSCxHQUFHLENBQUMsRUFBRUM7SUFDbkQ7SUFDQTs7Ozs7OztLQU9DLEdBQ0RHLE9BQU9KLEVBQUUsRUFBRUssSUFBSSxFQUFFSixPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksS0FBSyxDQUFDLENBQUMsY0FBYyxFQUFFTixHQUFHLENBQUMsRUFBRTtZQUFFSztZQUFNLEdBQUdKLE9BQU87UUFBQztJQUN4RTtJQUNBTSxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFUCxPQUFPLEVBQUU7UUFDdEIsSUFBSUwsMkRBQWdCQSxDQUFDWSxRQUFRO1lBQ3pCLE9BQU8sSUFBSSxDQUFDRCxJQUFJLENBQUMsQ0FBQyxHQUFHQztRQUN6QjtRQUNBLE9BQU8sSUFBSSxDQUFDTixPQUFPLENBQUNPLFVBQVUsQ0FBQyxpQkFBaUJDLHdDQUF3QztZQUNwRkY7WUFDQSxHQUFHUCxPQUFPO1FBQ2Q7SUFDSjtBQUNKO0FBQ08sTUFBTVMsK0NBQStDYix3RUFBMkJBO0FBQ3ZGO0FBQ0FDLFlBQVlZLHNDQUFzQyxHQUFHQSx3Q0FDckQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbGljZW5zZS1rZXlzLm1qcz8zZTZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIExpY2Vuc2VLZXlzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBsaWNlbnNlS2V5ID0gYXdhaXQgY2xpZW50LmxpY2Vuc2VLZXlzLnJldHJpZXZlKFxuICAgICAqICAgJ2xpY18xMjMnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmV0cmlldmUoaWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9saWNlbnNlX2tleXMvJHtpZH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGxpY2Vuc2VLZXkgPSBhd2FpdCBjbGllbnQubGljZW5zZUtleXMudXBkYXRlKFxuICAgICAqICAgJ2xpY18xMjMnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgdXBkYXRlKGlkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucGF0Y2goYC9saWNlbnNlX2tleXMvJHtpZH1gLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9saWNlbnNlX2tleXMnLCBMaWNlbnNlS2V5c0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTGljZW5zZUtleXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24gZXh0ZW5kcyBEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24ge1xufVxuTGljZW5zZUtleXMuTGljZW5zZUtleXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24gPSBMaWNlbnNlS2V5c0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpY2Vuc2Uta2V5cy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkRlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsIkxpY2Vuc2VLZXlzIiwicmV0cmlldmUiLCJpZCIsIm9wdGlvbnMiLCJfY2xpZW50IiwiZ2V0IiwidXBkYXRlIiwiYm9keSIsInBhdGNoIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsIkxpY2Vuc2VLZXlzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/license-keys.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/licenses.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/licenses.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Licenses: () => (/* binding */ Licenses)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Licenses extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * @example\n     * ```ts\n     * const licenseKeyInstance = await client.licenses.activate({\n     *   license_key: 'license_key',\n     *   name: 'name',\n     * });\n     * ```\n     */ activate(body, options) {\n        return this._client.post(\"/licenses/activate\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * @example\n     * ```ts\n     * await client.licenses.deactivate({\n     *   license_key: 'license_key',\n     *   license_key_instance_id: 'license_key_instance_id',\n     * });\n     * ```\n     */ deactivate(body, options) {\n        return this._client.post(\"/licenses/deactivate\", {\n            body,\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n    /**\n     * @example\n     * ```ts\n     * const response = await client.licenses.validate({\n     *   license_key: '2b1f8e2d-c41e-4e8f-b2d3-d9fd61c38f43',\n     * });\n     * ```\n     */ validate(body, options) {\n        return this._client.post(\"/licenses/validate\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=licenses.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbGljZW5zZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3hDO0FBQ3ZDLE1BQU1DLGlCQUFpQkQsc0RBQVdBO0lBQ3JDOzs7Ozs7OztLQVFDLEdBQ0RFLFNBQVNDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxzQkFBc0I7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDdEU7SUFDQTs7Ozs7Ozs7S0FRQyxHQUNERyxXQUFXSixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsd0JBQXdCO1lBQzdDSDtZQUNBLEdBQUdDLE9BQU87WUFDVkksU0FBUztnQkFBRUMsUUFBUTtnQkFBTyxHQUFHTCxTQUFTSSxPQUFPO1lBQUM7UUFDbEQ7SUFDSjtJQUNBOzs7Ozs7O0tBT0MsR0FDREUsU0FBU1AsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDcEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLHNCQUFzQjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUN0RTtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbGljZW5zZXMubWpzPzY3NTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIExpY2Vuc2VzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBsaWNlbnNlS2V5SW5zdGFuY2UgPSBhd2FpdCBjbGllbnQubGljZW5zZXMuYWN0aXZhdGUoe1xuICAgICAqICAgbGljZW5zZV9rZXk6ICdsaWNlbnNlX2tleScsXG4gICAgICogICBuYW1lOiAnbmFtZScsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYWN0aXZhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9saWNlbnNlcy9hY3RpdmF0ZScsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGF3YWl0IGNsaWVudC5saWNlbnNlcy5kZWFjdGl2YXRlKHtcbiAgICAgKiAgIGxpY2Vuc2Vfa2V5OiAnbGljZW5zZV9rZXknLFxuICAgICAqICAgbGljZW5zZV9rZXlfaW5zdGFuY2VfaWQ6ICdsaWNlbnNlX2tleV9pbnN0YW5jZV9pZCcsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZGVhY3RpdmF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2xpY2Vuc2VzL2RlYWN0aXZhdGUnLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnKi8qJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmxpY2Vuc2VzLnZhbGlkYXRlKHtcbiAgICAgKiAgIGxpY2Vuc2Vfa2V5OiAnMmIxZjhlMmQtYzQxZS00ZThmLWIyZDMtZDlmZDYxYzM4ZjQzJyxcbiAgICAgKiB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB2YWxpZGF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2xpY2Vuc2VzL3ZhbGlkYXRlJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpY2Vuc2VzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJMaWNlbnNlcyIsImFjdGl2YXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImRlYWN0aXZhdGUiLCJoZWFkZXJzIiwiQWNjZXB0IiwidmFsaWRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/licenses.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/misc.mjs":
/*!**********************************************************!*\
  !*** ../../node_modules/dodopayments/resources/misc.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Misc: () => (/* binding */ Misc)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Misc extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    listSupportedCountries(options) {\n        return this._client.get(\"/checkout/supported_countries\", options);\n    }\n} //# sourceMappingURL=misc.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbWlzYy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDeEM7QUFDdkMsTUFBTUMsYUFBYUQsc0RBQVdBO0lBQ2pDRSx1QkFBdUJDLE9BQU8sRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUNBQWlDRjtJQUM3RDtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvbWlzYy5tanM/YzI5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgTWlzYyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBsaXN0U3VwcG9ydGVkQ291bnRyaWVzKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoJy9jaGVja291dC9zdXBwb3J0ZWRfY291bnRyaWVzJywgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlzYy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiTWlzYyIsImxpc3RTdXBwb3J0ZWRDb3VudHJpZXMiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/misc.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/payments.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/payments.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaymentListResponsesDefaultPageNumberPagination: () => (/* binding */ PaymentListResponsesDefaultPageNumberPagination),\n/* harmony export */   Payments: () => (/* binding */ Payments)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Payments extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/payments\", {\n            body,\n            ...options\n        });\n    }\n    retrieve(paymentId, options) {\n        return this._client.get(`/payments/${paymentId}`, options);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/payments\", PaymentListResponsesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n    retrieveLineItems(paymentId, options) {\n        return this._client.get(`/payments/${paymentId}/line-items`, options);\n    }\n}\nclass PaymentListResponsesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nPayments.PaymentListResponsesDefaultPageNumberPagination = PaymentListResponsesDefaultPageNumberPagination; //# sourceMappingURL=payments.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcGF5bWVudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3hDO0FBQ0M7QUFDaUI7QUFDekQsTUFBTUcsaUJBQWlCSCxzREFBV0E7SUFDckNJLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxhQUFhO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzdEO0lBQ0FHLFNBQVNDLFNBQVMsRUFBRUosT0FBTyxFQUFFO1FBQ3pCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRUQsVUFBVSxDQUFDLEVBQUVKO0lBQ3REO0lBQ0FNLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sRUFBRTtRQUN0QixJQUFJTCwyREFBZ0JBLENBQUNZLFFBQVE7WUFDekIsT0FBTyxJQUFJLENBQUNELElBQUksQ0FBQyxDQUFDLEdBQUdDO1FBQ3pCO1FBQ0EsT0FBTyxJQUFJLENBQUNOLE9BQU8sQ0FBQ08sVUFBVSxDQUFDLGFBQWFDLGlEQUFpRDtZQUN6RkY7WUFDQSxHQUFHUCxPQUFPO1FBQ2Q7SUFDSjtJQUNBVSxrQkFBa0JOLFNBQVMsRUFBRUosT0FBTyxFQUFFO1FBQ2xDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRUQsVUFBVSxXQUFXLENBQUMsRUFBRUo7SUFDakU7QUFDSjtBQUNPLE1BQU1TLHdEQUF3RGIsd0VBQTJCQTtBQUNoRztBQUNBQyxTQUFTWSwrQ0FBK0MsR0FBR0EsaURBQzNELHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aXNpdG9yaXEvd2ViLy4uLy4uL25vZGVfbW9kdWxlcy9kb2RvcGF5bWVudHMvcmVzb3VyY2VzL3BheW1lbnRzLm1qcz84NDRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFBheW1lbnRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3BheW1lbnRzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICByZXRyaWV2ZShwYXltZW50SWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9wYXltZW50cy8ke3BheW1lbnRJZH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3BheW1lbnRzJywgUGF5bWVudExpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24sIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHJpZXZlTGluZUl0ZW1zKHBheW1lbnRJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3BheW1lbnRzLyR7cGF5bWVudElkfS9saW5lLWl0ZW1zYCwgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFBheW1lbnRMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIGV4dGVuZHMgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIHtcbn1cblBheW1lbnRzLlBheW1lbnRMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uID0gUGF5bWVudExpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXltZW50cy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkRlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsIlBheW1lbnRzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInJldHJpZXZlIiwicGF5bWVudElkIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsIlBheW1lbnRMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIiwicmV0cmlldmVMaW5lSXRlbXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/payments.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/payouts.mjs":
/*!*************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/payouts.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PayoutListResponsesDefaultPageNumberPagination: () => (/* binding */ PayoutListResponsesDefaultPageNumberPagination),\n/* harmony export */   Payouts: () => (/* binding */ Payouts)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Payouts extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/payouts\", PayoutListResponsesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n}\nclass PayoutListResponsesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nPayouts.PayoutListResponsesDefaultPageNumberPagination = PayoutListResponsesDefaultPageNumberPagination; //# sourceMappingURL=payouts.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcGF5b3V0cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDeEM7QUFDQztBQUNpQjtBQUN6RCxNQUFNRyxnQkFBZ0JILHNEQUFXQTtJQUNwQ0ksS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ3RCLElBQUlMLDJEQUFnQkEsQ0FBQ0ksUUFBUTtZQUN6QixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBR0M7UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ0UsT0FBTyxDQUFDQyxVQUFVLENBQUMsWUFBWUMsZ0RBQWdEO1lBQ3ZGSjtZQUNBLEdBQUdDLE9BQU87UUFDZDtJQUNKO0FBQ0o7QUFDTyxNQUFNRyx1REFBdURQLHdFQUEyQkE7QUFDL0Y7QUFDQUMsUUFBUU0sOENBQThDLEdBQUdBLGdEQUN6RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9wYXlvdXRzLm1qcz8yZDgyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFBheW91dHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3BheW91dHMnLCBQYXlvdXRMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBQYXlvdXRMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIGV4dGVuZHMgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIHtcbn1cblBheW91dHMuUGF5b3V0TGlzdFJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiA9IFBheW91dExpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXlvdXRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJpc1JlcXVlc3RPcHRpb25zIiwiRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIiwiUGF5b3V0cyIsImxpc3QiLCJxdWVyeSIsIm9wdGlvbnMiLCJfY2xpZW50IiwiZ2V0QVBJTGlzdCIsIlBheW91dExpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/payouts.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/products/images.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/products/images.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Images: () => (/* binding */ Images)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Images extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    update(id, params = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(params)) {\n            return this.update(id, {}, params);\n        }\n        const { force_update } = params;\n        return this._client.put(`/products/${id}/images`, {\n            query: {\n                force_update\n            },\n            ...options\n        });\n    }\n} //# sourceMappingURL=images.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcHJvZHVjdHMvaW1hZ2VzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDckM7QUFDQztBQUMzQyxNQUFNRSxlQUFlRixzREFBV0E7SUFDbkNHLE9BQU9DLEVBQUUsRUFBRUMsU0FBUyxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQzdCLElBQUlMLDJEQUFnQkEsQ0FBQ0ksU0FBUztZQUMxQixPQUFPLElBQUksQ0FBQ0YsTUFBTSxDQUFDQyxJQUFJLENBQUMsR0FBR0M7UUFDL0I7UUFDQSxNQUFNLEVBQUVFLFlBQVksRUFBRSxHQUFHRjtRQUN6QixPQUFPLElBQUksQ0FBQ0csT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQyxVQUFVLEVBQUVMLEdBQUcsT0FBTyxDQUFDLEVBQUU7WUFBRU0sT0FBTztnQkFBRUg7WUFBYTtZQUFHLEdBQUdELE9BQU87UUFBQztJQUM1RjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcHJvZHVjdHMvaW1hZ2VzLm1qcz9hMmUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vY29yZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBJbWFnZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgdXBkYXRlKGlkLCBwYXJhbXMgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhwYXJhbXMpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy51cGRhdGUoaWQsIHt9LCBwYXJhbXMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgZm9yY2VfdXBkYXRlIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucHV0KGAvcHJvZHVjdHMvJHtpZH0vaW1hZ2VzYCwgeyBxdWVyeTogeyBmb3JjZV91cGRhdGUgfSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImlzUmVxdWVzdE9wdGlvbnMiLCJJbWFnZXMiLCJ1cGRhdGUiLCJpZCIsInBhcmFtcyIsIm9wdGlvbnMiLCJmb3JjZV91cGRhdGUiLCJfY2xpZW50IiwicHV0IiwicXVlcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/products/images.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/products/products.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/products/products.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductListResponsesDefaultPageNumberPagination: () => (/* binding */ ProductListResponsesDefaultPageNumberPagination),\n/* harmony export */   Products: () => (/* binding */ Products)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _images_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./images.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/products/images.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Products extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.images = new _images_mjs__WEBPACK_IMPORTED_MODULE_1__.Images(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/products\", {\n            body,\n            ...options\n        });\n    }\n    retrieve(id, options) {\n        return this._client.get(`/products/${id}`, options);\n    }\n    update(id, body, options) {\n        return this._client.patch(`/products/${id}`, {\n            body,\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/products\", ProductListResponsesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n    delete(id, options) {\n        return this._client.delete(`/products/${id}`, {\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n    unarchive(id, options) {\n        return this._client.post(`/products/${id}/unarchive`, {\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n    updateFiles(id, body, options) {\n        return this._client.put(`/products/${id}/files`, {\n            body,\n            ...options\n        });\n    }\n}\nclass ProductListResponsesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.DefaultPageNumberPagination {\n}\nProducts.ProductListResponsesDefaultPageNumberPagination = ProductListResponsesDefaultPageNumberPagination;\nProducts.Images = _images_mjs__WEBPACK_IMPORTED_MODULE_1__.Images; //# sourceMappingURL=products.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcHJvZHVjdHMvcHJvZHVjdHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNyQztBQUNDO0FBQ1I7QUFDSjtBQUM2QjtBQUM1RCxNQUFNSyxpQkFBaUJMLHNEQUFXQTtJQUNyQ00sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJTiwrQ0FBZ0IsQ0FBQyxJQUFJLENBQUNPLE9BQU87SUFDbkQ7SUFDQUMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLGFBQWE7WUFBRUY7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDN0Q7SUFDQUUsU0FBU0MsRUFBRSxFQUFFSCxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ08sR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFRCxHQUFHLENBQUMsRUFBRUg7SUFDL0M7SUFDQUssT0FBT0YsRUFBRSxFQUFFSixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDUyxLQUFLLENBQUMsQ0FBQyxVQUFVLEVBQUVILEdBQUcsQ0FBQyxFQUFFO1lBQ3pDSjtZQUNBLEdBQUdDLE9BQU87WUFDVk8sU0FBUztnQkFBRUMsUUFBUTtnQkFBTyxHQUFHUixTQUFTTyxPQUFPO1lBQUM7UUFDbEQ7SUFDSjtJQUNBRSxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFVixPQUFPLEVBQUU7UUFDdEIsSUFBSVgsMkRBQWdCQSxDQUFDcUIsUUFBUTtZQUN6QixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBR0M7UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ2IsT0FBTyxDQUFDYyxVQUFVLENBQUMsYUFBYUMsaURBQWlEO1lBQ3pGRjtZQUNBLEdBQUdWLE9BQU87UUFDZDtJQUNKO0lBQ0FhLE9BQU9WLEVBQUUsRUFBRUgsT0FBTyxFQUFFO1FBQ2hCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNnQixNQUFNLENBQUMsQ0FBQyxVQUFVLEVBQUVWLEdBQUcsQ0FBQyxFQUFFO1lBQzFDLEdBQUdILE9BQU87WUFDVk8sU0FBUztnQkFBRUMsUUFBUTtnQkFBTyxHQUFHUixTQUFTTyxPQUFPO1lBQUM7UUFDbEQ7SUFDSjtJQUNBTyxVQUFVWCxFQUFFLEVBQUVILE9BQU8sRUFBRTtRQUNuQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUVFLEdBQUcsVUFBVSxDQUFDLEVBQUU7WUFDbEQsR0FBR0gsT0FBTztZQUNWTyxTQUFTO2dCQUFFQyxRQUFRO2dCQUFPLEdBQUdSLFNBQVNPLE9BQU87WUFBQztRQUNsRDtJQUNKO0lBQ0FRLFlBQVlaLEVBQUUsRUFBRUosSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ21CLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRWIsR0FBRyxNQUFNLENBQUMsRUFBRTtZQUFFSjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUN4RTtBQUNKO0FBQ08sTUFBTVksd0RBQXdEcEIsd0VBQTJCQTtBQUNoRztBQUNBQyxTQUFTbUIsK0NBQStDLEdBQUdBO0FBQzNEbkIsU0FBU0YsTUFBTSxHQUFHQSwrQ0FBTUEsRUFDeEIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcHJvZHVjdHMvcHJvZHVjdHMubWpzPzYxYWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9jb3JlLm1qc1wiO1xuaW1wb3J0ICogYXMgSW1hZ2VzQVBJIGZyb20gXCIuL2ltYWdlcy5tanNcIjtcbmltcG9ydCB7IEltYWdlcyB9IGZyb20gXCIuL2ltYWdlcy5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi8uLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFByb2R1Y3RzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmltYWdlcyA9IG5ldyBJbWFnZXNBUEkuSW1hZ2VzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3Byb2R1Y3RzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICByZXRyaWV2ZShpZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3Byb2R1Y3RzLyR7aWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHVwZGF0ZShpZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBhdGNoKGAvcHJvZHVjdHMvJHtpZH1gLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnKi8qJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3Byb2R1Y3RzJywgUHJvZHVjdExpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24sIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRlbGV0ZShpZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShgL3Byb2R1Y3RzLyR7aWR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnKi8qJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdW5hcmNoaXZlKGlkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChgL3Byb2R1Y3RzLyR7aWR9L3VuYXJjaGl2ZWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IEFjY2VwdDogJyovKicsIC4uLm9wdGlvbnM/LmhlYWRlcnMgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHVwZGF0ZUZpbGVzKGlkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucHV0KGAvcHJvZHVjdHMvJHtpZH0vZmlsZXNgLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFByb2R1Y3RMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIGV4dGVuZHMgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIHtcbn1cblByb2R1Y3RzLlByb2R1Y3RMaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uID0gUHJvZHVjdExpc3RSZXNwb25zZXNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb247XG5Qcm9kdWN0cy5JbWFnZXMgPSBJbWFnZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9kdWN0cy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkltYWdlc0FQSSIsIkltYWdlcyIsIkRlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsIlByb2R1Y3RzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJpbWFnZXMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJpZCIsImdldCIsInVwZGF0ZSIsInBhdGNoIiwiaGVhZGVycyIsIkFjY2VwdCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJQcm9kdWN0TGlzdFJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsImRlbGV0ZSIsInVuYXJjaGl2ZSIsInVwZGF0ZUZpbGVzIiwicHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/products/products.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/refunds.mjs":
/*!*************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/refunds.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Refunds: () => (/* binding */ Refunds),\n/* harmony export */   RefundsDefaultPageNumberPagination: () => (/* binding */ RefundsDefaultPageNumberPagination)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Refunds extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/refunds\", {\n            body,\n            ...options\n        });\n    }\n    retrieve(refundId, options) {\n        return this._client.get(`/refunds/${refundId}`, options);\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/refunds\", RefundsDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n}\nclass RefundsDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nRefunds.RefundsDefaultPageNumberPagination = RefundsDefaultPageNumberPagination; //# sourceMappingURL=refunds.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvcmVmdW5kcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDeEM7QUFDQztBQUNpQjtBQUN6RCxNQUFNRyxnQkFBZ0JILHNEQUFXQTtJQUNwQ0ksT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLFlBQVk7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDNUQ7SUFDQUcsU0FBU0MsUUFBUSxFQUFFSixPQUFPLEVBQUU7UUFDeEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFRCxTQUFTLENBQUMsRUFBRUo7SUFDcEQ7SUFDQU0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLElBQUlMLDJEQUFnQkEsQ0FBQ1ksUUFBUTtZQUN6QixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBR0M7UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ04sT0FBTyxDQUFDTyxVQUFVLENBQUMsWUFBWUMsb0NBQW9DO1lBQUVGO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQ3ZHO0FBQ0o7QUFDTyxNQUFNUywyQ0FBMkNiLHdFQUEyQkE7QUFDbkY7QUFDQUMsUUFBUVksa0NBQWtDLEdBQUdBLG9DQUM3QyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9yZWZ1bmRzLm1qcz81Y2Y3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFJlZnVuZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVmdW5kcycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgcmV0cmlldmUocmVmdW5kSWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9yZWZ1bmRzLyR7cmVmdW5kSWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoaXNSZXF1ZXN0T3B0aW9ucyhxdWVyeSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe30sIHF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9yZWZ1bmRzJywgUmVmdW5kc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUmVmdW5kc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiBleHRlbmRzIERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB7XG59XG5SZWZ1bmRzLlJlZnVuZHNEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24gPSBSZWZ1bmRzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmdW5kcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkRlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiIsIlJlZnVuZHMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwicmV0cmlldmUiLCJyZWZ1bmRJZCIsImdldCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJSZWZ1bmRzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/refunds.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/subscriptions.mjs":
/*!*******************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/subscriptions.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubscriptionListResponsesDefaultPageNumberPagination: () => (/* binding */ SubscriptionListResponsesDefaultPageNumberPagination),\n/* harmony export */   Subscriptions: () => (/* binding */ Subscriptions)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Subscriptions extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/subscriptions\", {\n            body,\n            ...options\n        });\n    }\n    retrieve(subscriptionId, options) {\n        return this._client.get(`/subscriptions/${subscriptionId}`, options);\n    }\n    update(subscriptionId, body, options) {\n        return this._client.patch(`/subscriptions/${subscriptionId}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_1__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/subscriptions\", SubscriptionListResponsesDefaultPageNumberPagination, {\n            query,\n            ...options\n        });\n    }\n    changePlan(subscriptionId, body, options) {\n        return this._client.post(`/subscriptions/${subscriptionId}/change-plan`, {\n            body,\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n    charge(subscriptionId, body, options) {\n        return this._client.post(`/subscriptions/${subscriptionId}/charge`, {\n            body,\n            ...options\n        });\n    }\n}\nclass SubscriptionListResponsesDefaultPageNumberPagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.DefaultPageNumberPagination {\n}\nSubscriptions.SubscriptionListResponsesDefaultPageNumberPagination = SubscriptionListResponsesDefaultPageNumberPagination; //# sourceMappingURL=subscriptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvc3Vic2NyaXB0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDeEM7QUFDQztBQUNpQjtBQUN6RCxNQUFNRyxzQkFBc0JILHNEQUFXQTtJQUMxQ0ksT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGtCQUFrQjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNsRTtJQUNBRyxTQUFTQyxjQUFjLEVBQUVKLE9BQU8sRUFBRTtRQUM5QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQUVELGVBQWUsQ0FBQyxFQUFFSjtJQUNoRTtJQUNBTSxPQUFPRixjQUFjLEVBQUVMLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNNLEtBQUssQ0FBQyxDQUFDLGVBQWUsRUFBRUgsZUFBZSxDQUFDLEVBQUU7WUFBRUw7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDckY7SUFDQVEsS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVQsT0FBTyxFQUFFO1FBQ3RCLElBQUlMLDJEQUFnQkEsQ0FBQ2MsUUFBUTtZQUN6QixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBR0M7UUFDekI7UUFDQSxPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDUyxVQUFVLENBQUMsa0JBQWtCQyxzREFBc0Q7WUFDbkdGO1lBQ0EsR0FBR1QsT0FBTztRQUNkO0lBQ0o7SUFDQVksV0FBV1IsY0FBYyxFQUFFTCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN0QyxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxlQUFlLEVBQUVFLGVBQWUsWUFBWSxDQUFDLEVBQUU7WUFDckVMO1lBQ0EsR0FBR0MsT0FBTztZQUNWYSxTQUFTO2dCQUFFQyxRQUFRO2dCQUFPLEdBQUdkLFNBQVNhLE9BQU87WUFBQztRQUNsRDtJQUNKO0lBQ0FFLE9BQU9YLGNBQWMsRUFBRUwsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLENBQUMsZUFBZSxFQUFFRSxlQUFlLE9BQU8sQ0FBQyxFQUFFO1lBQUVMO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzNGO0FBQ0o7QUFDTyxNQUFNVyw2REFBNkRmLHdFQUEyQkE7QUFDckc7QUFDQUMsY0FBY2Msb0RBQW9ELEdBQzlEQSxzREFDSiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmlzaXRvcmlxL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvZG9kb3BheW1lbnRzL3Jlc291cmNlcy9zdWJzY3JpcHRpb25zLm1qcz8wYjU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGlzUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vY29yZS5tanNcIjtcbmltcG9ydCB7IERlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiB9IGZyb20gXCIuLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFN1YnNjcmlwdGlvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvc3Vic2NyaXB0aW9ucycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgcmV0cmlldmUoc3Vic2NyaXB0aW9uSWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC9zdWJzY3JpcHRpb25zLyR7c3Vic2NyaXB0aW9uSWR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHVwZGF0ZShzdWJzY3JpcHRpb25JZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBhdGNoKGAvc3Vic2NyaXB0aW9ucy8ke3N1YnNjcmlwdGlvbklkfWAsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIGlmIChpc1JlcXVlc3RPcHRpb25zKHF1ZXJ5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7fSwgcXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3N1YnNjcmlwdGlvbnMnLCBTdWJzY3JpcHRpb25MaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjaGFuZ2VQbGFuKHN1YnNjcmlwdGlvbklkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChgL3N1YnNjcmlwdGlvbnMvJHtzdWJzY3JpcHRpb25JZH0vY2hhbmdlLXBsYW5gLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnKi8qJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2hhcmdlKHN1YnNjcmlwdGlvbklkLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChgL3N1YnNjcmlwdGlvbnMvJHtzdWJzY3JpcHRpb25JZH0vY2hhcmdlYCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBTdWJzY3JpcHRpb25MaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIGV4dGVuZHMgRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIHtcbn1cblN1YnNjcmlwdGlvbnMuU3Vic2NyaXB0aW9uTGlzdFJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbiA9XG4gICAgU3Vic2NyaXB0aW9uTGlzdFJlc3BvbnNlc0RlZmF1bHRQYWdlTnVtYmVyUGFnaW5hdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmlwdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImlzUmVxdWVzdE9wdGlvbnMiLCJEZWZhdWx0UGFnZU51bWJlclBhZ2luYXRpb24iLCJTdWJzY3JpcHRpb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInJldHJpZXZlIiwic3Vic2NyaXB0aW9uSWQiLCJnZXQiLCJ1cGRhdGUiLCJwYXRjaCIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJTdWJzY3JpcHRpb25MaXN0UmVzcG9uc2VzRGVmYXVsdFBhZ2VOdW1iZXJQYWdpbmF0aW9uIiwiY2hhbmdlUGxhbiIsImhlYWRlcnMiLCJBY2NlcHQiLCJjaGFyZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/subscriptions.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/webhook-events.mjs":
/*!********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/webhook-events.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookEvents: () => (/* binding */ WebhookEvents)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass WebhookEvents extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=webhook-events.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvd2ViaG9vay1ldmVudHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3hDO0FBQ3ZDLE1BQU1DLHNCQUFzQkQsc0RBQVdBO0FBQzlDLEVBQ0EsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvd2ViaG9vay1ldmVudHMubWpzP2YyMGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFdlYmhvb2tFdmVudHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJob29rLWV2ZW50cy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiV2ViaG9va0V2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/webhook-events.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/webhooks/headers.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/webhooks/headers.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: () => (/* binding */ Headers)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Headers extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get a webhook by id\n     */ retrieve(webhookId, options) {\n        return this._client.get(`/webhooks/${webhookId}/headers`, options);\n    }\n    /**\n     * Patch a webhook by id\n     */ update(webhookId, body, options) {\n        return this._client.patch(`/webhooks/${webhookId}/headers`, {\n            body,\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n} //# sourceMappingURL=headers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvd2ViaG9va3MvaGVhZGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDckM7QUFDMUMsTUFBTUMsZ0JBQWdCRCxzREFBV0E7SUFDcEM7O0tBRUMsR0FDREUsU0FBU0MsU0FBUyxFQUFFQyxPQUFPLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFSCxVQUFVLFFBQVEsQ0FBQyxFQUFFQztJQUM5RDtJQUNBOztLQUVDLEdBQ0RHLE9BQU9KLFNBQVMsRUFBRUssSUFBSSxFQUFFSixPQUFPLEVBQUU7UUFDN0IsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksS0FBSyxDQUFDLENBQUMsVUFBVSxFQUFFTixVQUFVLFFBQVEsQ0FBQyxFQUFFO1lBQ3hESztZQUNBLEdBQUdKLE9BQU87WUFDVk0sU0FBUztnQkFBRUMsUUFBUTtnQkFBTyxHQUFHUCxTQUFTTSxPQUFPO1lBQUM7UUFDbEQ7SUFDSjtBQUNKLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvd2ViaG9va3MvaGVhZGVycy5tanM/Y2RlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgSGVhZGVycyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBHZXQgYSB3ZWJob29rIGJ5IGlkXG4gICAgICovXG4gICAgcmV0cmlldmUod2ViaG9va0lkLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KGAvd2ViaG9va3MvJHt3ZWJob29rSWR9L2hlYWRlcnNgLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGF0Y2ggYSB3ZWJob29rIGJ5IGlkXG4gICAgICovXG4gICAgdXBkYXRlKHdlYmhvb2tJZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBhdGNoKGAvd2ViaG9va3MvJHt3ZWJob29rSWR9L2hlYWRlcnNgLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgQWNjZXB0OiAnKi8qJywgLi4ub3B0aW9ucz8uaGVhZGVycyB9LFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFkZXJzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJIZWFkZXJzIiwicmV0cmlldmUiLCJ3ZWJob29rSWQiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldCIsInVwZGF0ZSIsImJvZHkiLCJwYXRjaCIsImhlYWRlcnMiLCJBY2NlcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/webhooks/headers.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/resources/webhooks/webhooks.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/dodopayments/resources/webhooks/webhooks.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookDetailsCursorPagePagination: () => (/* binding */ WebhookDetailsCursorPagePagination),\n/* harmony export */   Webhooks: () => (/* binding */ Webhooks)\n/* harmony export */ });\n/* harmony import */ var _resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../resource.mjs */ \"(rsc)/../../node_modules/dodopayments/resource.mjs\");\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core.mjs */ \"(rsc)/../../node_modules/dodopayments/core.mjs\");\n/* harmony import */ var _headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headers.mjs */ \"(rsc)/../../node_modules/dodopayments/resources/webhooks/headers.mjs\");\n/* harmony import */ var _pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../pagination.mjs */ \"(rsc)/../../node_modules/dodopayments/pagination.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Webhooks extends _resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.headers = new _headers_mjs__WEBPACK_IMPORTED_MODULE_1__.Headers(this._client);\n    }\n    /**\n     * Create a new webhook\n     */ create(body, options) {\n        return this._client.post(\"/webhooks\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get a webhook by id\n     */ retrieve(webhookId, options) {\n        return this._client.get(`/webhooks/${webhookId}`, options);\n    }\n    /**\n     * Patch a webhook by id\n     */ update(webhookId, body, options) {\n        return this._client.patch(`/webhooks/${webhookId}`, {\n            body,\n            ...options\n        });\n    }\n    list(query = {}, options) {\n        if ((0,_core_mjs__WEBPACK_IMPORTED_MODULE_2__.isRequestOptions)(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList(\"/webhooks\", WebhookDetailsCursorPagePagination, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a webhook by id\n     */ delete(webhookId, options) {\n        return this._client.delete(`/webhooks/${webhookId}`, {\n            ...options,\n            headers: {\n                Accept: \"*/*\",\n                ...options?.headers\n            }\n        });\n    }\n    /**\n     * Get webhook secret by id\n     */ retrieveSecret(webhookId, options) {\n        return this._client.get(`/webhooks/${webhookId}/secret`, options);\n    }\n}\nclass WebhookDetailsCursorPagePagination extends _pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.CursorPagePagination {\n}\nWebhooks.WebhookDetailsCursorPagePagination = WebhookDetailsCursorPagePagination;\nWebhooks.Headers = _headers_mjs__WEBPACK_IMPORTED_MODULE_1__.Headers; //# sourceMappingURL=webhooks.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvd2ViaG9va3Mvd2ViaG9va3MubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNyQztBQUNDO0FBQ047QUFDSjtBQUNvQjtBQUNyRCxNQUFNSyxpQkFBaUJMLHNEQUFXQTtJQUNyQ00sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLE9BQU8sR0FBRyxJQUFJTixpREFBa0IsQ0FBQyxJQUFJLENBQUNPLE9BQU87SUFDdEQ7SUFDQTs7S0FFQyxHQUNEQyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUMsYUFBYTtZQUFFRjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUM3RDtJQUNBOztLQUVDLEdBQ0RFLFNBQVNDLFNBQVMsRUFBRUgsT0FBTyxFQUFFO1FBQ3pCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRUQsVUFBVSxDQUFDLEVBQUVIO0lBQ3REO0lBQ0E7O0tBRUMsR0FDREssT0FBT0YsU0FBUyxFQUFFSixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUM3QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDUyxLQUFLLENBQUMsQ0FBQyxVQUFVLEVBQUVILFVBQVUsQ0FBQyxFQUFFO1lBQUVKO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzNFO0lBQ0FPLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUN0QixJQUFJWCwyREFBZ0JBLENBQUNtQixRQUFRO1lBQ3pCLE9BQU8sSUFBSSxDQUFDRCxJQUFJLENBQUMsQ0FBQyxHQUFHQztRQUN6QjtRQUNBLE9BQU8sSUFBSSxDQUFDWCxPQUFPLENBQUNZLFVBQVUsQ0FBQyxhQUFhQyxvQ0FBb0M7WUFBRUY7WUFBTyxHQUFHUixPQUFPO1FBQUM7SUFDeEc7SUFDQTs7S0FFQyxHQUNEVyxPQUFPUixTQUFTLEVBQUVILE9BQU8sRUFBRTtRQUN2QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDYyxNQUFNLENBQUMsQ0FBQyxVQUFVLEVBQUVSLFVBQVUsQ0FBQyxFQUFFO1lBQ2pELEdBQUdILE9BQU87WUFDVkosU0FBUztnQkFBRWdCLFFBQVE7Z0JBQU8sR0FBR1osU0FBU0osT0FBTztZQUFDO1FBQ2xEO0lBQ0o7SUFDQTs7S0FFQyxHQUNEaUIsZUFBZVYsU0FBUyxFQUFFSCxPQUFPLEVBQUU7UUFDL0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ08sR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFRCxVQUFVLE9BQU8sQ0FBQyxFQUFFSDtJQUM3RDtBQUNKO0FBQ08sTUFBTVUsMkNBQTJDbEIsaUVBQW9CQTtBQUM1RTtBQUNBQyxTQUFTaUIsa0NBQWtDLEdBQUdBO0FBQzlDakIsU0FBU0YsT0FBTyxHQUFHQSxpREFBT0EsRUFDMUIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy9yZXNvdXJjZXMvd2ViaG9va3Mvd2ViaG9va3MubWpzP2YyMTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgaXNSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi8uLi9jb3JlLm1qc1wiO1xuaW1wb3J0ICogYXMgSGVhZGVyc0FQSSBmcm9tIFwiLi9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgSGVhZGVycyB9IGZyb20gXCIuL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlUGFnaW5hdGlvbiB9IGZyb20gXCIuLi8uLi9wYWdpbmF0aW9uLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFdlYmhvb2tzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBuZXcgSGVhZGVyc0FQSS5IZWFkZXJzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyB3ZWJob29rXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvd2ViaG9va3MnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIHdlYmhvb2sgYnkgaWRcbiAgICAgKi9cbiAgICByZXRyaWV2ZSh3ZWJob29rSWQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQoYC93ZWJob29rcy8ke3dlYmhvb2tJZH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGF0Y2ggYSB3ZWJob29rIGJ5IGlkXG4gICAgICovXG4gICAgdXBkYXRlKHdlYmhvb2tJZCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBhdGNoKGAvd2ViaG9va3MvJHt3ZWJob29rSWR9YCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGlzUmVxdWVzdE9wdGlvbnMocXVlcnkpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5saXN0KHt9LCBxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvd2ViaG9va3MnLCBXZWJob29rRGV0YWlsc0N1cnNvclBhZ2VQYWdpbmF0aW9uLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSB3ZWJob29rIGJ5IGlkXG4gICAgICovXG4gICAgZGVsZXRlKHdlYmhvb2tJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShgL3dlYmhvb2tzLyR7d2ViaG9va0lkfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IEFjY2VwdDogJyovKicsIC4uLm9wdGlvbnM/LmhlYWRlcnMgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB3ZWJob29rIHNlY3JldCBieSBpZFxuICAgICAqL1xuICAgIHJldHJpZXZlU2VjcmV0KHdlYmhvb2tJZCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChgL3dlYmhvb2tzLyR7d2ViaG9va0lkfS9zZWNyZXRgLCBvcHRpb25zKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgV2ViaG9va0RldGFpbHNDdXJzb3JQYWdlUGFnaW5hdGlvbiBleHRlbmRzIEN1cnNvclBhZ2VQYWdpbmF0aW9uIHtcbn1cbldlYmhvb2tzLldlYmhvb2tEZXRhaWxzQ3Vyc29yUGFnZVBhZ2luYXRpb24gPSBXZWJob29rRGV0YWlsc0N1cnNvclBhZ2VQYWdpbmF0aW9uO1xuV2ViaG9va3MuSGVhZGVycyA9IEhlYWRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJob29rcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiaXNSZXF1ZXN0T3B0aW9ucyIsIkhlYWRlcnNBUEkiLCJIZWFkZXJzIiwiQ3Vyc29yUGFnZVBhZ2luYXRpb24iLCJXZWJob29rcyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiaGVhZGVycyIsIl9jbGllbnQiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJyZXRyaWV2ZSIsIndlYmhvb2tJZCIsImdldCIsInVwZGF0ZSIsInBhdGNoIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsIldlYmhvb2tEZXRhaWxzQ3Vyc29yUGFnZVBhZ2luYXRpb24iLCJkZWxldGUiLCJBY2NlcHQiLCJyZXRyaWV2ZVNlY3JldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/resources/webhooks/webhooks.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/uploads.mjs":
/*!***************************************************!*\
  !*** ../../node_modules/dodopayments/uploads.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createForm: () => (/* binding */ createForm),\n/* harmony export */   fileFromPath: () => (/* reexport safe */ _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.fileFromPath),\n/* harmony export */   isBlobLike: () => (/* binding */ isBlobLike),\n/* harmony export */   isFileLike: () => (/* binding */ isFileLike),\n/* harmony export */   isMultipartBody: () => (/* binding */ isMultipartBody),\n/* harmony export */   isResponseLike: () => (/* binding */ isResponseLike),\n/* harmony export */   isUploadable: () => (/* binding */ isUploadable),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* binding */ maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* binding */ multipartFormRequestOptions),\n/* harmony export */   toFile: () => (/* binding */ toFile)\n/* harmony export */ });\n/* harmony import */ var _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_shims/index.mjs */ \"(rsc)/../../node_modules/dodopayments/_shims/index.mjs\");\n\n\nconst isResponseLike = (value)=>value != null && typeof value === \"object\" && typeof value.url === \"string\" && typeof value.blob === \"function\";\nconst isFileLike = (value)=>value != null && typeof value === \"object\" && typeof value.name === \"string\" && typeof value.lastModified === \"number\" && isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */ const isBlobLike = (value)=>value != null && typeof value === \"object\" && typeof value.size === \"number\" && typeof value.type === \"string\" && typeof value.text === \"function\" && typeof value.slice === \"function\" && typeof value.arrayBuffer === \"function\";\nconst isUploadable = (value)=>{\n    return isFileLike(value) || isResponseLike(value) || (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.isFsReadStream)(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */ async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? \"unknown_file\");\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [\n            await blob.arrayBuffer()\n        ] : [\n            blob\n        ];\n        return new _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? \"unknown_file\");\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === \"string\") {\n            options = {\n                ...options,\n                type\n            };\n        }\n    }\n    return new _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === \"string\" || ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer) {\n        parts.push(value);\n    } else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    } else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value){\n            parts.push(chunk); // TODO, consider validating?\n        }\n    } else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p)=>`\"${p}\"`).join(\", \")}]`;\n}\nfunction getName(value) {\n    return getStringFromMaybeBuffer(value.name) || getStringFromMaybeBuffer(value.filename) || // For fs.ReadStream\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop();\n}\nconst getStringFromMaybeBuffer = (x)=>{\n    if (typeof x === \"string\") return x;\n    if (typeof Buffer !== \"undefined\" && x instanceof Buffer) return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value)=>value != null && typeof value === \"object\" && typeof value[Symbol.asyncIterator] === \"function\";\nconst isMultipartBody = (body)=>body && typeof body === \"object\" && body.body && body[Symbol.toStringTag] === \"MultipartBody\";\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */ const maybeMultipartFormRequestOptions = async (opts)=>{\n    if (!hasUploadableValue(opts.body)) return opts;\n    const form = await createForm(opts.body);\n    return (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getMultipartRequestOptions)(form, opts);\n};\nconst multipartFormRequestOptions = async (opts)=>{\n    const form = await createForm(opts.body);\n    return (0,_shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getMultipartRequestOptions)(form, opts);\n};\nconst createForm = async (body)=>{\n    const form = new _shims_index_mjs__WEBPACK_IMPORTED_MODULE_0__.FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value])=>addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value)=>{\n    if (isUploadable(value)) return true;\n    if (Array.isArray(value)) return value.some(hasUploadableValue);\n    if (value && typeof value === \"object\") {\n        for(const k in value){\n            if (hasUploadableValue(value[k])) return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value)=>{\n    if (value === undefined) return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n        form.append(key, String(value));\n    } else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    } else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry)=>addFormValue(form, key + \"[]\", entry)));\n    } else if (typeof value === \"object\") {\n        await Promise.all(Object.entries(value).map(([name, prop])=>addFormValue(form, `${key}[${name}]`, prop)));\n    } else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n}; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/../../node_modules/dodopayments/version.mjs":
/*!***************************************************!*\
  !*** ../../node_modules/dodopayments/version.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = \"1.51.2\"; // x-release-please-version\n //# sourceMappingURL=version.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2RvZG9wYXltZW50cy92ZXJzaW9uLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsVUFBVSxTQUFTLENBQUMsMkJBQTJCO0NBQzVELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aXNpdG9yaXEvd2ViLy4uLy4uL25vZGVfbW9kdWxlcy9kb2RvcGF5bWVudHMvdmVyc2lvbi5tanM/ZWYwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVkVSU0lPTiA9ICcxLjUxLjInOyAvLyB4LXJlbGVhc2UtcGxlYXNlLXZlcnNpb25cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24ubWpzLm1hcCJdLCJuYW1lcyI6WyJWRVJTSU9OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/dodopayments/version.mjs\n");

/***/ })

};
;