"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/collect-visitor/route";
exports.ids = ["app/api/collect-visitor/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("string_decoder");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcollect-visitor%2Froute&page=%2Fapi%2Fcollect-visitor%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcollect-visitor%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcollect-visitor%2Froute&page=%2Fapi%2Fcollect-visitor%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcollect-visitor%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_prantikchatterjee_Desktop_Apps_visitoriq_apps_web_app_api_collect_visitor_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/collect-visitor/route.ts */ \"(rsc)/./app/api/collect-visitor/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/collect-visitor/route\",\n        pathname: \"/api/collect-visitor\",\n        filename: \"route\",\n        bundlePath: \"app/api/collect-visitor/route\"\n    },\n    resolvedPagePath: \"/Users/prantikchatterjee/Desktop/Apps/visitoriq/apps/web/app/api/collect-visitor/route.ts\",\n    nextConfigOutput,\n    userland: _Users_prantikchatterjee_Desktop_Apps_visitoriq_apps_web_app_api_collect_visitor_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/collect-visitor/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGY29sbGVjdC12aXNpdG9yJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb2xsZWN0LXZpc2l0b3IlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZjb2xsZWN0LXZpc2l0b3IlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZwcmFudGlrY2hhdHRlcmplZSUyRkRlc2t0b3AlMkZBcHBzJTJGdmlzaXRvcmlxJTJGYXBwcyUyRndlYiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZwcmFudGlrY2hhdHRlcmplZSUyRkRlc2t0b3AlMkZBcHBzJTJGdmlzaXRvcmlxJTJGYXBwcyUyRndlYiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDdUQ7QUFDdEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvP2E3YmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3ByYW50aWtjaGF0dGVyamVlL0Rlc2t0b3AvQXBwcy92aXNpdG9yaXEvYXBwcy93ZWIvYXBwL2FwaS9jb2xsZWN0LXZpc2l0b3Ivcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NvbGxlY3QtdmlzaXRvci9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NvbGxlY3QtdmlzaXRvclwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY29sbGVjdC12aXNpdG9yL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3ByYW50aWtjaGF0dGVyamVlL0Rlc2t0b3AvQXBwcy92aXNpdG9yaXEvYXBwcy93ZWIvYXBwL2FwaS9jb2xsZWN0LXZpc2l0b3Ivcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY29sbGVjdC12aXNpdG9yL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcollect-visitor%2Froute&page=%2Fapi%2Fcollect-visitor%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcollect-visitor%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/collect-visitor/route.ts":
/*!******************************************!*\
  !*** ./app/api/collect-visitor/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   emailIsDisposable: () => (/* binding */ emailIsDisposable),\n/* harmony export */   ipInList: () => (/* binding */ ipInList)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/../../node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/next/headers.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_headers__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/zod/v3/types.js\");\n/* harmony import */ var _lib_redis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/redis */ \"(rsc)/./lib/redis.ts\");\n/* harmony import */ var _lib_ipinfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/ipinfo */ \"(rsc)/./lib/ipinfo.ts\");\n/* harmony import */ var _lib_abuse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/abuse */ \"(rsc)/./lib/abuse.ts\");\n/* harmony import */ var _lib_velocity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/velocity */ \"(rsc)/./lib/velocity.ts\");\n/* harmony import */ var _lib_risk__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/risk */ \"(rsc)/./lib/risk.ts\");\n/* harmony import */ var _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/lib/supabaseServer */ \"(rsc)/./lib/supabaseServer.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uuid */ \"(rsc)/../../node_modules/uuid/dist/esm-node/v5.js\");\n/* harmony import */ var _withCORS__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../withCORS */ \"(rsc)/./app/api/withCORS.ts\");\nconsole.log(\"[CASCADE DEBUG] collect-visitor route.ts loaded\");\nconsole.log(\"SUPABASE_URL\", process.env.SUPABASE_URL);\nconsole.log(\"SUPABASE_SERVICE_ROLE_KEY\", process.env.SUPABASE_SERVICE_ROLE_KEY);\n\n\n\n\n\n\n\n\n\n\n\n// OSS Tor/Proxy/Disposable Email helpers (module scope for ES5 strict mode)\nasync function ipInList(ip, file) {\n    try {\n        const { readFile } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs/promises */ \"fs/promises\", 23));\n        const data = await readFile(file, \"utf8\");\n        const set = new Set(data.split(\"\\n\").map((l)=>l.trim()).filter(Boolean));\n        return set.has(ip);\n    } catch  {\n        return false;\n    }\n}\nasync function emailIsDisposable(email, file) {\n    if (!email) return false;\n    const domain = email.split(\"@\")[1]?.toLowerCase();\n    if (!domain) return false;\n    try {\n        const { readFile } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs/promises */ \"fs/promises\", 23));\n        const data = await readFile(file, \"utf8\");\n        if (domain === \"zzz.com\" || domain === \"gmail.com\") {\n            // Log file path\n            console.log(\"[DISPOSABLE FILE PATH]\", file);\n            // Log first and last 20 lines\n            const lines = data.split(\"\\n\");\n            console.log(\"[DISPOSABLE FILE HEAD]\", lines.slice(0, 20));\n            console.log(\"[DISPOSABLE FILE TAIL]\", lines.slice(-20));\n            // Log last 200 chars\n            console.log(\"[DISPOSABLE RAW FILE]\", JSON.stringify(data.slice(-200)), \"LENGTH:\", data.length);\n        }\n        // Defensive: trim domain and all set values\n        // Remove invisible characters and normalize lines\n        const clean = (s)=>s.replace(/[\\u200B-\\u200D\\uFEFF\\r\\n\\t ]+/g, \"\").toLowerCase();\n        const set = new Set(data.split(\"\\n\").map((l)=>clean(l)).filter(Boolean));\n        return set.has(clean(domain));\n    } catch  {\n        return false;\n    }\n}\nconst CollectVisitorSchema = zod__WEBPACK_IMPORTED_MODULE_9__.object({\n    siteKey: zod__WEBPACK_IMPORTED_MODULE_9__.string(),\n    fingerprint_hash: zod__WEBPACK_IMPORTED_MODULE_9__.string(),\n    userAgent: zod__WEBPACK_IMPORTED_MODULE_9__.string(),\n    language: zod__WEBPACK_IMPORTED_MODULE_9__.string(),\n    timezone: zod__WEBPACK_IMPORTED_MODULE_9__.string(),\n    resolution: zod__WEBPACK_IMPORTED_MODULE_9__.string(),\n    referrer: zod__WEBPACK_IMPORTED_MODULE_9__.string().optional(),\n    incognito: zod__WEBPACK_IMPORTED_MODULE_9__.boolean().optional(),\n    webdriver: zod__WEBPACK_IMPORTED_MODULE_9__.boolean().optional(),\n    thumbmark_signals: zod__WEBPACK_IMPORTED_MODULE_9__.any().optional(),\n    thumbmark_details: zod__WEBPACK_IMPORTED_MODULE_9__.any().optional(),\n    email: zod__WEBPACK_IMPORTED_MODULE_9__.string().email().optional(),\n    phone: zod__WEBPACK_IMPORTED_MODULE_9__.string().optional(),\n    name: zod__WEBPACK_IMPORTED_MODULE_9__.string().optional(),\n    botd_result: zod__WEBPACK_IMPORTED_MODULE_9__.any().optional()\n});\n\nconst OPTIONS = (0,_withCORS__WEBPACK_IMPORTED_MODULE_10__.withCORS)(async function OPTIONS() {\n    return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n        status: 204\n    });\n});\nfunction normalizeBotdResult(botd) {\n    if (!botd) return undefined;\n    // If BotD OSS result is just {bot: false}, normalize to {result: 'notDetected'}\n    if (typeof botd === \"object\" && botd !== null && botd.bot === false) {\n        return {\n            result: \"notDetected\"\n        };\n    }\n    return botd;\n}\nconst POST = (0,_withCORS__WEBPACK_IMPORTED_MODULE_10__.withCORS)(async function POST(req) {\n    try {\n        const body = await req.json();\n        const parse = CollectVisitorSchema.safeParse(body);\n        if (!parse.success) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid body\",\n                details: parse.error.errors\n            }, {\n                status: 400\n            });\n        }\n        const { siteKey, fingerprint_hash, userAgent, language, timezone, resolution, referrer = \"\", incognito = false, webdriver = false, thumbmark_signals, email, phone, name, botd_result } = parse.data;\n        // IP detection\n        const ip = ((0,next_headers__WEBPACK_IMPORTED_MODULE_2__.headers)().get(\"x-forwarded-for\")?.split(\",\")[0] ?? req.ip ?? req.socket?.remoteAddress ?? \"\").trim();\n        if (!ip) return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"IP not found\"\n        }, {\n            status: 400\n        });\n        // OSS Tor/Proxy/Disposable Email checks\n        // OSS Tor/Proxy/Disposable Email checks (async, robust)\n        // Use correct path for disposable email domains\n        // Correct path to disposable-email-domains.txt from monorepo root\n        const disposableFilePath = path__WEBPACK_IMPORTED_MODULE_1___default().resolve(process.cwd(), \"../../packages/disposable-email-domains.txt\");\n        let debugTempEmailDomain = \"\";\n        let debugTempEmailResult = false;\n        // Log the resolved path and file existence\n        const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs */ \"fs\", 23));\n        if (email) {\n            debugTempEmailDomain = email.split(\"@\")[1]?.toLowerCase();\n            debugTempEmailResult = await emailIsDisposable(email, disposableFilePath);\n        }\n        const [isTor, isProxy] = await Promise.all([\n            ipInList(ip, path__WEBPACK_IMPORTED_MODULE_1___default().join(__dirname, \"../../../packages/tor-exit-nodes.txt\")),\n            ipInList(ip, path__WEBPACK_IMPORTED_MODULE_1___default().join(__dirname, \"../../../packages/proxy-list.txt\"))\n        ]);\n        const isTempEmail = debugTempEmailResult;\n        // Rate limit\n        const rl = await (0,_lib_redis__WEBPACK_IMPORTED_MODULE_3__.tokenBucket)(`rl:${ip}`, 60, 1);\n        if (!rl.allowed) return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"rate_limited\"\n        }, {\n            status: 429\n        });\n        // IPInfo\n        const info = await (0,_lib_ipinfo__WEBPACK_IMPORTED_MODULE_4__.getIPInfo)(ip);\n        // Timezone mismatch (MVP: compare string presence)\n        let timezoneMismatch = false;\n        if (info?.timezone && timezone) {\n            timezoneMismatch = info.timezone !== timezone;\n        } else {\n            timezoneMismatch = true;\n        }\n        // AbuseIPDB\n        const abuse = await (0,_lib_abuse__WEBPACK_IMPORTED_MODULE_5__.checkAbuseIP)(ip);\n        // Velocity\n        // Use visitor_id for velocityCount as per schema\n        // If you do not have visitor_id from the request, generate one (UUID) or derive it deterministically\n        // Use fingerprint_hash (or thumbmark hash) as stable visitor_id if possible\n        let visitor_id = fingerprint_hash;\n        // If not a valid UUID, create a deterministic UUID from the hash\n        const uuidValidate = (v)=>/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(v);\n        if (!uuidValidate(visitor_id)) {\n            // Use a deterministic UUID based on the hash (v5, but simple fallback here)\n            const NAMESPACE = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\"; // DNS namespace\n            visitor_id = (0,uuid__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(fingerprint_hash, NAMESPACE);\n        }\n        const v = await (0,_lib_velocity__WEBPACK_IMPORTED_MODULE_6__.velocityCount)(_lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer, siteKey, visitor_id, 60);\n        // Compute risk\n        const vpnDetected = info?.privacy?.vpn || info?.privacy?.hosting || false;\n        const { score, verdict } = (0,_lib_risk__WEBPACK_IMPORTED_MODULE_7__.computeRisk)({\n            incognito,\n            vpn: vpnDetected,\n            timezoneMismatch,\n            webdriver,\n            abuseListed: abuse.blocklisted,\n            velocityCount: v\n        });\n        // Manual blocklist\n        let action = \"manual_review\";\n        let manualBlock = false;\n        let blockId = null;\n        let blockReason = null;\n        let suspiciousReason = null;\n        let suspicious = false;\n        const { data: blocks } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"manual_blocks\").select(\"id,reason\").eq(\"site_key\", siteKey).or(`fingerprint_hash.eq.${fingerprint_hash},ip.eq.${ip}`).is(\"expires_at\", null).limit(1);\n        if (blocks && blocks.length > 0) {\n            manualBlock = true;\n            blockId = blocks[0].id;\n            blockReason = blocks[0].reason;\n        }\n        let finalScore = score;\n        let finalVerdict = verdict;\n        if (manualBlock) {\n            action = \"auto_block\";\n            finalScore = 100;\n            finalVerdict = \"high\";\n        }\n        // Lookup site_id, repeat_signup_limit, user_id, and trial abuse settings from sites table using api_key\n        const { data: siteRow, error: siteError } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"sites\").select(\"id, repeat_signup_limit, user_id, auto_block_trial_abuse, trial_abuse_threshold\").eq(\"api_key\", siteKey).maybeSingle();\n        console.log(\"[DEBUG siteKey]\", siteKey);\n        console.log(\"[DEBUG siteRow FULL]\", JSON.stringify(siteRow));\n        console.log(\"[DEBUG siteRow.auto_block_trial_abuse]\", siteRow ? siteRow.auto_block_trial_abuse : undefined);\n        console.log(\"[DEBUG siteError]\", siteError);\n        if (!siteRow || siteError) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"invalid_site_key\",\n                details: \"Site not found for provided siteKey\"\n            }, {\n                status: 400\n            });\n        }\n        const autoBlockTrialAbuse = siteRow.auto_block_trial_abuse ?? false;\n        const trialAbuseThreshold = siteRow.trial_abuse_threshold ?? 2; // Default threshold = 2\n        // Check API usage quota BEFORE running IPInfo or event insert\n        let quotaExceeded = false;\n        if (siteRow.user_id) {\n            const { data: usageRows, error: usageFetchErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"user_api_usage\").select(\"used, quota, cycle_end\").eq(\"user_id\", siteRow.user_id).limit(1);\n            if (usageFetchErr) {\n                console.error(\"[COLLECT-VISITOR][USAGE] Failed to fetch usage row:\", usageFetchErr, {\n                    user_id: siteRow.user_id\n                });\n            }\n            if (usageRows && usageRows.length > 0) {\n                const { used, quota, cycle_end } = usageRows[0];\n                const now = new Date();\n                if (!cycle_end || new Date(cycle_end) < now) {\n                    quotaExceeded = true;\n                } else if (quota > 0 && used >= quota) {\n                    quotaExceeded = true;\n                }\n            }\n        }\n        if (quotaExceeded) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"quota_exceeded\",\n                details: \"API quota reached for this account.\"\n            }, {\n                status: 429\n            });\n        }\n        // Upsert visitor before inserting event to satisfy FK constraint\n        const { data: upsertedVisitor, error: upsertVisitorErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitors\").upsert({\n            id: visitor_id,\n            site_id: siteRow.id,\n            visitor_id: visitor_id,\n            fingerprint: fingerprint_hash,\n            thumbmark: thumbmark_signals?.hash || \"\",\n            user_agent: userAgent,\n            screen_resolution: resolution,\n            timezone,\n            language,\n            platform: \"\",\n            ip_address: ip,\n            country: info?.country ?? \"\",\n            city: info?.city ?? \"\",\n            region: info?.region ?? \"\",\n            isp: info?.org ?? \"\",\n            is_bot: false,\n            email: email || null,\n            phone: phone || null,\n            name: name || null,\n            risk_score: 0,\n            is_tor: isTor,\n            is_proxy: isProxy,\n            is_temp_email: isTempEmail\n        }, {\n            onConflict: \"id\"\n        });\n        console.log(\"[DEBUG upsertedVisitor]\", upsertedVisitor);\n        console.log(\"[DEBUG upsertVisitorErr]\", upsertVisitorErr);\n        if (upsertVisitorErr) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"db_upsert_visitor_failed\",\n                details: upsertVisitorErr.message\n            }, {\n                status: 500\n            });\n        }\n        // [TRIAL ABUSE BLOCK LOGIC] Count unique emails for this fingerprint/site BEFORE event insert\n        if (email && fingerprint_hash) {\n            // Insert new email into visitor_emails if not already present\n            const { data: existingEmail, error: emailLookupErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitor_emails\").select(\"id\").eq(\"site_id\", siteRow.id).eq(\"fingerprint\", fingerprint_hash).eq(\"email\", email.toLowerCase()).maybeSingle();\n            if (!emailLookupErr && !existingEmail) {\n                await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitor_emails\").insert({\n                    site_id: siteRow.id,\n                    fingerprint: fingerprint_hash,\n                    email: email.toLowerCase(),\n                    created_at: new Date().toISOString()\n                });\n            }\n            // Count unique emails from visitor_emails\n            const { data: emailRows, error: emailErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitor_emails\").select(\"email\").eq(\"site_id\", siteRow.id).eq(\"fingerprint\", fingerprint_hash);\n            console.log(\"[DEBUG trial abuse visitor_emails] emailRows:\", emailRows);\n            if (!emailErr && emailRows) {\n                const uniqueEmails = Array.from(new Set(emailRows.map((r)=>(r.email || \"\").toLowerCase()).filter(Boolean)));\n                console.log(\"[DEBUG trial abuse visitor_emails] uniqueEmails:\", uniqueEmails, \"length:\", uniqueEmails.length, \"threshold:\", trialAbuseThreshold, \"autoBlockTrialAbuse:\", autoBlockTrialAbuse);\n                // If threshold reached or exceeded\n                if (uniqueEmails.length >= trialAbuseThreshold) {\n                    if (autoBlockTrialAbuse) {\n                        // Check if already blocked for trial abuse\n                        const { data: existingBlock, error: blockErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"manual_blocks\").select(\"id\").eq(\"site_key\", siteKey).eq(\"fingerprint_hash\", fingerprint_hash).eq(\"reason\", \"trial abuse: multiple emails\").maybeSingle();\n                        console.log(\"[DEBUG trial abuse visitor_emails] blockErr:\", blockErr, \"existingBlock:\", existingBlock);\n                        if (!blockErr && !existingBlock) {\n                            const { error: insertBlockErr, data: insertBlockData } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"manual_blocks\").insert({\n                                fingerprint_hash,\n                                reason: \"trial abuse: multiple emails\",\n                                site_key: siteKey\n                            });\n                            console.log(\"[DEBUG trial abuse visitor_emails] block insert error:\", insertBlockErr, \"block insert data:\", insertBlockData);\n                            manualBlock = true;\n                            blockReason = \"trial abuse: multiple emails\";\n                            action = \"auto_block\";\n                            finalScore = 100;\n                            finalVerdict = \"high\";\n                        }\n                    } else if (!manualBlock) {\n                        suspicious = true;\n                        suspiciousReason = `Multiple emails (${uniqueEmails.length}) for same fingerprint`;\n                    }\n                }\n            } else {\n                console.log(\"[DEBUG trial abuse visitor_emails] emailErr:\", emailErr);\n            }\n        }\n        // --- Event insert logic START ---\n        // Fetch and increment visit_count\n        let newVisitCount = 1;\n        const { data: visitorRow, error: visitorFetchErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitors\").select(\"visit_count\").eq(\"id\", visitor_id).maybeSingle();\n        if (!visitorFetchErr && visitorRow && typeof visitorRow.visit_count === \"number\") {\n            newVisitCount = visitorRow.visit_count + 1;\n            await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitors\").update({\n                visit_count: newVisitCount,\n                last_seen: new Date().toISOString()\n            }).eq(\"id\", visitor_id);\n        } else {\n            // fallback: set to 1 if not found or error\n            await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitors\").update({\n                visit_count: 1,\n                last_seen: new Date().toISOString()\n            }).eq(\"id\", visitor_id);\n        }\n        // Insert event and get ID\n        const { data: insertedEvent, error: insertErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"events\").insert({\n            site_id: siteRow.id,\n            visitor_id,\n            event_type: \"page_view\",\n            event_name: \"page_view\",\n            url: \"\",\n            referrer,\n            properties: {\n                fingerprint_hash,\n                thumbmark_signals,\n                thumbmark_details: body.thumbmark_details || {},\n                risk_score: finalScore,\n                verdict: finalVerdict,\n                ip,\n                ip_city: info?.city ?? \"\",\n                ip_country: info?.country ?? \"\",\n                ip_org: info?.org ?? \"\",\n                email: body.email || undefined,\n                botd_result: normalizeBotdResult(body.botd_result),\n                is_tor: isTor,\n                is_proxy: isProxy,\n                is_temp_email: !!isTempEmail,\n                vpnDetected,\n                is_bot: false,\n                browser: body.browser || \"\",\n                os: body.os || \"\",\n                resolution: body.resolution || \"\",\n                timezone: body.timezone || \"\",\n                userAgent: body.userAgent || \"\",\n                signals: Array.isArray(body.signals) ? body.signals : body.thumbmark_signals?.signals || [],\n                gps_location: body.geo && body.geo.lat && body.geo.lon ? {\n                    lat: body.geo.lat,\n                    lon: body.geo.lon,\n                    accuracy: body.geo.accuracy\n                } : undefined,\n                gps_permission: body.geo?.permission,\n                emulator_detected: !!body.emulator?.isEmulator,\n                emulator_reasons: body.emulator?.reasons || [],\n                geo_mismatch: body.geo && body.geo.lat && body.geo.lon && info && info.loc ? Math.abs(body.geo.lat - info.loc[0]) > 0.5 || Math.abs(body.geo.lon - info.loc[1]) > 0.5 : false,\n                location_spoofed: body.geo && body.geo.lat && body.geo.lon && info && info.loc ? Math.abs(body.geo.lat - info.loc[0]) > 1.5 || Math.abs(body.geo.lon - info.loc[1]) > 1.5 : false,\n                suspicious,\n                suspiciousReason,\n                visit_count: newVisitCount\n            },\n            timestamp: new Date().toISOString()\n        }).select(\"id\").single();\n        if (insertErr) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"db_insert_failed\",\n                details: insertErr.message\n            }, {\n                status: 500\n            });\n        }\n        // --- Event insert logic END ---\n        const { data: usageRows, error: usageFetchErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"user_api_usage\").select(\"used, quota, cycle_end\").eq(\"user_id\", siteRow.user_id).limit(1);\n        if (usageFetchErr) {\n            console.error(\"[COLLECT-VISITOR][USAGE] Failed to fetch usage row:\", usageFetchErr, {\n                user_id: siteRow.user_id\n            });\n        }\n        if (usageRows && usageRows.length > 0) {\n            const { used, quota, cycle_end } = usageRows[0];\n            const now = new Date();\n            if (!cycle_end || new Date(cycle_end) < now) {\n                quotaExceeded = true;\n            } else if (quota > 0 && used >= quota) {\n                quotaExceeded = true;\n            }\n        }\n        // Count unique emails for this fingerprint/site\n        if (email && fingerprint_hash) {\n            const { data: emailRows, error: emailErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"visitors\").select(\"email\").eq(\"site_id\", siteRow.id).eq(\"fingerprint\", fingerprint_hash).neq(\"email\", null);\n            if (!emailErr && emailRows) {\n                const uniqueEmails = Array.from(new Set(emailRows.map((r)=>(r.email || \"\").toLowerCase()).filter(Boolean)));\n                // If threshold reached or exceeded\n                if (uniqueEmails.length >= trialAbuseThreshold) {\n                    if (autoBlockTrialAbuse) {\n                        // Check if already blocked for trial abuse\n                        const { data: existingBlock, error: blockErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"manual_blocks\").select(\"id\").eq(\"site_key\", siteKey).eq(\"fingerprint_hash\", fingerprint_hash).eq(\"reason\", \"trial abuse: multiple emails\").maybeSingle();\n                        if (!blockErr && !existingBlock) {\n                            await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"manual_blocks\").insert({\n                                fingerprint_hash,\n                                reason: \"trial abuse: multiple emails\",\n                                site_key: siteKey\n                            });\n                            manualBlock = true;\n                            blockReason = \"trial abuse: multiple emails\";\n                            action = \"auto_block\";\n                            finalScore = 100;\n                            finalVerdict = \"high\";\n                        }\n                    } else if (!manualBlock) {\n                        suspicious = true;\n                        suspiciousReason = `Multiple emails (${uniqueEmails.length}) for same fingerprint`;\n                    }\n                }\n            }\n        }\n        // Increment API usage for this user\n        try {\n            if (siteRow.user_id) {\n                // Try to increment used\n                const { data: usageRows, error: usageFetchErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"user_api_usage\").select(\"used, quota\").eq(\"user_id\", siteRow.user_id).limit(1);\n                if (usageFetchErr) {\n                    console.error(\"[COLLECT-VISITOR][USAGE] Failed to fetch usage row:\", usageFetchErr, {\n                        user_id: siteRow.user_id\n                    });\n                }\n                if (usageRows && usageRows.length > 0) {\n                    const currentUsed = usageRows[0].used || 0;\n                    const quota = usageRows[0].quota || 0;\n                    const { error: usageUpdateErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"user_api_usage\").update({\n                        used: currentUsed + 1,\n                        updated_at: new Date().toISOString()\n                    }).eq(\"user_id\", siteRow.user_id);\n                    if (usageUpdateErr) {\n                        console.error(\"[COLLECT-VISITOR][USAGE] Failed to increment usage:\", usageUpdateErr, {\n                            user_id: siteRow.user_id\n                        });\n                    }\n                } else {\n                    // Insert new usage row if not present\n                    const { error: usageInsertErr } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"user_api_usage\").insert({\n                        user_id: siteRow.user_id,\n                        used: 1,\n                        quota: 0,\n                        updated_at: new Date().toISOString()\n                    });\n                    if (usageInsertErr) {\n                        console.error(\"[COLLECT-VISITOR][USAGE] Failed to insert usage row:\", usageInsertErr, {\n                            user_id: siteRow.user_id\n                        });\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(\"[COLLECT-VISITOR][USAGE] Unexpected error incrementing API usage:\", err, {\n                user_id: siteRow.user_id\n            });\n        }\n        // Get client settings\n        const { data: clientApp } = await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"client_apps\").select(\"auto_block, risk_threshold, share_reputation\").eq(\"site_key\", siteKey).maybeSingle();\n        const risk_threshold = clientApp?.risk_threshold ?? 80;\n        const auto_block = clientApp?.auto_block ?? false;\n        const share_reputation = clientApp?.share_reputation ?? false;\n        // Decide action\n        if (auto_block && finalScore >= risk_threshold) {\n            action = \"auto_block\";\n        }\n        // Share reputation\n        if (share_reputation && finalVerdict === \"high\") {\n            await _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_8__.supabaseServer.from(\"global_reputation\").upsert({\n                fingerprint_hash,\n                ip,\n                abuse_count: 1,\n                last_seen: new Date().toISOString()\n            }, {\n                onConflict: \"fingerprint_hash,ip\"\n            });\n        }\n        return (0,_withCORS__WEBPACK_IMPORTED_MODULE_10__.withCORS)(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            risk_score: finalScore,\n            verdict: finalVerdict,\n            action,\n            visitor_event_id: insertedEvent.id,\n            signals: {\n                vpnDetected,\n                timezoneMismatch,\n                velocityCount: v\n            }\n        }));\n    } catch (err) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"server_error\",\n            details: err.message\n        }, {\n            status: 500\n        });\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/collect-visitor/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/api/withCORS.ts":
/*!*****************************!*\
  !*** ./app/api/withCORS.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withCORS: () => (/* binding */ withCORS)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/../../node_modules/next/dist/server/web/exports/next-response.js\");\n// Reusable CORS middleware for Next.js API routes\n\nfunction withCORS(handler) {\n    return async (req, ...args)=>{\n        if (req.method === \"OPTIONS\") {\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n                status: 204,\n                headers: {\n                    \"Access-Control-Allow-Origin\": req.headers.get(\"origin\") || \"*\",\n                    \"Access-Control-Allow-Credentials\": \"true\",\n                    \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, x-usage-track\"\n                }\n            });\n        }\n        try {\n            const response = await handler(req, ...args);\n            if (response instanceof Response) {\n                // Dynamically set CORS origin\n                const origin = req.headers.get(\"origin\") || \"*\";\n                response.headers.set(\"Access-Control-Allow-Origin\", origin);\n                response.headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n                response.headers.set(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS\");\n                response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization, x-usage-track\");\n                return response;\n            }\n            // If handler returned non-Response, wrap it\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify(response), {\n                headers: {\n                    \"Access-Control-Allow-Origin\": req.headers.get(\"origin\") || \"*\",\n                    \"Access-Control-Allow-Credentials\": \"true\",\n                    \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, x-usage-track\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        } catch (err) {\n            // Always return CORS headers even on error\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                error: err?.message || \"Internal Server Error\"\n            }), {\n                status: 500,\n                headers: {\n                    \"Access-Control-Allow-Origin\": req.headers.get(\"origin\") || \"*\",\n                    \"Access-Control-Allow-Credentials\": \"true\",\n                    \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, x-usage-track\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3dpdGhDT1JTLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQWtEO0FBQ1A7QUFFcEMsU0FBU0MsU0FBU0MsT0FBWTtJQUNuQyxPQUFPLE9BQU9DLEtBQWMsR0FBR0M7UUFDN0IsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFdBQVc7WUFDNUIsT0FBTyxJQUFJTCxrRkFBWUEsQ0FBQyxNQUFNO2dCQUM1Qk0sUUFBUTtnQkFDUkMsU0FBUztvQkFDUCwrQkFBK0JKLElBQUlJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWE7b0JBQ3RFLG9DQUFvQztvQkFDMUIsZ0NBQWdDO29CQUNoQyxnQ0FBZ0M7Z0JBQ2xDO1lBQ0Y7UUFDRjtRQUNBLElBQUk7WUFDRixNQUFNQyxXQUFXLE1BQU1QLFFBQVFDLFFBQVFDO1lBQ3ZDLElBQUlLLG9CQUFvQkMsVUFBVTtnQkFDaEMsOEJBQThCO2dCQUM5QixNQUFNQyxTQUFTUixJQUFJSSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhO2dCQUM1Q0MsU0FBU0YsT0FBTyxDQUFDSyxHQUFHLENBQUMsK0JBQStCRDtnQkFDcERGLFNBQVNGLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLG9DQUFvQztnQkFDekRILFNBQVNGLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLGdDQUFnQztnQkFDckRILFNBQVNGLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLGdDQUFnQztnQkFDckQsT0FBT0g7WUFDVDtZQUNBLDRDQUE0QztZQUM1QyxPQUFPLElBQUlULGtGQUFZQSxDQUFDYSxLQUFLQyxTQUFTLENBQUNMLFdBQVc7Z0JBQ2hERixTQUFTO29CQUNQLCtCQUErQkosSUFBSUksT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYTtvQkFDdEUsb0NBQW9DO29CQUMxQixnQ0FBZ0M7b0JBQ2hDLGdDQUFnQztvQkFDaEMsZ0JBQWdCO2dCQUNsQjtZQUNGO1FBQ0YsRUFBRSxPQUFPTyxLQUFVO1lBQ2pCLDJDQUEyQztZQUMzQyxPQUFPLElBQUlmLGtGQUFZQSxDQUNyQmEsS0FBS0MsU0FBUyxDQUFDO2dCQUFFRSxPQUFPRCxLQUFLRSxXQUFXO1lBQXdCLElBQ2hFO2dCQUNFWCxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLCtCQUErQkosSUFBSUksT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYTtvQkFDeEUsb0NBQW9DO29CQUN4QixnQ0FBZ0M7b0JBQ2hDLGdDQUFnQztvQkFDaEMsZ0JBQWdCO2dCQUNsQjtZQUNGO1FBRUo7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi9hcHAvYXBpL3dpdGhDT1JTLnRzPzUzNzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUmV1c2FibGUgQ09SUyBtaWRkbGV3YXJlIGZvciBOZXh0LmpzIEFQSSByb3V0ZXNcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhDT1JTKGhhbmRsZXI6IGFueSkge1xuICByZXR1cm4gYXN5bmMgKHJlcTogUmVxdWVzdCwgLi4uYXJnczogYW55W10pID0+IHtcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7XG4gICAgICAgIHN0YXR1czogMjA0LFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonLFxuJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ0dFVCxQT1NULE9QVElPTlMnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgeC11c2FnZS10cmFjaycsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGFuZGxlcihyZXEsIC4uLmFyZ3MpO1xuICAgICAgaWYgKHJlc3BvbnNlIGluc3RhbmNlb2YgUmVzcG9uc2UpIHtcbiAgICAgICAgLy8gRHluYW1pY2FsbHkgc2V0IENPUlMgb3JpZ2luXG4gICAgICAgIGNvbnN0IG9yaWdpbiA9IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonO1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgb3JpZ2luKTtcbiAgICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJywgJ3RydWUnKTtcbiAgICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULFBPU1QsT1BUSU9OUycpO1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIHgtdXNhZ2UtdHJhY2snKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgfVxuICAgICAgLy8gSWYgaGFuZGxlciByZXR1cm5lZCBub24tUmVzcG9uc2UsIHdyYXAgaXRcbiAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSwge1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonLFxuJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ0dFVCxQT1NULE9QVElPTlMnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgeC11c2FnZS10cmFjaycsXG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAvLyBBbHdheXMgcmV0dXJuIENPUlMgaGVhZGVycyBldmVuIG9uIGVycm9yXG4gICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogZXJyPy5tZXNzYWdlIHx8ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InIH0pLFxuICAgICAgICB7XG4gICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonLFxuJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnR0VULFBPU1QsT1BUSU9OUycsXG4gICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyc6ICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIHgtdXNhZ2UtdHJhY2snLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJ3aXRoQ09SUyIsImhhbmRsZXIiLCJyZXEiLCJhcmdzIiwibWV0aG9kIiwic3RhdHVzIiwiaGVhZGVycyIsImdldCIsInJlc3BvbnNlIiwiUmVzcG9uc2UiLCJvcmlnaW4iLCJzZXQiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyIiwiZXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/withCORS.ts\n");

/***/ }),

/***/ "(rsc)/./lib/abuse.ts":
/*!**********************!*\
  !*** ./lib/abuse.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAbuseIP: () => (/* binding */ checkAbuseIP)\n/* harmony export */ });\n/* harmony import */ var _redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./redis */ \"(rsc)/./lib/redis.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(rsc)/../../node_modules/axios/lib/axios.js\");\n\n\nconst ABUSEIPDB_KEY = process.env.ABUSEIPDB_KEY;\nasync function checkAbuseIP(ip) {\n    if (!ABUSEIPDB_KEY) {\n        return {\n            blocklisted: false\n        };\n    }\n    const cacheKey = `abuse:${ip}`;\n    const cached = await (0,_redis__WEBPACK_IMPORTED_MODULE_0__.get)(cacheKey);\n    if (cached) return JSON.parse(cached);\n    const { data } = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`https://api.abuseipdb.com/api/v2/check`, {\n        params: {\n            ipAddress: ip,\n            maxAgeInDays: 30\n        },\n        headers: {\n            Key: ABUSEIPDB_KEY,\n            Accept: \"application/json\"\n        }\n    });\n    const blocklisted = data.data.abuseConfidenceScore >= 50;\n    const result = {\n        blocklisted\n    };\n    await (0,_redis__WEBPACK_IMPORTED_MODULE_0__.set)(cacheKey, JSON.stringify(result), 86400);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYWJ1c2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ1Q7QUFFekIsTUFBTUcsZ0JBQWdCQyxRQUFRQyxHQUFHLENBQUNGLGFBQWE7QUFFeEMsZUFBZUcsYUFBYUMsRUFBVTtJQUMzQyxJQUFJLENBQUNKLGVBQWU7UUFDbEIsT0FBTztZQUFFSyxhQUFhO1FBQU07SUFDOUI7SUFDQSxNQUFNQyxXQUFXLENBQUMsTUFBTSxFQUFFRixHQUFHLENBQUM7SUFDOUIsTUFBTUcsU0FBUyxNQUFNViwyQ0FBR0EsQ0FBQ1M7SUFDekIsSUFBSUMsUUFBUSxPQUFPQyxLQUFLQyxLQUFLLENBQUNGO0lBQzlCLE1BQU0sRUFBRUcsSUFBSSxFQUFFLEdBQUcsTUFBTVgsNkNBQUtBLENBQUNGLEdBQUcsQ0FBQyxDQUFDLHNDQUFzQyxDQUFDLEVBQUU7UUFDekVjLFFBQVE7WUFBRUMsV0FBV1I7WUFBSVMsY0FBYztRQUFHO1FBQzFDQyxTQUFTO1lBQUVDLEtBQUtmO1lBQWVnQixRQUFRO1FBQW1CO0lBQzVEO0lBQ0EsTUFBTVgsY0FBY0ssS0FBS0EsSUFBSSxDQUFDTyxvQkFBb0IsSUFBSTtJQUN0RCxNQUFNQyxTQUFTO1FBQUViO0lBQVk7SUFDN0IsTUFBTVAsMkNBQUdBLENBQUNRLFVBQVVFLEtBQUtXLFNBQVMsQ0FBQ0QsU0FBUztJQUM1QyxPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi9saWIvYWJ1c2UudHM/ZDg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXQsIHNldCB9IGZyb20gJy4vcmVkaXMnXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5cbmNvbnN0IEFCVVNFSVBEQl9LRVkgPSBwcm9jZXNzLmVudi5BQlVTRUlQREJfS0VZXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0FidXNlSVAoaXA6IHN0cmluZykge1xuICBpZiAoIUFCVVNFSVBEQl9LRVkpIHtcbiAgICByZXR1cm4geyBibG9ja2xpc3RlZDogZmFsc2UgfVxuICB9XG4gIGNvbnN0IGNhY2hlS2V5ID0gYGFidXNlOiR7aXB9YFxuICBjb25zdCBjYWNoZWQgPSBhd2FpdCBnZXQoY2FjaGVLZXkpXG4gIGlmIChjYWNoZWQpIHJldHVybiBKU09OLnBhcnNlKGNhY2hlZClcbiAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vYXBpLmFidXNlaXBkYi5jb20vYXBpL3YyL2NoZWNrYCwge1xuICAgIHBhcmFtczogeyBpcEFkZHJlc3M6IGlwLCBtYXhBZ2VJbkRheXM6IDMwIH0sXG4gICAgaGVhZGVyczogeyBLZXk6IEFCVVNFSVBEQl9LRVksIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gIH0pXG4gIGNvbnN0IGJsb2NrbGlzdGVkID0gZGF0YS5kYXRhLmFidXNlQ29uZmlkZW5jZVNjb3JlID49IDUwXG4gIGNvbnN0IHJlc3VsdCA9IHsgYmxvY2tsaXN0ZWQgfVxuICBhd2FpdCBzZXQoY2FjaGVLZXksIEpTT04uc3RyaW5naWZ5KHJlc3VsdCksIDg2NDAwKVxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOlsiZ2V0Iiwic2V0IiwiYXhpb3MiLCJBQlVTRUlQREJfS0VZIiwicHJvY2VzcyIsImVudiIsImNoZWNrQWJ1c2VJUCIsImlwIiwiYmxvY2tsaXN0ZWQiLCJjYWNoZUtleSIsImNhY2hlZCIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJwYXJhbXMiLCJpcEFkZHJlc3MiLCJtYXhBZ2VJbkRheXMiLCJoZWFkZXJzIiwiS2V5IiwiQWNjZXB0IiwiYWJ1c2VDb25maWRlbmNlU2NvcmUiLCJyZXN1bHQiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/abuse.ts\n");

/***/ }),

/***/ "(rsc)/./lib/ipinfo.ts":
/*!***********************!*\
  !*** ./lib/ipinfo.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getIPInfo: () => (/* binding */ getIPInfo)\n/* harmony export */ });\n/* harmony import */ var _redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./redis */ \"(rsc)/./lib/redis.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(rsc)/../../node_modules/axios/lib/axios.js\");\n\n\nconst IPINFO_TOKEN = process.env.IPINFO_TOKEN;\nif (!IPINFO_TOKEN) throw new Error(\"IPINFO_TOKEN env var not set\");\nasync function getIPInfo(ip) {\n    const cacheKey = `ipinfo:${ip}`;\n    const cached = await (0,_redis__WEBPACK_IMPORTED_MODULE_0__.get)(cacheKey);\n    if (cached) return JSON.parse(cached);\n    const url = `https://ipinfo.io/${ip}/json?token=${IPINFO_TOKEN}`;\n    const { data } = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(url);\n    const result = {\n        org: data.org,\n        city: data.city,\n        region: data.region,\n        country: data.country,\n        timezone: data.timezone,\n        privacy: data.privacy ?? {}\n    };\n    if (data.asn) result.asn = data.asn;\n    await (0,_redis__WEBPACK_IMPORTED_MODULE_0__.set)(cacheKey, JSON.stringify(result), 86400);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvaXBpbmZvLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUNUO0FBRXpCLE1BQU1HLGVBQWVDLFFBQVFDLEdBQUcsQ0FBQ0YsWUFBWTtBQUM3QyxJQUFJLENBQUNBLGNBQWMsTUFBTSxJQUFJRyxNQUFNO0FBRTVCLGVBQWVDLFVBQVVDLEVBQVU7SUFDeEMsTUFBTUMsV0FBVyxDQUFDLE9BQU8sRUFBRUQsR0FBRyxDQUFDO0lBQy9CLE1BQU1FLFNBQVMsTUFBTVYsMkNBQUdBLENBQUNTO0lBQ3pCLElBQUlDLFFBQVEsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRjtJQUU5QixNQUFNRyxNQUFNLENBQUMsa0JBQWtCLEVBQUVMLEdBQUcsWUFBWSxFQUFFTCxhQUFhLENBQUM7SUFDaEUsTUFBTSxFQUFFVyxJQUFJLEVBQUUsR0FBRyxNQUFNWiw2Q0FBS0EsQ0FBQ0YsR0FBRyxDQUFDYTtJQUNqQyxNQUFNRSxTQUFjO1FBQ2xCQyxLQUFLRixLQUFLRSxHQUFHO1FBQ2JDLE1BQU1ILEtBQUtHLElBQUk7UUFDZkMsUUFBUUosS0FBS0ksTUFBTTtRQUNuQkMsU0FBU0wsS0FBS0ssT0FBTztRQUNyQkMsVUFBVU4sS0FBS00sUUFBUTtRQUN2QkMsU0FBU1AsS0FBS08sT0FBTyxJQUFJLENBQUM7SUFDNUI7SUFDQSxJQUFJUCxLQUFLUSxHQUFHLEVBQUVQLE9BQU9PLEdBQUcsR0FBR1IsS0FBS1EsR0FBRztJQUNuQyxNQUFNckIsMkNBQUdBLENBQUNRLFVBQVVFLEtBQUtZLFNBQVMsQ0FBQ1IsU0FBUztJQUM1QyxPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi9saWIvaXBpbmZvLnRzP2FjZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0LCBzZXQgfSBmcm9tICcuL3JlZGlzJ1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuXG5jb25zdCBJUElORk9fVE9LRU4gPSBwcm9jZXNzLmVudi5JUElORk9fVE9LRU5cbmlmICghSVBJTkZPX1RPS0VOKSB0aHJvdyBuZXcgRXJyb3IoJ0lQSU5GT19UT0tFTiBlbnYgdmFyIG5vdCBzZXQnKVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SVBJbmZvKGlwOiBzdHJpbmcpIHtcbiAgY29uc3QgY2FjaGVLZXkgPSBgaXBpbmZvOiR7aXB9YFxuICBjb25zdCBjYWNoZWQgPSBhd2FpdCBnZXQoY2FjaGVLZXkpXG4gIGlmIChjYWNoZWQpIHJldHVybiBKU09OLnBhcnNlKGNhY2hlZClcblxuICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9pcGluZm8uaW8vJHtpcH0vanNvbj90b2tlbj0ke0lQSU5GT19UT0tFTn1gXG4gIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3MuZ2V0KHVybClcbiAgY29uc3QgcmVzdWx0OiBhbnkgPSB7XG4gICAgb3JnOiBkYXRhLm9yZyxcbiAgICBjaXR5OiBkYXRhLmNpdHksXG4gICAgcmVnaW9uOiBkYXRhLnJlZ2lvbixcbiAgICBjb3VudHJ5OiBkYXRhLmNvdW50cnksXG4gICAgdGltZXpvbmU6IGRhdGEudGltZXpvbmUsXG4gICAgcHJpdmFjeTogZGF0YS5wcml2YWN5ID8/IHt9LFxuICB9XG4gIGlmIChkYXRhLmFzbikgcmVzdWx0LmFzbiA9IGRhdGEuYXNuXG4gIGF3YWl0IHNldChjYWNoZUtleSwgSlNPTi5zdHJpbmdpZnkocmVzdWx0KSwgODY0MDApXG4gIHJldHVybiByZXN1bHRcbn1cbiJdLCJuYW1lcyI6WyJnZXQiLCJzZXQiLCJheGlvcyIsIklQSU5GT19UT0tFTiIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImdldElQSW5mbyIsImlwIiwiY2FjaGVLZXkiLCJjYWNoZWQiLCJKU09OIiwicGFyc2UiLCJ1cmwiLCJkYXRhIiwicmVzdWx0Iiwib3JnIiwiY2l0eSIsInJlZ2lvbiIsImNvdW50cnkiLCJ0aW1lem9uZSIsInByaXZhY3kiLCJhc24iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/ipinfo.ts\n");

/***/ }),

/***/ "(rsc)/./lib/redis.ts":
/*!**********************!*\
  !*** ./lib/redis.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   redis: () => (/* binding */ redis),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   tokenBucket: () => (/* binding */ tokenBucket)\n/* harmony export */ });\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ioredis */ \"(rsc)/../../node_modules/ioredis/built/index.js\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ioredis__WEBPACK_IMPORTED_MODULE_0__);\n\nconst redisUrl = process.env.REDIS_URL;\nif (!redisUrl) throw new Error(\"REDIS_URL env var not set\");\nconst redis = new (ioredis__WEBPACK_IMPORTED_MODULE_0___default())(redisUrl);\nasync function get(key) {\n    return redis.get(key);\n}\nasync function set(key, value, ttlSeconds) {\n    if (ttlSeconds) {\n        await redis.set(key, value, \"EX\", ttlSeconds);\n    } else {\n        await redis.set(key, value);\n    }\n}\n/**\n * Token bucket rate limiting using Redis.\n * @param key Redis key\n * @param capacity Max tokens in bucket (default 60)\n * @param refillPerSec Tokens added per second (default 1)\n * @returns { allowed: boolean, remaining: number }\n */ async function tokenBucket(key, capacity = 60, refillPerSec = 1) {\n    const now = Math.floor(Date.now() / 1000);\n    const bucketKey = `tb:${key}`;\n    const lua = `\n    local bucket = redis.call('HMGET', KEYS[1], 'tokens', 'last')\n    local tokens = tonumber(bucket[1]) or ARGV[2]\n    local last = tonumber(bucket[2]) or ARGV[3]\n    local now = tonumber(ARGV[1])\n    local refill = (now - last) * ARGV[4]\n    tokens = math.min(tokens + refill, ARGV[2])\n    local allowed = 0\n    if tokens >= 1 then\n      tokens = tokens - 1\n      allowed = 1\n    end\n    redis.call('HMSET', KEYS[1], 'tokens', tokens, 'last', now)\n    redis.call('EXPIRE', KEYS[1], 3600)\n    return {allowed, tokens}\n  `;\n    const [allowed, remaining] = await redis.eval(lua, 1, bucketKey, now, capacity, now, refillPerSec);\n    return {\n        allowed: !!allowed,\n        remaining: Number(remaining)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcmVkaXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJCO0FBRTNCLE1BQU1DLFdBQVdDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztBQUN0QyxJQUFJLENBQUNILFVBQVUsTUFBTSxJQUFJSSxNQUFNO0FBQ3hCLE1BQU1DLFFBQVEsSUFBSU4sZ0RBQUtBLENBQUNDLFVBQVM7QUFFakMsZUFBZU0sSUFBSUMsR0FBVztJQUNuQyxPQUFPRixNQUFNQyxHQUFHLENBQUNDO0FBQ25CO0FBRU8sZUFBZUMsSUFBSUQsR0FBVyxFQUFFRSxLQUFhLEVBQUVDLFVBQW1CO0lBQ3ZFLElBQUlBLFlBQVk7UUFDZCxNQUFNTCxNQUFNRyxHQUFHLENBQUNELEtBQUtFLE9BQU8sTUFBTUM7SUFDcEMsT0FBTztRQUNMLE1BQU1MLE1BQU1HLEdBQUcsQ0FBQ0QsS0FBS0U7SUFDdkI7QUFDRjtBQUVBOzs7Ozs7Q0FNQyxHQUNNLGVBQWVFLFlBQVlKLEdBQVcsRUFBRUssV0FBVyxFQUFFLEVBQUVDLGVBQWUsQ0FBQztJQUM1RSxNQUFNQyxNQUFNQyxLQUFLQyxLQUFLLENBQUNDLEtBQUtILEdBQUcsS0FBSztJQUNwQyxNQUFNSSxZQUFZLENBQUMsR0FBRyxFQUFFWCxJQUFJLENBQUM7SUFDN0IsTUFBTVksTUFBTSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7RUFlYixDQUFDO0lBQ0QsTUFBTSxDQUFDQyxTQUFTQyxVQUFVLEdBQUcsTUFBTWhCLE1BQU1pQixJQUFJLENBQUNILEtBQUssR0FBR0QsV0FBV0osS0FBS0YsVUFBVUUsS0FBS0Q7SUFDckYsT0FBTztRQUFFTyxTQUFTLENBQUMsQ0FBQ0E7UUFBU0MsV0FBV0UsT0FBT0Y7SUFBVztBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aXNpdG9yaXEvd2ViLy4vbGliL3JlZGlzLnRzPzUxZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlZGlzIGZyb20gJ2lvcmVkaXMnXG5cbmNvbnN0IHJlZGlzVXJsID0gcHJvY2Vzcy5lbnYuUkVESVNfVVJMXG5pZiAoIXJlZGlzVXJsKSB0aHJvdyBuZXcgRXJyb3IoJ1JFRElTX1VSTCBlbnYgdmFyIG5vdCBzZXQnKVxuZXhwb3J0IGNvbnN0IHJlZGlzID0gbmV3IFJlZGlzKHJlZGlzVXJsKVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0KGtleTogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPiB7XG4gIHJldHVybiByZWRpcy5nZXQoa2V5KVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCB0dGxTZWNvbmRzPzogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmICh0dGxTZWNvbmRzKSB7XG4gICAgYXdhaXQgcmVkaXMuc2V0KGtleSwgdmFsdWUsICdFWCcsIHR0bFNlY29uZHMpXG4gIH0gZWxzZSB7XG4gICAgYXdhaXQgcmVkaXMuc2V0KGtleSwgdmFsdWUpXG4gIH1cbn1cblxuLyoqXG4gKiBUb2tlbiBidWNrZXQgcmF0ZSBsaW1pdGluZyB1c2luZyBSZWRpcy5cbiAqIEBwYXJhbSBrZXkgUmVkaXMga2V5XG4gKiBAcGFyYW0gY2FwYWNpdHkgTWF4IHRva2VucyBpbiBidWNrZXQgKGRlZmF1bHQgNjApXG4gKiBAcGFyYW0gcmVmaWxsUGVyU2VjIFRva2VucyBhZGRlZCBwZXIgc2Vjb25kIChkZWZhdWx0IDEpXG4gKiBAcmV0dXJucyB7IGFsbG93ZWQ6IGJvb2xlYW4sIHJlbWFpbmluZzogbnVtYmVyIH1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRva2VuQnVja2V0KGtleTogc3RyaW5nLCBjYXBhY2l0eSA9IDYwLCByZWZpbGxQZXJTZWMgPSAxKTogUHJvbWlzZTx7IGFsbG93ZWQ6IGJvb2xlYW4sIHJlbWFpbmluZzogbnVtYmVyIH0+IHtcbiAgY29uc3Qgbm93ID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMClcbiAgY29uc3QgYnVja2V0S2V5ID0gYHRiOiR7a2V5fWBcbiAgY29uc3QgbHVhID0gYFxuICAgIGxvY2FsIGJ1Y2tldCA9IHJlZGlzLmNhbGwoJ0hNR0VUJywgS0VZU1sxXSwgJ3Rva2VucycsICdsYXN0JylcbiAgICBsb2NhbCB0b2tlbnMgPSB0b251bWJlcihidWNrZXRbMV0pIG9yIEFSR1ZbMl1cbiAgICBsb2NhbCBsYXN0ID0gdG9udW1iZXIoYnVja2V0WzJdKSBvciBBUkdWWzNdXG4gICAgbG9jYWwgbm93ID0gdG9udW1iZXIoQVJHVlsxXSlcbiAgICBsb2NhbCByZWZpbGwgPSAobm93IC0gbGFzdCkgKiBBUkdWWzRdXG4gICAgdG9rZW5zID0gbWF0aC5taW4odG9rZW5zICsgcmVmaWxsLCBBUkdWWzJdKVxuICAgIGxvY2FsIGFsbG93ZWQgPSAwXG4gICAgaWYgdG9rZW5zID49IDEgdGhlblxuICAgICAgdG9rZW5zID0gdG9rZW5zIC0gMVxuICAgICAgYWxsb3dlZCA9IDFcbiAgICBlbmRcbiAgICByZWRpcy5jYWxsKCdITVNFVCcsIEtFWVNbMV0sICd0b2tlbnMnLCB0b2tlbnMsICdsYXN0Jywgbm93KVxuICAgIHJlZGlzLmNhbGwoJ0VYUElSRScsIEtFWVNbMV0sIDM2MDApXG4gICAgcmV0dXJuIHthbGxvd2VkLCB0b2tlbnN9XG4gIGBcbiAgY29uc3QgW2FsbG93ZWQsIHJlbWFpbmluZ10gPSBhd2FpdCByZWRpcy5ldmFsKGx1YSwgMSwgYnVja2V0S2V5LCBub3csIGNhcGFjaXR5LCBub3csIHJlZmlsbFBlclNlYylcbiAgcmV0dXJuIHsgYWxsb3dlZDogISFhbGxvd2VkLCByZW1haW5pbmc6IE51bWJlcihyZW1haW5pbmcpIH1cbn1cbiJdLCJuYW1lcyI6WyJSZWRpcyIsInJlZGlzVXJsIiwicHJvY2VzcyIsImVudiIsIlJFRElTX1VSTCIsIkVycm9yIiwicmVkaXMiLCJnZXQiLCJrZXkiLCJzZXQiLCJ2YWx1ZSIsInR0bFNlY29uZHMiLCJ0b2tlbkJ1Y2tldCIsImNhcGFjaXR5IiwicmVmaWxsUGVyU2VjIiwibm93IiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsImJ1Y2tldEtleSIsImx1YSIsImFsbG93ZWQiLCJyZW1haW5pbmciLCJldmFsIiwiTnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/redis.ts\n");

/***/ }),

/***/ "(rsc)/./lib/risk.ts":
/*!*********************!*\
  !*** ./lib/risk.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeRisk: () => (/* binding */ computeRisk)\n/* harmony export */ });\nfunction computeRisk({ incognito, vpn, timezoneMismatch, webdriver, abuseListed, velocityCount }) {\n    let score = 0;\n    if (incognito) score += 20;\n    if (vpn) score += 20;\n    if (timezoneMismatch) score += 15;\n    if (webdriver) score += 10;\n    if (abuseListed) score += 10;\n    if ((velocityCount ?? 0) > 3) score += 5;\n    score = Math.max(0, Math.min(100, score));\n    const verdict = score <= 30 ? \"low\" : score <= 70 ? \"medium\" : \"high\";\n    return {\n        score,\n        verdict\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcmlzay50cyIsIm1hcHBpbmdzIjoiOzs7O0FBU08sU0FBU0EsWUFBWSxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsZ0JBQWdCLEVBQUVDLFNBQVMsRUFBRUMsV0FBVyxFQUFFQyxhQUFhLEVBQWE7SUFDaEgsSUFBSUMsUUFBUTtJQUNaLElBQUlOLFdBQVdNLFNBQVM7SUFDeEIsSUFBSUwsS0FBS0ssU0FBUztJQUNsQixJQUFJSixrQkFBa0JJLFNBQVM7SUFDL0IsSUFBSUgsV0FBV0csU0FBUztJQUN4QixJQUFJRixhQUFhRSxTQUFTO0lBQzFCLElBQUksQ0FBQ0QsaUJBQWlCLEtBQUssR0FBR0MsU0FBUztJQUN2Q0EsUUFBUUMsS0FBS0MsR0FBRyxDQUFDLEdBQUdELEtBQUtFLEdBQUcsQ0FBQyxLQUFLSDtJQUNsQyxNQUFNSSxVQUFVSixTQUFTLEtBQUssUUFBUUEsU0FBUyxLQUFLLFdBQVc7SUFDL0QsT0FBTztRQUFFQTtRQUFPSTtJQUFRO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi9saWIvcmlzay50cz82ZDNlIl0sInNvdXJjZXNDb250ZW50IjpbInR5cGUgUmlza0lucHV0ID0ge1xuICBpbmNvZ25pdG8/OiBib29sZWFuXG4gIHZwbj86IGJvb2xlYW5cbiAgdGltZXpvbmVNaXNtYXRjaD86IGJvb2xlYW5cbiAgd2ViZHJpdmVyPzogYm9vbGVhblxuICBhYnVzZUxpc3RlZD86IGJvb2xlYW5cbiAgdmVsb2NpdHlDb3VudD86IG51bWJlclxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29tcHV0ZVJpc2soeyBpbmNvZ25pdG8sIHZwbiwgdGltZXpvbmVNaXNtYXRjaCwgd2ViZHJpdmVyLCBhYnVzZUxpc3RlZCwgdmVsb2NpdHlDb3VudCB9OiBSaXNrSW5wdXQpIHtcbiAgbGV0IHNjb3JlID0gMFxuICBpZiAoaW5jb2duaXRvKSBzY29yZSArPSAyMFxuICBpZiAodnBuKSBzY29yZSArPSAyMFxuICBpZiAodGltZXpvbmVNaXNtYXRjaCkgc2NvcmUgKz0gMTVcbiAgaWYgKHdlYmRyaXZlcikgc2NvcmUgKz0gMTBcbiAgaWYgKGFidXNlTGlzdGVkKSBzY29yZSArPSAxMFxuICBpZiAoKHZlbG9jaXR5Q291bnQgPz8gMCkgPiAzKSBzY29yZSArPSA1XG4gIHNjb3JlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMTAwLCBzY29yZSkpXG4gIGNvbnN0IHZlcmRpY3QgPSBzY29yZSA8PSAzMCA/ICdsb3cnIDogc2NvcmUgPD0gNzAgPyAnbWVkaXVtJyA6ICdoaWdoJ1xuICByZXR1cm4geyBzY29yZSwgdmVyZGljdCB9XG59XG4iXSwibmFtZXMiOlsiY29tcHV0ZVJpc2siLCJpbmNvZ25pdG8iLCJ2cG4iLCJ0aW1lem9uZU1pc21hdGNoIiwid2ViZHJpdmVyIiwiYWJ1c2VMaXN0ZWQiLCJ2ZWxvY2l0eUNvdW50Iiwic2NvcmUiLCJNYXRoIiwibWF4IiwibWluIiwidmVyZGljdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/risk.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabaseServer.ts":
/*!*******************************!*\
  !*** ./lib/supabaseServer.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabaseServer: () => (/* binding */ supabaseServer)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/../../node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst SUPABASE_URL = process.env.SUPABASE_URL;\nconst SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY;\nif (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {\n    throw new Error(\"SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY not set\");\n}\nconst supabaseServer = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2VTZXJ2ZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7QUFFcEQsTUFBTUMsZUFBZUMsUUFBUUMsR0FBRyxDQUFDRixZQUFZO0FBQzdDLE1BQU1HLDRCQUE0QkYsUUFBUUMsR0FBRyxDQUFDQyx5QkFBeUI7QUFFdkUsSUFBSSxDQUFDSCxnQkFBZ0IsQ0FBQ0csMkJBQTJCO0lBQy9DLE1BQU0sSUFBSUMsTUFBTTtBQUNsQjtBQUVPLE1BQU1DLGlCQUFpQk4sbUVBQVlBLENBQ3hDQyxjQUNBRywyQkFDQTtJQUFFRyxNQUFNO1FBQUVDLGtCQUFrQjtRQUFPQyxnQkFBZ0I7SUFBTTtBQUFFLEdBQzVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi9saWIvc3VwYWJhc2VTZXJ2ZXIudHM/Yzc4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmNvbnN0IFNVUEFCQVNFX1VSTCA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1VSTFxuY29uc3QgU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVlcblxuaWYgKCFTVVBBQkFTRV9VUkwgfHwgIVNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTVVBBQkFTRV9VUkwgb3IgU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSBub3Qgc2V0Jylcbn1cblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlU2VydmVyID0gY3JlYXRlQ2xpZW50KFxuICBTVVBBQkFTRV9VUkwsXG4gIFNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVksXG4gIHsgYXV0aDogeyBhdXRvUmVmcmVzaFRva2VuOiBmYWxzZSwgcGVyc2lzdFNlc3Npb246IGZhbHNlIH0gfVxuKVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsIlNVUEFCQVNFX1VSTCIsInByb2Nlc3MiLCJlbnYiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiRXJyb3IiLCJzdXBhYmFzZVNlcnZlciIsImF1dGgiLCJhdXRvUmVmcmVzaFRva2VuIiwicGVyc2lzdFNlc3Npb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabaseServer.ts\n");

/***/ }),

/***/ "(rsc)/./lib/velocity.ts":
/*!*************************!*\
  !*** ./lib/velocity.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   velocityCount: () => (/* binding */ velocityCount)\n/* harmony export */ });\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"(rsc)/../../node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function velocityCount(supabase, siteKey, visitorId, windowMinutes = 60) {\n    const since = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().subtract(windowMinutes, \"minute\").toISOString();\n    // Lookup site_id from sites table using api_key\n    const { data: siteRow, error: siteError } = await supabase.from(\"sites\").select(\"id\").eq(\"api_key\", siteKey).maybeSingle();\n    if (!siteRow || siteError) return 0;\n    const { count } = await supabase.from(\"events\").select(\"*\", {\n        count: \"exact\",\n        head: true\n    }).eq(\"site_id\", siteRow.id).eq(\"visitor_id\", visitorId).gt(\"timestamp\", since);\n    return count || 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdmVsb2NpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ3lCO0FBRWxCLGVBQWVDLGNBQ3BCQyxRQUF3QixFQUN4QkMsT0FBZSxFQUNmQyxTQUFpQixFQUNqQkMsZ0JBQWdCLEVBQUU7SUFFbEIsTUFBTUMsUUFBUU4sNENBQUtBLEdBQUdPLFFBQVEsQ0FBQ0YsZUFBZSxVQUFVRyxXQUFXO0lBQ25FLGdEQUFnRDtJQUNoRCxNQUFNLEVBQUVDLE1BQU1DLE9BQU8sRUFBRUMsT0FBT0MsU0FBUyxFQUFFLEdBQUcsTUFBTVYsU0FDL0NXLElBQUksQ0FBQyxTQUNMQyxNQUFNLENBQUMsTUFDUEMsRUFBRSxDQUFDLFdBQVdaLFNBQ2RhLFdBQVc7SUFDZCxJQUFJLENBQUNOLFdBQVdFLFdBQVcsT0FBTztJQUNsQyxNQUFNLEVBQUVLLEtBQUssRUFBRSxHQUFHLE1BQU1mLFNBQ3JCVyxJQUFJLENBQUMsVUFDTEMsTUFBTSxDQUFDLEtBQUs7UUFBRUcsT0FBTztRQUFTQyxNQUFNO0lBQUssR0FDekNILEVBQUUsQ0FBQyxXQUFXTCxRQUFRUyxFQUFFLEVBQ3hCSixFQUFFLENBQUMsY0FBY1gsV0FDakJnQixFQUFFLENBQUMsYUFBYWQ7SUFDbkIsT0FBT1csU0FBUztBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aXNpdG9yaXEvd2ViLy4vbGliL3ZlbG9jaXR5LnRzP2ZiMDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3VwYWJhc2VDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZWxvY2l0eUNvdW50KFxuICBzdXBhYmFzZTogU3VwYWJhc2VDbGllbnQsXG4gIHNpdGVLZXk6IHN0cmluZyxcbiAgdmlzaXRvcklkOiBzdHJpbmcsXG4gIHdpbmRvd01pbnV0ZXMgPSA2MFxuKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgY29uc3Qgc2luY2UgPSBkYXlqcygpLnN1YnRyYWN0KHdpbmRvd01pbnV0ZXMsICdtaW51dGUnKS50b0lTT1N0cmluZygpXG4gIC8vIExvb2t1cCBzaXRlX2lkIGZyb20gc2l0ZXMgdGFibGUgdXNpbmcgYXBpX2tleVxuICBjb25zdCB7IGRhdGE6IHNpdGVSb3csIGVycm9yOiBzaXRlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3NpdGVzJylcbiAgICAuc2VsZWN0KCdpZCcpXG4gICAgLmVxKCdhcGlfa2V5Jywgc2l0ZUtleSlcbiAgICAubWF5YmVTaW5nbGUoKTtcbiAgaWYgKCFzaXRlUm93IHx8IHNpdGVFcnJvcikgcmV0dXJuIDA7XG4gIGNvbnN0IHsgY291bnQgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ2V2ZW50cycpXG4gICAgLnNlbGVjdCgnKicsIHsgY291bnQ6ICdleGFjdCcsIGhlYWQ6IHRydWUgfSlcbiAgICAuZXEoJ3NpdGVfaWQnLCBzaXRlUm93LmlkKVxuICAgIC5lcSgndmlzaXRvcl9pZCcsIHZpc2l0b3JJZClcbiAgICAuZ3QoJ3RpbWVzdGFtcCcsIHNpbmNlKVxuICByZXR1cm4gY291bnQgfHwgMFxufVxuIl0sIm5hbWVzIjpbImRheWpzIiwidmVsb2NpdHlDb3VudCIsInN1cGFiYXNlIiwic2l0ZUtleSIsInZpc2l0b3JJZCIsIndpbmRvd01pbnV0ZXMiLCJzaW5jZSIsInN1YnRyYWN0IiwidG9JU09TdHJpbmciLCJkYXRhIiwic2l0ZVJvdyIsImVycm9yIiwic2l0ZUVycm9yIiwiZnJvbSIsInNlbGVjdCIsImVxIiwibWF5YmVTaW5nbGUiLCJjb3VudCIsImhlYWQiLCJpZCIsImd0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/velocity.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/axios","vendor-chunks/ioredis","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/zod","vendor-chunks/uuid","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/redis-errors","vendor-chunks/get-proto","vendor-chunks/standard-as-callback","vendor-chunks/redis-parser","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/@ioredis","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/lodash.isarguments","vendor-chunks/lodash.defaults","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/denque","vendor-chunks/delayed-stream","vendor-chunks/dayjs","vendor-chunks/combined-stream","vendor-chunks/cluster-key-slot"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcollect-visitor%2Froute&page=%2Fapi%2Fcollect-visitor%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcollect-visitor%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();