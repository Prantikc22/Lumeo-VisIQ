"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/blocks/route";
exports.ids = ["app/api/blocks/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fblocks%2Froute&page=%2Fapi%2Fblocks%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fblocks%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fblocks%2Froute&page=%2Fapi%2Fblocks%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fblocks%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_prantikchatterjee_Desktop_Apps_visitoriq_apps_web_app_api_blocks_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/blocks/route.ts */ \"(rsc)/./app/api/blocks/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/blocks/route\",\n        pathname: \"/api/blocks\",\n        filename: \"route\",\n        bundlePath: \"app/api/blocks/route\"\n    },\n    resolvedPagePath: \"/Users/prantikchatterjee/Desktop/Apps/visitoriq/apps/web/app/api/blocks/route.ts\",\n    nextConfigOutput,\n    userland: _Users_prantikchatterjee_Desktop_Apps_visitoriq_apps_web_app_api_blocks_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/blocks/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGYmxvY2tzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZibG9ja3MlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZibG9ja3MlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZwcmFudGlrY2hhdHRlcmplZSUyRkRlc2t0b3AlMkZBcHBzJTJGdmlzaXRvcmlxJTJGYXBwcyUyRndlYiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZwcmFudGlrY2hhdHRlcmplZSUyRkRlc2t0b3AlMkZBcHBzJTJGdmlzaXRvcmlxJTJGYXBwcyUyRndlYiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDOEM7QUFDN0c7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvP2Q1ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3ByYW50aWtjaGF0dGVyamVlL0Rlc2t0b3AvQXBwcy92aXNpdG9yaXEvYXBwcy93ZWIvYXBwL2FwaS9ibG9ja3Mvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2Jsb2Nrcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2Jsb2Nrc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYmxvY2tzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3ByYW50aWtjaGF0dGVyamVlL0Rlc2t0b3AvQXBwcy92aXNpdG9yaXEvYXBwcy93ZWIvYXBwL2FwaS9ibG9ja3Mvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYmxvY2tzL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fblocks%2Froute&page=%2Fapi%2Fblocks%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fblocks%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/blocks/route.ts":
/*!*********************************!*\
  !*** ./app/api/blocks/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/../../node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/next/headers.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_headers__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/../../node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var _withCORS__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../withCORS */ \"(rsc)/./app/api/withCORS.ts\");\n// TODO: Add auth check when ready\n\n\n\n\nconst OPTIONS = (0,_withCORS__WEBPACK_IMPORTED_MODULE_3__.withCORS)(async function OPTIONS() {\n    return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n        status: 204\n    });\n});\nconst GET = (0,_withCORS__WEBPACK_IMPORTED_MODULE_3__.withCORS)(async function GET(req) {\n    // Get siteKey from query param\n    const { searchParams } = new URL(req.url);\n    const siteKey = searchParams.get(\"siteKey\");\n    if (!siteKey) {\n        return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n            error: \"Missing siteKey param\"\n        }), {\n            status: 400\n        });\n    }\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_2__.createServerClient)(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {\n        cookies: {\n            get () {\n                return undefined;\n            },\n            set () {},\n            remove () {}\n        }\n    });\n    // Check quota/payment plan BEFORE returning blocks\n    const { data: site, error: siteError } = await supabase.from(\"sites\").select(\"user_id\").eq(\"api_key\", siteKey).maybeSingle();\n    if (!site || siteError) {\n        return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n            error: \"Invalid siteKey or site not found\"\n        }), {\n            status: 400\n        });\n    }\n    if (site.user_id) {\n        const { data: usageRows, error: usageFetchErr } = await supabase.from(\"user_api_usage\").select(\"used, quota, cycle_end\").eq(\"user_id\", site.user_id).limit(1);\n        if (usageFetchErr) {\n            console.error(\"[BLOCKS][USAGE][GET] Failed to fetch usage row:\", usageFetchErr, {\n                user_id: site.user_id\n            });\n        }\n        if (usageRows && usageRows.length > 0) {\n            const { used, quota, cycle_end } = usageRows[0];\n            const now = new Date();\n            if (!cycle_end || new Date(cycle_end) < now) {\n                return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                    error: \"quota_exceeded\",\n                    details: \"API quota reached or subscription expired.\"\n                }), {\n                    status: 429\n                });\n            } else if (quota > 0 && used >= quota) {\n                return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                    error: \"quota_exceeded\",\n                    details: \"API quota reached for this account.\"\n                }), {\n                    status: 429\n                });\n            }\n        }\n    }\n    // Only return blocks for the specified siteKey (tenant)\n    const { data, error } = await supabase.from(\"manual_blocks\").select(\"*\").eq(\"site_key\", siteKey).order(\"created_at\", {\n        ascending: false\n    });\n    if (error) {\n        console.error(\"[BLOCKS API] Supabase error:\", error);\n        return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n            error: error.message\n        }), {\n            status: 500\n        });\n    }\n    const blocks = (data || []).map((row)=>({\n            id: row.id,\n            type: row.fingerprint_hash ? \"fingerprint\" : \"ip\",\n            value: row.fingerprint_hash || row.ip,\n            reason: row.reason,\n            site_key: row.site_key,\n            created_at: row.created_at,\n            expires_at: row.expires_at\n        }));\n    // Only increment API usage for this user if blocks exist AND x-usage-track header is present\n    const usageTrack = req.headers.get(\"x-usage-track\");\n    if (blocks.length > 0 && usageTrack === \"true\") {\n        try {\n            const { data: site, error: siteError } = await supabase.from(\"sites\").select(\"user_id\").eq(\"api_key\", siteKey).maybeSingle();\n            if (site && site.user_id) {\n                const { data: usageRows, error: usageFetchErr } = await supabase.from(\"user_api_usage\").select(\"used, quota\").eq(\"user_id\", site.user_id).limit(1);\n                if (usageFetchErr) {\n                    console.error(\"[BLOCKS][USAGE][GET] Failed to fetch usage row:\", usageFetchErr, {\n                        user_id: site.user_id\n                    });\n                }\n                if (usageRows && usageRows.length > 0) {\n                    const currentUsed = usageRows[0].used || 0;\n                    const { error: usageUpdateErr } = await supabase.from(\"user_api_usage\").update({\n                        used: currentUsed + 1,\n                        updated_at: new Date().toISOString()\n                    }).eq(\"user_id\", site.user_id);\n                    if (usageUpdateErr) {\n                        console.error(\"[BLOCKS][USAGE][GET] Failed to increment usage:\", usageUpdateErr, {\n                            user_id: site.user_id\n                        });\n                    }\n                } else {\n                    // Insert new usage row if not present\n                    const { error: usageInsertErr } = await supabase.from(\"user_api_usage\").insert({\n                        user_id: site.user_id,\n                        used: 1,\n                        quota: 0,\n                        updated_at: new Date().toISOString()\n                    });\n                    if (usageInsertErr) {\n                        console.error(\"[BLOCKS][USAGE][GET] Failed to insert usage row:\", usageInsertErr, {\n                            user_id: site.user_id\n                        });\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(\"[BLOCKS][USAGE][GET] Unexpected error incrementing API usage:\", err);\n        }\n    }\n    return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n        blocks\n    }), {\n        status: 200\n    });\n});\nconst POST = (0,_withCORS__WEBPACK_IMPORTED_MODULE_3__.withCORS)(async function POST(req) {\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    let response = undefined;\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_2__.createServerClient)(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {\n        cookies: {\n            get (name) {\n                return cookieStore.get(name)?.value;\n            },\n            set (name, value, options) {\n                response ||= next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n                response.cookies.set({\n                    name,\n                    value,\n                    ...options\n                });\n            },\n            remove (name, options) {\n                response ||= next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].next();\n                response.cookies.set({\n                    name,\n                    value: \"\",\n                    ...options\n                });\n            }\n        },\n        global: {\n            fetch: (...args)=>fetch(...args)\n        }\n    });\n    const { data: { session }, error: sessionError } = await supabase.auth.getSession();\n    console.log(\"SSR DEBUG BLOCKS POST:\", {\n        cookies: (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)(),\n        session,\n        sessionError,\n        env_url: process.env.SUPABASE_URL,\n        env_key: process.env.SUPABASE_SERVICE_ROLE_KEY ? \"present\" : \"missing\"\n    });\n    if (!session || sessionError) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Not authenticated\",\n            debug: {\n                session,\n                sessionError,\n                cookies: (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)()\n            }\n        }, {\n            status: 401\n        });\n    }\n    const body = await req.json();\n    console.log(\"[BLOCKS API][POST] Incoming body:\", body);\n    const { type, value, reason, site_key, expires_at } = body;\n    if (!type || !value || !site_key) return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n        error: \"Missing required fields\"\n    }, {\n        status: 400\n    });\n    // Check site ownership\n    const { data: site, error: siteError } = await supabase.from(\"sites\").select(\"user_id\").eq(\"api_key\", site_key).maybeSingle();\n    if (!site || siteError || site.user_id !== session.user.id) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Forbidden\"\n        }, {\n            status: 403\n        });\n    }\n    // Quota/cycle check BEFORE inserting into manual_blocks\n    if (site.user_id) {\n        const { data: usageRows, error: usageFetchErr } = await supabase.from(\"user_api_usage\").select(\"used, quota, cycle_end\").eq(\"user_id\", site.user_id).limit(1);\n        if (usageFetchErr) {\n            console.error(\"[BLOCKS][USAGE][POST] Failed to fetch usage row:\", usageFetchErr, {\n                user_id: site.user_id\n            });\n        }\n        if (usageRows && usageRows.length > 0) {\n            const { used, quota, cycle_end } = usageRows[0];\n            const now = new Date();\n            if (!cycle_end || new Date(cycle_end) < now) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"quota_exceeded\",\n                    details: \"API quota reached or subscription expired.\"\n                }, {\n                    status: 429\n                });\n            } else if (quota > 0 && used >= quota) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"quota_exceeded\",\n                    details: \"API quota reached for this account.\"\n                }, {\n                    status: 429\n                });\n            }\n        }\n    }\n    const insert = {\n        site_key,\n        reason,\n        expires_at: expires_at || null\n    };\n    if (type === \"ip\") insert.ip = value;\n    else if (type === \"fingerprint\") insert.fingerprint_hash = value;\n    else return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n        error: \"Invalid type\"\n    }, {\n        status: 400\n    });\n    const { data, error } = await supabase.from(\"manual_blocks\").insert(insert).select().single();\n    if (error) return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n        error: error.message\n    }, {\n        status: 500\n    });\n    // Increment API usage for this user (blocking a fingerprint/IP counts as usage)\n    try {\n        if (site.user_id) {\n            const { data: usageRows, error: usageFetchErr } = await supabase.from(\"user_api_usage\").select(\"used, quota, cycle_end\").eq(\"user_id\", site.user_id).limit(1);\n            if (usageFetchErr) {\n                console.error(\"[BLOCKS][USAGE] Failed to fetch usage row:\", usageFetchErr, {\n                    user_id: site.user_id\n                });\n            }\n            if (usageRows && usageRows.length > 0) {\n                const { used, quota, cycle_end } = usageRows[0];\n                const now = new Date();\n                if (!cycle_end || new Date(cycle_end) < now) {\n                    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                        error: \"quota_exceeded\",\n                        details: \"API quota reached or subscription expired.\"\n                    }, {\n                        status: 429\n                    });\n                }\n                const currentUsed = used || 0;\n                // quota logic continues...\n                const { error: usageUpdateErr } = await supabase.from(\"user_api_usage\").update({\n                    used: currentUsed + 1,\n                    updated_at: new Date().toISOString()\n                }).eq(\"user_id\", site.user_id);\n                if (usageUpdateErr) {\n                    console.error(\"[BLOCKS][USAGE] Failed to increment usage:\", usageUpdateErr, {\n                        user_id: site.user_id\n                    });\n                }\n            } else {\n                // Insert new usage row if not present\n                const { error: usageInsertErr } = await supabase.from(\"user_api_usage\").insert({\n                    user_id: site.user_id,\n                    used: 1,\n                    quota: 0,\n                    updated_at: new Date().toISOString()\n                });\n                if (usageInsertErr) {\n                    console.error(\"[BLOCKS][USAGE] Failed to insert usage row:\", usageInsertErr, {\n                        user_id: site.user_id\n                    });\n                }\n            }\n        }\n    } catch (err) {\n        console.error(\"[BLOCKS][USAGE] Unexpected error incrementing API usage:\", err, {\n            user_id: site.user_id\n        });\n    }\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n        block: data\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/blocks/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/api/withCORS.ts":
/*!*****************************!*\
  !*** ./app/api/withCORS.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withCORS: () => (/* binding */ withCORS)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/../../node_modules/next/dist/server/web/exports/next-response.js\");\n// Reusable CORS middleware for Next.js API routes\n\nfunction withCORS(handler) {\n    return async (req, ...args)=>{\n        if (req.method === \"OPTIONS\") {\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n                status: 204,\n                headers: {\n                    \"Access-Control-Allow-Origin\": req.headers.get(\"origin\") || \"*\",\n                    \"Access-Control-Allow-Credentials\": \"true\",\n                    \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, x-usage-track\"\n                }\n            });\n        }\n        try {\n            const response = await handler(req, ...args);\n            if (response instanceof Response) {\n                // Dynamically set CORS origin\n                const origin = req.headers.get(\"origin\") || \"*\";\n                response.headers.set(\"Access-Control-Allow-Origin\", origin);\n                response.headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n                response.headers.set(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS\");\n                response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization, x-usage-track\");\n                return response;\n            }\n            // If handler returned non-Response, wrap it\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify(response), {\n                headers: {\n                    \"Access-Control-Allow-Origin\": req.headers.get(\"origin\") || \"*\",\n                    \"Access-Control-Allow-Credentials\": \"true\",\n                    \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, x-usage-track\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        } catch (err) {\n            // Always return CORS headers even on error\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                error: err?.message || \"Internal Server Error\"\n            }), {\n                status: 500,\n                headers: {\n                    \"Access-Control-Allow-Origin\": req.headers.get(\"origin\") || \"*\",\n                    \"Access-Control-Allow-Credentials\": \"true\",\n                    \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n                    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, x-usage-track\",\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3dpdGhDT1JTLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQWtEO0FBQ1A7QUFFcEMsU0FBU0MsU0FBU0MsT0FBWTtJQUNuQyxPQUFPLE9BQU9DLEtBQWMsR0FBR0M7UUFDN0IsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFdBQVc7WUFDNUIsT0FBTyxJQUFJTCxrRkFBWUEsQ0FBQyxNQUFNO2dCQUM1Qk0sUUFBUTtnQkFDUkMsU0FBUztvQkFDUCwrQkFBK0JKLElBQUlJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWE7b0JBQ3RFLG9DQUFvQztvQkFDMUIsZ0NBQWdDO29CQUNoQyxnQ0FBZ0M7Z0JBQ2xDO1lBQ0Y7UUFDRjtRQUNBLElBQUk7WUFDRixNQUFNQyxXQUFXLE1BQU1QLFFBQVFDLFFBQVFDO1lBQ3ZDLElBQUlLLG9CQUFvQkMsVUFBVTtnQkFDaEMsOEJBQThCO2dCQUM5QixNQUFNQyxTQUFTUixJQUFJSSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhO2dCQUM1Q0MsU0FBU0YsT0FBTyxDQUFDSyxHQUFHLENBQUMsK0JBQStCRDtnQkFDcERGLFNBQVNGLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLG9DQUFvQztnQkFDekRILFNBQVNGLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLGdDQUFnQztnQkFDckRILFNBQVNGLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDLGdDQUFnQztnQkFDckQsT0FBT0g7WUFDVDtZQUNBLDRDQUE0QztZQUM1QyxPQUFPLElBQUlULGtGQUFZQSxDQUFDYSxLQUFLQyxTQUFTLENBQUNMLFdBQVc7Z0JBQ2hERixTQUFTO29CQUNQLCtCQUErQkosSUFBSUksT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYTtvQkFDdEUsb0NBQW9DO29CQUMxQixnQ0FBZ0M7b0JBQ2hDLGdDQUFnQztvQkFDaEMsZ0JBQWdCO2dCQUNsQjtZQUNGO1FBQ0YsRUFBRSxPQUFPTyxLQUFVO1lBQ2pCLDJDQUEyQztZQUMzQyxPQUFPLElBQUlmLGtGQUFZQSxDQUNyQmEsS0FBS0MsU0FBUyxDQUFDO2dCQUFFRSxPQUFPRCxLQUFLRSxXQUFXO1lBQXdCLElBQ2hFO2dCQUNFWCxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLCtCQUErQkosSUFBSUksT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYTtvQkFDeEUsb0NBQW9DO29CQUN4QixnQ0FBZ0M7b0JBQ2hDLGdDQUFnQztvQkFDaEMsZ0JBQWdCO2dCQUNsQjtZQUNGO1FBRUo7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpc2l0b3JpcS93ZWIvLi9hcHAvYXBpL3dpdGhDT1JTLnRzPzUzNzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUmV1c2FibGUgQ09SUyBtaWRkbGV3YXJlIGZvciBOZXh0LmpzIEFQSSByb3V0ZXNcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhDT1JTKGhhbmRsZXI6IGFueSkge1xuICByZXR1cm4gYXN5bmMgKHJlcTogUmVxdWVzdCwgLi4uYXJnczogYW55W10pID0+IHtcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShudWxsLCB7XG4gICAgICAgIHN0YXR1czogMjA0LFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonLFxuJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ0dFVCxQT1NULE9QVElPTlMnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgeC11c2FnZS10cmFjaycsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGFuZGxlcihyZXEsIC4uLmFyZ3MpO1xuICAgICAgaWYgKHJlc3BvbnNlIGluc3RhbmNlb2YgUmVzcG9uc2UpIHtcbiAgICAgICAgLy8gRHluYW1pY2FsbHkgc2V0IENPUlMgb3JpZ2luXG4gICAgICAgIGNvbnN0IG9yaWdpbiA9IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonO1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgb3JpZ2luKTtcbiAgICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJywgJ3RydWUnKTtcbiAgICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULFBPU1QsT1BUSU9OUycpO1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIHgtdXNhZ2UtdHJhY2snKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgfVxuICAgICAgLy8gSWYgaGFuZGxlciByZXR1cm5lZCBub24tUmVzcG9uc2UsIHdyYXAgaXRcbiAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSwge1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonLFxuJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ0dFVCxQT1NULE9QVElPTlMnLFxuICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgeC11c2FnZS10cmFjaycsXG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAvLyBBbHdheXMgcmV0dXJuIENPUlMgaGVhZGVycyBldmVuIG9uIGVycm9yXG4gICAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZShcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogZXJyPy5tZXNzYWdlIHx8ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InIH0pLFxuICAgICAgICB7XG4gICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IHJlcS5oZWFkZXJzLmdldCgnb3JpZ2luJykgfHwgJyonLFxuJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnR0VULFBPU1QsT1BUSU9OUycsXG4gICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyc6ICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIHgtdXNhZ2UtdHJhY2snLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJ3aXRoQ09SUyIsImhhbmRsZXIiLCJyZXEiLCJhcmdzIiwibWV0aG9kIiwic3RhdHVzIiwiaGVhZGVycyIsImdldCIsInJlc3BvbnNlIiwiUmVzcG9uc2UiLCJvcmlnaW4iLCJzZXQiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyIiwiZXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/withCORS.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/cookie"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fblocks%2Froute&page=%2Fapi%2Fblocks%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fblocks%2Froute.ts&appDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprantikchatterjee%2FDesktop%2FApps%2Fvisitoriq%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();