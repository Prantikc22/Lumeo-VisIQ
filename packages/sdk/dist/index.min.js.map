{"version":3,"sources":["../../../node_modules/tiny-sha256/index.js","../src/index.ts"],"sourcesContent":["(function (global, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine([], factory);\r\n\t} else if (typeof module !== 'undefined' && module.exports){\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\tglobal.sha256 = factory();\r\n\t}\r\n})(this, function () {\r\n\r\nvar sha256 = function sha256(ascii) {\r\n\tfunction rightRotate(value, amount) {\r\n\t\treturn (value>>>amount) | (value<<(32 - amount));\r\n\t};\r\n\t\r\n\tvar mathPow = Math.pow;\r\n\tvar maxWord = mathPow(2, 32);\r\n\tvar lengthProperty = 'length';\r\n\tvar i, j; // Used as a counter across the whole file\r\n\tvar result = '';\r\n\r\n\tvar words = [];\r\n\tvar asciiBitLength = ascii[lengthProperty]*8;\r\n\t\r\n\t//* caching results is optional - remove/add slash from front of this line to toggle\r\n\t// Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\r\n\t// (we actually calculate the first 64, but extra values are just ignored)\r\n\tvar hash = sha256.h = sha256.h || [];\r\n\t// Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\r\n\tvar k = sha256.k = sha256.k || [];\r\n\tvar primeCounter = k[lengthProperty];\r\n\t/*/\r\n\tvar hash = [], k = [];\r\n\tvar primeCounter = 0;\r\n\t//*/\r\n\r\n\tvar isComposite = {};\r\n\tfor (var candidate = 2; primeCounter < 64; candidate++) {\r\n\t\tif (!isComposite[candidate]) {\r\n\t\t\tfor (i = 0; i < 313; i += candidate) {\r\n\t\t\t\tisComposite[i] = candidate;\r\n\t\t\t}\r\n\t\t\thash[primeCounter] = (mathPow(candidate, .5)*maxWord)|0;\r\n\t\t\tk[primeCounter++] = (mathPow(candidate, 1/3)*maxWord)|0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tascii += '\\x80'; // Append '1' bit (plus zero padding)\r\n\twhile (ascii[lengthProperty]%64 - 56) ascii += '\\x00'; // More zero padding\r\n\tfor (i = 0; i < ascii[lengthProperty]; i++) {\r\n\t\tj = ascii.charCodeAt(i);\r\n\t\tif (j>>8) return; // ASCII check: only accept characters in range 0-255\r\n\t\twords[i>>2] |= j << ((3 - i)%4)*8;\r\n\t}\r\n\twords[words[lengthProperty]] = ((asciiBitLength/maxWord)|0);\r\n\twords[words[lengthProperty]] = (asciiBitLength)\r\n\t\r\n\t// process each chunk\r\n\tfor (j = 0; j < words[lengthProperty];) {\r\n\t\tvar w = words.slice(j, j += 16); // The message is expanded into 64 words as part of the iteration\r\n\t\tvar oldHash = hash;\r\n\t\t// This is now the \"working hash\", often labelled as variables a...g\r\n\t\t// (we have to truncate as well, otherwise extra entries at the end accumulate\r\n\t\thash = hash.slice(0, 8);\r\n\t\t\r\n\t\tfor (i = 0; i < 64; i++) {\r\n\t\t\tvar i2 = i + j;\r\n\t\t\t// Expand the message into 64 words\r\n\t\t\t// Used below if \r\n\t\t\tvar w15 = w[i - 15], w2 = w[i - 2];\r\n\r\n\t\t\t// Iterate\r\n\t\t\tvar a = hash[0], e = hash[4];\r\n\t\t\tvar temp1 = hash[7]\r\n\t\t\t\t+ (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25)) // S1\r\n\t\t\t\t+ ((e&hash[5])^((~e)&hash[6])) // ch\r\n\t\t\t\t+ k[i]\r\n\t\t\t\t// Expand the message schedule if needed\r\n\t\t\t\t+ (w[i] = (i < 16) ? w[i] : (\r\n\t\t\t\t\t\tw[i - 16]\r\n\t\t\t\t\t\t+ (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15>>>3)) // s0\r\n\t\t\t\t\t\t+ w[i - 7]\r\n\t\t\t\t\t\t+ (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2>>>10)) // s1\r\n\t\t\t\t\t)|0\r\n\t\t\t\t);\r\n\t\t\t// This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\r\n\t\t\tvar temp2 = (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22)) // S0\r\n\t\t\t\t+ ((a&hash[1])^(a&hash[2])^(hash[1]&hash[2])); // maj\r\n\t\t\t\r\n\t\t\thash = [(temp1 + temp2)|0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\r\n\t\t\thash[4] = (hash[4] + temp1)|0;\r\n\t\t}\r\n\t\t\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\thash[i] = (hash[i] + oldHash[i])|0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (i = 0; i < 8; i++) {\r\n\t\tfor (j = 3; j + 1; j--) {\r\n\t\t\tvar b = (hash[i]>>(j*8))&255;\r\n\t\t\tresult += ((b < 16) ? 0 : '') + b.toString(16);\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n\r\nsha256.code = \"var sha256=function a(b){function c(a,b){return a>>>b|a<<32-b}for(var d,e,f=Math.pow,g=f(2,32),h=\\\"length\\\",i=\\\"\\\",j=[],k=8*b[h],l=a.h=a.h||[],m=a.k=a.k||[],n=m[h],o={},p=2;64>n;p++)if(!o[p]){for(d=0;313>d;d+=p)o[d]=p;l[n]=f(p,.5)*g|0,m[n++]=f(p,1/3)*g|0}for(b+=\\\"\\\\x80\\\";b[h]%64-56;)b+=\\\"\\\\x00\\\";for(d=0;d<b[h];d++){if(e=b.charCodeAt(d),e>>8)return;j[d>>2]|=e<<(3-d)%4*8}for(j[j[h]]=k/g|0,j[j[h]]=k,e=0;e<j[h];){var q=j.slice(e,e+=16),r=l;for(l=l.slice(0,8),d=0;64>d;d++){var s=q[d-15],t=q[d-2],u=l[0],v=l[4],w=l[7]+(c(v,6)^c(v,11)^c(v,25))+(v&l[5]^~v&l[6])+m[d]+(q[d]=16>d?q[d]:q[d-16]+(c(s,7)^c(s,18)^s>>>3)+q[d-7]+(c(t,17)^c(t,19)^t>>>10)|0),x=(c(u,2)^c(u,13)^c(u,22))+(u&l[1]^u&l[2]^l[1]&l[2]);l=[w+x|0].concat(l),l[4]=l[4]+w|0}for(d=0;8>d;d++)l[d]=l[d]+r[d]|0}for(d=0;8>d;d++)for(e=3;e+1;e--){var y=l[d]>>8*e&255;i+=(16>y?0:\\\"\\\")+y.toString(16)}return i};\";\r\n\r\nreturn sha256;\r\n\r\n});","// TypeScript: Explicitly augment global for ThumbmarkJS\nexport {};\ndeclare global {\n  interface Window {\n    ThumbmarkJS?: any;\n    Fingerprint2?: {\n      get(cb: (components: any[]) => void): void;\n    };\n    NEXT_PUBLIC_SITE_URL?: string;\n    FINGERPRINT_FALLBACK_ENABLED?: string;\n    visitoriq?: any;\n  }\n}\n// UMD VisitorIQ SDK\n// Try to import sha256 from tiny-sha256, fallback to window.sha256 for browser UMD\nlet sha256: (input: string) => string\ntry {\n  // @ts-ignore\n  sha256 = require('tiny-sha256').sha256 || require('tiny-sha256')\n} catch {\n  // fallback for browser UMD\n  sha256 = (window as any).sha256\n}\n\nlet lastResult: any = null\nconst OFFLINE_QUEUE_KEY = 'visitoriq_offline_queue'\n\nfunction getResolution() {\n  return `${window.screen.width}x${window.screen.height}`\n}\n\nfunction getTimezoneOffsetMinutes() {\n  return new Date().getTimezoneOffset()\n}\n\nfunction getReferrer() {\n  try {\n    return document.referrer || ''\n  } catch {\n    return ''\n  }\n}\n\nfunction getWebdriver() {\n  return navigator.webdriver || false\n}\n\nasync function detectIncognito() {\n  // StorageManager heuristic\n  if (navigator.storage && navigator.storage.estimate) {\n    try {\n      const estimate = await navigator.storage.estimate()\n      if (estimate.quota && estimate.quota < 120000000) return true\n    } catch {}\n  }\n  // IndexedDB heuristic\n  try {\n    const db = window.indexedDB.open('test')\n    db.onerror = () => true\n    db.onsuccess = () => { db.result.close(); window.indexedDB.deleteDatabase('test') }\n    return false\n  } catch {\n    return true\n  }\n}\n\nfunction loadThumbmarkJS(thumbmarkKey?: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    if (window.ThumbmarkJS) return resolve(window.ThumbmarkJS)\n    const script = document.createElement('script')\n    script.src = thumbmarkKey || 'https://cdn.jsdelivr.net/npm/thumbmarkjs@latest/dist/thumbmark.min.js'\n    script.onload = () => resolve(window.ThumbmarkJS)\n    script.onerror = reject\n    document.head.appendChild(script)\n  })\n}\n\nfunction getCanvasHash() {\n  try {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    ctx!.textBaseline = 'top'\n    ctx!.font = '14px Arial'\n    ctx!.fillText(navigator.userAgent, 2, 2)\n    return sha256(canvas.toDataURL())\n  } catch {\n    return 'canvas-fallback'\n  }\n}\n\nasync function getFingerprintHash(fallbackEnabled: boolean) {\n  // Try ThumbmarkJS canvas/webgl hash\n  if (window.ThumbmarkJS && window.ThumbmarkJS.getCanvasHash) {\n    try {\n      return await window.ThumbmarkJS.getCanvasHash()\n    } catch {}\n  }\n  // Fallback: FingerprintJS OSS (if enabled)\n  if (fallbackEnabled && window.Fingerprint2) {\n    return new Promise<string>(resolve => {\n      window.Fingerprint2!.get((components: any[]) => {\n        const values = components.map((c: any) => c.value).join('')\n        resolve(sha256(values))\n      })\n    })\n  }\n  // Fallback: simple canvas hash\n  return getCanvasHash()\n}\n\nfunction getOfflineQueue() {\n  try {\n    return JSON.parse(localStorage.getItem(OFFLINE_QUEUE_KEY) || '[]')\n  } catch {\n    return []\n  }\n}\nfunction setOfflineQueue(q: any[]) {\n  localStorage.setItem(OFFLINE_QUEUE_KEY, JSON.stringify(q))\n}\n\nasync function flushOfflineQueue(endpoint: string) {\n  const queue = getOfflineQueue()\n  if (!queue.length) return\n  for (const item of queue) {\n    try {\n      await fetch(endpoint, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(item) })\n    } catch {}\n  }\n  setOfflineQueue([])\n}\n\nasync function getGeolocation(): Promise<{lat?: number, lon?: number, accuracy?: number, permission: 'granted'|'denied'|'prompt'}> {\n  if (!navigator.geolocation) return { permission: 'denied' };\n  try {\n    const perm = await navigator.permissions?.query?.({ name: 'geolocation' as PermissionName })\n    let permission: 'granted'|'denied'|'prompt' = perm?.state || 'prompt';\n    return new Promise(resolve => {\n      navigator.geolocation.getCurrentPosition(\n        pos => resolve({\n          lat: pos.coords.latitude,\n          lon: pos.coords.longitude,\n          accuracy: pos.coords.accuracy,\n          permission: 'granted'\n        }),\n        err => resolve({ permission: (err.code === 1 ? 'denied' : 'prompt') }),\n        { enableHighAccuracy: false, timeout: 2000, maximumAge: 60000 }\n      );\n    });\n  } catch {\n    return { permission: 'denied' };\n  }\n}\n\nfunction detectEmulatorHeuristics(): { isEmulator: boolean, reasons: string[] } {\n  const reasons: string[] = [];\n  // Heuristic: Device memory too low/high, touch support mismatch, UA anomalies\n  if ((navigator as any).hardwareConcurrency && (navigator as any).hardwareConcurrency > 16) reasons.push('High hardware concurrency');\n  if ((navigator as any).deviceMemory && ((navigator as any).deviceMemory > 16 || (navigator as any).deviceMemory < 1)) reasons.push('Unusual device memory');\n  if ('ontouchstart' in window === false && /Android|iPhone|iPad|iPod/i.test(navigator.userAgent)) reasons.push('No touch on mobile UA');\n  if (/emulator|sdk|simulator/i.test(navigator.userAgent)) reasons.push('UA mentions emulator');\n  return { isEmulator: reasons.length > 0, reasons };\n}\n\nasync function init({ siteKey, endpoint, onResult, thumbmarkKey, fallbackEnabled, email, botd_result }: {\n  siteKey: string,\n  endpoint?: string,\n  onResult?: (result: any) => void,\n  thumbmarkKey?: string,\n  fallbackEnabled?: boolean,\n  email?: string,\n  botd_result?: any\n}) {\n  endpoint = endpoint || (window.NEXT_PUBLIC_SITE_URL ? window.NEXT_PUBLIC_SITE_URL + '/api/collect-visitor' : '/api/collect-visitor')\n  fallbackEnabled = fallbackEnabled ?? (window.FINGERPRINT_FALLBACK_ENABLED === 'true')\n\n  // Collect signals\n  const userAgent = navigator.userAgent\n  const language = navigator.language\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n  const timezoneOffset = getTimezoneOffsetMinutes()\n  const resolution = getResolution()\n  const referrer = getReferrer()\n  const webdriver = getWebdriver()\n  const incognito = await detectIncognito()\n\n  // Advanced: Get geolocation (GPS) and emulator heuristics\n  const geo = await getGeolocation();\n  const emulator = detectEmulatorHeuristics();\n\n  // Load ThumbmarkJS if not present\n  if (!window.ThumbmarkJS) {\n    try { await loadThumbmarkJS(thumbmarkKey) } catch {}\n  }\n\n  // Get canvas/fingerprint hash\n  const canvasHash = await getFingerprintHash(!!fallbackEnabled)\n\n  // Always get ThumbmarkJS result\n  let thumbmark: any = undefined;\n  try {\n    if (window.ThumbmarkJS) {\n      thumbmark = await new window.ThumbmarkJS.Thumbmark().get();\n    }\n  } catch (e) {\n    thumbmark = undefined;\n  }\n  // Use .thumbmark as fingerprint_hash if available, fallback to old logic\n  const fingerprint_hash = thumbmark && thumbmark.thumbmark\n    ? thumbmark.thumbmark\n    : sha256(userAgent + canvasHash + resolution + timezone);\n\n  // Parse browser and OS from userAgent\n  function parseBrowserOS(ua: string): { browser: string; os: string } {\n    let browser = '', os = '';\n    // Very basic UA parsing (can be replaced with UAParser.js or similar if needed)\n    if (/chrome|crios|crmo/i.test(ua)) browser = 'Chrome';\n    else if (/firefox|fxios/i.test(ua)) browser = 'Firefox';\n    else if (/safari/i.test(ua) && !/chrome|crios|crmo/i.test(ua)) browser = 'Safari';\n    else if (/edg/i.test(ua)) browser = 'Edge';\n    else if (/opr\\//i.test(ua)) browser = 'Opera';\n    else if (/msie|trident/i.test(ua)) browser = 'IE';\n    else browser = (ua.split(' ')[0] || '').split('/')[0];\n\n    if (/windows nt/i.test(ua)) os = 'Windows';\n    else if (/android/i.test(ua)) os = 'Android';\n    else if (/iphone|ipad|ipod/i.test(ua)) os = 'iOS';\n    else if (/macintosh|mac os x/i.test(ua)) os = 'Mac OS';\n    else if (/linux/i.test(ua)) os = 'Linux';\n    else os = 'Unknown';\n    return { browser, os };\n  }\n  const { browser, os } = parseBrowserOS(userAgent);\n\n  const payload: any = {\n    siteKey,\n    fingerprint_hash,\n    userAgent,\n    language,\n    timezone,\n    timezoneOffset,\n    resolution,\n    referrer,\n    incognito,\n    webdriver,\n    thumbmark_details: thumbmark || {},\n    browser,\n    os,\n    geo,\n    emulator\n  };\n\n\n  if (email) payload.email = email;\n  if (botd_result) payload.botd_result = botd_result;\n\n  // Attempt POST, queue if offline\n  try {\n    console.log('VisitorIQ SDK payload', payload);\n    const resp = await fetch(endpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    })\n    lastResult = await resp.json()\n    if (onResult) onResult(lastResult)\n    flushOfflineQueue(endpoint)\n  } catch (err) {\n    // Queue for retry\n    const queue = getOfflineQueue()\n    queue.push(payload)\n    setOfflineQueue(queue)\n  }\n}\n\nfunction getLastResult() {\n  return lastResult\n}\n\nwindow.visitoriq = { init, getLastResult }\nexport { init, getLastResult }\n\n"],"mappings":"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","names":["require_tiny_sha256","__commonJSMin","exports","module","global","factory","sha256","ascii","rightRotate","value","amount","mathPow","maxWord","lengthProperty","i","j","result","words","asciiBitLength","hash","primeCounter","isComposite","candidate","w","oldHash","i2","w15","w2","a","e","temp1","temp2","b","index_exports","__export","getLastResult","init","sha256","lastResult","OFFLINE_QUEUE_KEY","getResolution","getTimezoneOffsetMinutes","getReferrer","getWebdriver","detectIncognito","estimate","db","loadThumbmarkJS","thumbmarkKey","resolve","reject","script","getCanvasHash","canvas","ctx","getFingerprintHash","fallbackEnabled","components","values","c","getOfflineQueue","setOfflineQueue","q","flushOfflineQueue","endpoint","queue","item","getGeolocation","permission","pos","err","detectEmulatorHeuristics","reasons","init","siteKey","onResult","email","botd_result","userAgent","language","timezone","timezoneOffset","resolution","referrer","webdriver","incognito","geo","emulator","canvasHash","thumbmark","fingerprint_hash","parseBrowserOS","ua","browser","os","payload","getLastResult"]}